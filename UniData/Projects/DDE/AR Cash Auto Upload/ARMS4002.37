     SUBROUTINE ARMS4002.37
* Upload AR Check Batch from Excel File through DDE
* VERSION 8.2.3
*
* 22 SEP 14 8.2.3 juntan PRJ*JUNTAN.70-AR cash auto upload business rule adjustment and unappl
* 10 SEP 13 8.2.3 juntan PRJ*ARM157D.1-(Sub #1) AUTO CASH APPLICATION OF EMCO PAYMENT
* 19 NOV 12 8.2.3 juntan PRJ*ARM157D-AUTO CASH APPLICATION OF EMCO PAYMENT
*
*
*
*
****************************************
*
*   IPEX Inc. - INFOFLO Release 8.2
*
*    Copyright (c) 1998, Ipex Inc.
*
*         All Rights Reserved
*
****************************************
     $INCLUDE IIPLUS.TOP
     PROGRAM='ARMS4002.37'
     $INCLUDE IIPLUS.TEXTLOAD
     $INCLUDE IIPLUS.DEBUG

     $INCLUDE TUBP TU.API.H
     $INCLUDE TUBP ROC.H

**************************************************************************
*
* DESCRIPTION:
* ===========
*              This program is used to auto load A/R check batch from
*              source excel file (Unapp Worksheet).
*
* MODIFICATIONS:
* =============
*
*              2014/09/22 juntan JUNTAN.70 - Add extra pre-validation for
*                                            unapply upload process.
*              2013/09/03 juntan ARM157D.1 - Enhancement for project ARM157D.
*              2011/02/10 juntan ARM157D - Initial Creation.
*
**************************************************************************

A100_MAIN: 

   GOSUB A200_INITIALIZATION
   IF RTN.FLAG THEN
      GO A100_EXIT
   END

   GOSUB A300_OPEN_FILES
   IF RTN.FLAG THEN
      GO A100_EXIT
   END

   GOSUB A400_MAIN_PROCESS
   IF RTN.FLAG THEN
      GO A100_EXIT
   END

A100_EXIT: 
   GO A500_CONCLUSION


****************************************
* Definition of local variables & initialization of other variables.
****************************************
A200_INITIALIZATION: 

   RTN.FLAG               = 0
   STATUS                 = 0
   HEXCEL                 = ''
   APPLICATION            = ''
   TOPIC                  = ''
   L_SYSTEM_TOPICS        = ''
   L_QUERY                = ''
   L_JUNK                 = ''
   L_DONE                 = ''
   L_OPEN_EXCEL_FLAG      = 0
   L_RF                   = ''       ;* excel row reference
   L_TOT                  = 3
   L_WS_NAME              = 'Unapp'  ;* excel worksheet name
   L_CELL_RANGE           = ''
   L_MAX_ROWS             = 50       ;* due to the DATA queue size limit

   L_REF_NUM_LIST         = ''  ;* reference number list retrieved from Unapp worksheet
   L_GOOD_REF_NUM_LIST    = ''
   L_REF_NUM              = ''
   L_GROSS_AMT_LIST       = ''  ;* net amount list retrieved from Unapp worksheet
   L_GOOD_GROSS_AMT_LIST  = ''
   L_GROSS_AMT            = ''
   L_ACCT_NUM_LIST        = ''  ;* account number list retrieved from Unapp worksheet
   L_GOOD_ACCT_NUM_LIST   = ''
   L_ACCT_NUM             = ''
   L_VALIDATION_FAILED    = 0
   L_STATUS_MSG_LIST      = ''
   L_RTN_FLAG             = ''
   L_KEY                  = ''
   L_REC                  = ''
   L_INC                  = 0
   L_CNT                  = 0
   L_POS                  = 0
   L_START_POS            = 0
   L_END_POS              = 0
   L_TEST_WS_NAME         = ''

A200_EXIT: 
   RETURN


****************************************
* Open the files needed in this subroutine.
****************************************
A300_OPEN_FILES:

   CALL SB.OPEN.FILE("CUSTMST",CUSTMST,FILE.ERR)
   IF FILE.ERR THEN
      CALL SB.PROCESS("SYS0061,IP2564\":"CUSTMST")
      RTN.FLAG = 1
      GO A300_EXIT
   END

*** juntan \/ JUNTAN.70 - 2014/09/22
   CALL SB.OPEN.FILE("ARIV",ARIV,FILE.ERR)
   IF FILE.ERR THEN
      CALL SB.PROCESS("SYS0061,IP2564\":"ARIV")
      RTN.FLAG = 1
      GO A300_EXIT
   END

   CALL SB.OPEN.FILE("ARIVPURGE",ARIVPURGE,FILE.ERR)
   IF FILE.ERR THEN
      CALL SB.PROCESS("SYS0061,IP2564\":"ARIVPURGE")
      RTN.FLAG = 1
      GO A300_EXIT
   END
*** juntan /\ JUNTAN.70 - 2014/09/22

A300_EXIT: 
   RETURN


****************************************
* Main process structural logic 
****************************************
A400_MAIN_PROCESS:

   GOSUB B100_DDE_CONNECTION_UNAPP_WS
   IF RTN.FLAG THEN
      GO A400_EXIT
   END

   GOSUB B200_READ_UNAPP_WS
   IF RTN.FLAG THEN
      GO A400_EXIT
   END

   GOSUB B300_DATA_VALIDATION_UNAPP_WS
   IF RTN.FLAG THEN
      GO A400_EXIT
   END

   GOSUB B400_LOAD_DATA_UNAPP_WS
   IF RTN.FLAG THEN
      GO A400_EXIT
   END

A400_EXIT: 
   RETURN


****************************************
* Final processing.
****************************************
A500_CONCLUSION: 

   IF RTN.FLAG THEN
      BEGIN CASE
         CASE L_RTN_FLAG = "Q"
            CALL SB.DISP(9, "Error occurred, program aborted")
         CASE L_RTN_FLAG = "A"
            CALL SB.DISP(3, "Please open your Excel document first before starting the upload process.")
            CALL SB.DISP(9, "Please open your Excel document first before starting the upload process.")
         CASE L_RTN_FLAG = "E"
            CALL SB.DISP(3, "No check record found on Unapp worksheet.")
            CALL SB.DISP(3, "No check record found on Unapp worksheet.")
         CASE L_RTN_FLAG = "AA"
            CALL SB.DISP(3, "Customer # ":L_ACCT_NUM:" and Reference # ":L_REF_NUM:" already entered on screen line ":L_POS:", program aborted.")
            CALL SB.DISP(9, "Customer # ":L_ACCT_NUM:" and Reference # ":L_REF_NUM:" already entered on screen line ":L_POS:", program aborted.")
         CASE L_RTN_FLAG = "F"
            CALL SB.DISP(3, "Error found on your excel file, please verify it.")
            CALL SB.DISP(9, "Error found on your excel file, please verify it.")
         CASE L_RTN_FLAG = "C"
            CALL SB.DISP(9, "Upload process is cancelled by the user.")
      END CASE
   END

A500_EXIT: 
   RTN.FLAG = 0
   REFRESH = -2
   GO 9999


****************************************
* Establish DDE connection to By Reference worksheet
****************************************
B100_DDE_CONNECTION_UNAPP_WS:

   *** Check Opened Excel Document ***
   CALL SB.DISP(9, "Verifying opened excel")
   CALL TU.DDE.CONNECT('EXCEL', 'System', HEXCEL, RTN.FLAG)
   IF RTN.FLAG THEN
      L_RTN_FLAG = "A"
      GO B100_EXIT
   END ELSE
      CALL TU.DDE.READ(HEXCEL, 'Topics', 10, L_SYSTEM_TOPICS, RTN.FLAG)
      IF RTN.FLAG THEN
         CALL SB.PROCESS("SYS0061,IP2566\":"System Topics")
         L_RTN_FLAG = "Q"
         GO B100_EXIT
      END
      SWAP CHAR(9) WITH @AM IN L_SYSTEM_TOPICS
      FINDSTR L_WS_NAME IN L_SYSTEM_TOPICS SETTING L_POS ELSE L_POS = 0
      IF L_POS # 0 THEN
         TOPIC = L_SYSTEM_TOPICS<L_POS>
         L_START_POS = INDEX(TOPIC,"]",1) + 1
         L_END_POS = LEN(TOPIC)
         L_TEST_WS_NAME = TOPIC[L_START_POS,L_END_POS]
      END
      IF L_WS_NAME # TRIM(L_TEST_WS_NAME) THEN
         CALL SB.PROCESS("SYS0061,IP2664\":L_WS_NAME)
         RTN.FLAG = 1
         L_RTN_FLAG = "Q"
         GO B100_EXIT
      END
   END

   *** Establish DDE Connection between Excel and SBClient ***
   CALL SB.DISP(9, "Establishing DDE connection")
   CALL TU.DDE.CONNECT('EXCEL', TOPIC, HEXCEL, RTN.FLAG)
   IF RTN.FLAG THEN
      CALL SB.PROCESS("SYS0061,IP2568")
      L_RTN_FLAG = "Q"
      GO B100_EXIT
   END

   *** Verify System Language ***
   CALL SB.DISP(9, "Verifying System Language":@AM:0:@AM:L_TOT)
   CALL TU.DDE.READ(HEXCEL, 'R1C1..R1C1', 10, L_HEADER, RTN.FLAG)
   IF RTN.FLAG THEN
      CALL TU.DDE.READ(HEXCEL, 'L1C1..L1C1', 10, L_HEADER, RTN.FLAG)
      IF RTN.FLAG THEN
         CALL SB.PROCESS("SYS0061,IP2566\":"System Language")
         L_RTN_FLAG = "Q"
         GO B100_EXIT
      END
      L_RF = 'L'    ;* French environment
   END ELSE
      L_RF = 'R'    ;* English environment
   END

B100_EXIT:
   RETURN


****************************************
* Read data from By Reference worksheet.
****************************************
B200_READ_UNAPP_WS:

   *** Read Unapplied Cash Amount ***
   CALL SB.DISP(9, "Unapp -> Loading Unapplied Cash Amount":@AM:2:@AM:L_TOT)
   CALL TU.DDE.READ(HEXCEL, L_RF:"2C1..":L_RF:L_MAX_ROWS+1:"C1", 10, L_GROSS_AMT_LIST, RTN.FLAG)
   IF RTN.FLAG THEN
      CALL SB.PROCESS("SYS0061,IP2566\":"Unapplied Cash Amount")
      L_RTN_FLAG = "Q"
      GO B200_EXIT
   END
   L_GROSS_AMT_LIST = TRIM(L_GROSS_AMT_LIST,CHAR(32),'A') ;* trim all spaces
   L_GROSS_AMT_LIST = TRIM(L_GROSS_AMT_LIST,CHAR(36),'A') ;* trim all $ signs
   L_GROSS_AMT_LIST = TRIM(L_GROSS_AMT_LIST,CHAR(44),'A') ;* trim all commas

   *** Read Customer Account Number ***
   CALL SB.DISP(9, "Unapp -> Loading Customer Account Number":@AM:3:@AM:L_TOT)
   CALL TU.DDE.READ(HEXCEL, L_RF:"2C2..":L_RF:L_MAX_ROWS+1:"C2", 10, L_ACCT_NUM_LIST, RTN.FLAG)
   IF RTN.FLAG THEN
      CALL SB.PROCESS("SYS0061,IP2566\":"Customer Account Number")
      L_RTN_FLAG = "Q"
      GO B200_EXIT
   END

   *** Read Reference Number ***
   CALL SB.DISP(9, "Unapp -> Loading Unapplied Reference Number":@AM:1:@AM:L_TOT)
   CALL TU.DDE.READ(HEXCEL, L_RF:"2C3..":L_RF:L_MAX_ROWS+1:"C3", 10, L_REF_NUM_LIST, RTN.FLAG)
   IF RTN.FLAG THEN
      CALL SB.PROCESS("SYS0061,IP2566\":"Unapplied Reference Number")
      L_RTN_FLAG = "Q"
      GO B200_EXIT
   END

B200_EXIT:
   RETURN


****************************************
* By Reference worksheet data validation  
****************************************
B300_DATA_VALIDATION_UNAPP_WS:

   *** Quit if Nothing Found ***
   L_TOTAL_LINES = DCOUNT(L_GROSS_AMT_LIST,@VM)
   IF L_TOTAL_LINES > L_MAX_ROWS THEN
      L_TOTAL_LINES = L_MAX_ROWS
   END
   CALL SB.DISP(9, "Unapp -> validating check data, please wait":@AM:L_INC:@AM:L_TOTAL_LINES)
   IF L_REF_NUM_LIST = '' THEN
      RTN.FLAG = 1
      L_RTN_FLAG = "E"
      GO B300_EXIT
   END

   *** First Pass for Verifing Check Data ***
   L_TOTAL_LINES = DCOUNT(L_REF_NUM_LIST,@VM)
   FOR L_INC = 1 TO L_TOTAL_LINES
      *** Display Progress Bar ***
      IF DCOUNT(L_GROSS_AMT_LIST,@VM) > 50 THEN
         IF NOT(MOD(L_INC,50)) THEN
            CALL SB.DISP(9, "Unapp -> validating check data, please wait":@AM:L_INC:@AM:L_TOTAL_LINES)
         END
      END ELSE
         CALL SB.DISP(9, "Unapp -> validating check data, please wait":@AM:L_INC:@AM:L_TOTAL_LINES)
      END

      *** Retrieve Per Unapplied Cash Record ***
      L_GROSS_AMT = TRIM(L_GROSS_AMT_LIST<1,L_INC>)
      L_ACCT_NUM = TRIM(L_ACCT_NUM_LIST<1,L_INC>)
      L_REF_NUM = TRIM(L_REF_NUM_LIST<1,L_INC>)

      *** Quit either of the following value is empty ***
      IF L_GROSS_AMT = "" OR L_ACCT_NUM = "" OR L_REF_NUM = "" THEN
         L_TOTAL_LINES = L_INC - 1
         EXIT ;* EOF
      END

      *** Stop if Customer # and Unapplied Reference # already entered on screen ***
      LOCATE L_ACCT_NUM IN WORK<51> SETTING L_POS ELSE L_POS = 0
      IF L_POS # 0 THEN
         LOCATE L_REF_NUM IN WORK<49> SETTING L_POS ELSE L_POS = 0
         IF L_POS # 0 THEN
            RTN.FLAG = 1
            L_RTN_FLAG = "AA"
            GO B300_EXIT
         END
      END

      *** Validate Customer Account # ***
      L_KEY = WORK<1>:"*":L_ACCT_NUM
      READ L_REC FROM CUSTMST,L_KEY ELSE L_REC = ""
      IF L_REC = "" OR L_REC<13> = 1 OR L_REC<31> = "" OR (LEN(L_ACCT_NUM) = 7 AND L_REC<2> # L_ACCT_NUM) OR L_REC<46> # WORK<9> THEN
         L_VALIDATION_FAILED = 1
         L_STATUS_MSG_LIST<1,L_INC> = "Invalid customer account #."
         CONTINUE
      END

      *** juntan \/ JUNTAN.70 - 2014/09/22
      *** Validate if the unapplied reference # contains any spaces ***
      IF INDEX(L_REF_NUM,' ',1) THEN
         L_VALIDATION_FAILED = 1
         L_STATUS_MSG_LIST<1,L_INC> = "Unapplied reference # should not contain any space(s)."
         CONTINUE
      END

      *** Validate if unapplied reference # already exists ***
      L_KEY = WORK<1>:"*":L_ACCT_NUM:"*":L_REF_NUM
      READ L_REC FROM ARIV, L_KEY THEN
         L_VALIDATION_FAILED = 1
         L_STATUS_MSG_LIST<1,L_INC> = L_REF_NUM:" already exists in Invoice File for customer # ":L_ACCT_NUM:"."
         CONTINUE
      END
      READ L_REC FROM ARIVPURGE, L_KEY THEN
         L_VALIDATION_FAILED = 1
         L_STATUS_MSG_LIST<1,L_INC> = L_REF_NUM:" already exists in Invoice File for customer # ":L_ACCT_NUM:"."
         CONTINUE
      END
      *** juntan /\ JUNTAN.70 - 2014/09/22

      *** Check Repeated Customer Account # and Unapplied Reference # ***
      LOCATE L_REF_NUM IN L_GOOD_REF_NUM_LIST<1> SETTING L_POS THEN
         IF L_ACCT_NUM = L_GOOD_ACCT_NUM_LIST<1,L_POS> THEN
            L_VALIDATION_FAILED = 1
            L_STATUS_MSG_LIST<1,L_INC> = "Duplicate reference #."
            CONTINUE
         END
      END

      *** Save Good Record to Lists ***
      L_STATUS_MSG_LIST<1,L_INC> = "Ok to upload."
      L_CNT += 1
      L_GOOD_GROSS_AMT_LIST<1,L_CNT> = L_GROSS_AMT
      L_GOOD_ACCT_NUM_LIST<1,L_CNT> = L_ACCT_NUM
      L_GOOD_REF_NUM_LIST<1,L_CNT> = L_REF_NUM

   NEXT L_INC

   SWAP @VM WITH CHAR(10) IN L_STATUS_MSG_LIST
   L_CELL_RANGE = L_RF:"2C4..":L_RF:L_TOTAL_LINES+1:"C4"
   CALL TU.DDE.WRITE(HEXCEL, L_CELL_RANGE, 10, L_STATUS_MSG_LIST<1>, RTN.FLAG)
   IF RTN.FLAG THEN
      CALL SB.PROCESS("Error occurred while writing error message to Excel.")
      RTN.FLAG = 1
      L_RTN_FLAG = "Q"
      GO B300_EXIT
   END

   CALL SB.DISP(9, "Unapp Check Data Validation Completed.":@AM:L_INC-1:@AM:DCOUNT(L_REF_NUM_LIST,@VM))

   IF L_VALIDATION_FAILED THEN
      RTN.FLAG = 1
      L_RTN_FLAG = "F"
   END ELSE
      CALL SB.DISP(4,'ARMD4002.15')   ;* Dialog Box
      IF RTN.FLAG THEN                ;* Start upload
         RTN.FLAG = 0
      END ELSE                        ;* User cancelled the upload
         RTN.FLAG = 1
         L_RTN_FLAG = "C"
      END
   END

B300_EXIT:
   RETURN


****************************************
* Load data from Unapp worksheet to entry screen
****************************************
B400_LOAD_DATA_UNAPP_WS:

   CLEARDATA
   L_TOTAL_LINES = DCOUNT(L_GOOD_GROSS_AMT_LIST,@VM)
   FOR L_INC = 1 TO L_TOTAL_LINES
      *** Display Progress Bar ***
      IF DCOUNT(L_GOOD_GROSS_AMT_LIST,@VM) > 50 THEN
         IF NOT(MOD(L_INC,50)) THEN
            CALL SB.DISP(9, "Unapp -> uploading check data, please wait":@AM:L_INC:@AM:L_TOTAL_LINES)
         END
      END ELSE
         CALL SB.DISP(9, "Unapp -> uploading check data, please wait":@AM:L_INC:@AM:L_TOTAL_LINES)
      END

      *** Retrieve Per Unapplied Cash Record ***
      L_GROSS_AMT = L_GOOD_GROSS_AMT_LIST<1,L_INC>
      L_ACCT_NUM = L_GOOD_ACCT_NUM_LIST<1,L_INC>
      L_REF_NUM = L_GOOD_REF_NUM_LIST<1,L_INC>

      *** Quit When an Empty Row is Reached ***
      IF L_GROSS_AMT = "" AND L_ACCT_NUM = "" AND L_REF_NUM = "" THEN
         EXIT
      END

      *** Staff entry value on screen  ***
      L_GROSS_AMT = TRIM(L_GROSS_AMT,"$","A")
      L_GROSS_AMT = TRIM(L_GROSS_AMT,",","A")
      L_GROSS_AMT = TRIM(L_GROSS_AMT," ","A")
      DATA L_GROSS_AMT
      DATA L_ACCT_NUM
      DATA L_REF_NUM
      DATA "@22"
   NEXT L_INC

   CALL SB.DISP(9, "Unapp Check Data Upload Completed.":@AM:L_INC-1:@AM:L_TOTAL_LINES)

B400_EXIT:
   RETURN


****************************************
* Exit  
****************************************

   $INCLUDE IIPLUS.BOTTOM

   END
