   SUBROUTINE PIMS9100.3
* Integrate new Infoflo product CPN & UPC to PIM
* VERSION 8.2.3
*
* 24 NOV 16 8.2.3 juntan PRJ*SPC076D.14-PIM TO INFOFLO OUTBOUND INTEGRATION
*
*
*
*
*
*
*
****************************************
*
*   IPEX Inc. - INFOFLO Release 8.2
*
*    Copyright (c) 1998, Ipex Inc.
*
*         All Rights Reserved
*
****************************************

   PROGRAM = 'PIMS9100.3'

**************************************************************************
*
* DESCRIPTION:
* ============
*              This program is used to send Infoflo new CPN & UPC to PIM.
*
*              <<<NOTE>>>
*
* MODIFICATIONS:
* ==============
*              2016/11/23 juntan SPC076D.14 - Initial creation.
*
**************************************************************************


A100_MAIN:

   GOSUB A200_INITIALIZATION
   IF RTN_CODE # "" THEN
      GO A100_EXIT
   END

   GOSUB A300_OPEN_FILES
   IF RTN_CODE # "" THEN
      GO A100_EXIT
   END

   GOSUB A400_MAIN_PROCESS
   IF RTN_CODE # "" THEN
      GO A100_EXIT
   END

A100_EXIT:
   GO A500_CONCLUSION


****************************************
* Define & initialize variables.
****************************************
A200_INITIALIZATION:

   RTN.FLAG       = 0
   RTN_STATUS     = 0

   TIMESTAMP      = ""
   RTN_CODE       = ""
   RTN_MSG        = ""

   PRODUCT_STEPID = ""
   PRODUCT_CPN    = ""
   PRODUCT_UPC    = ""
   SYSCON_KEYS    = ""
   IN_DATA        = ""
   OUT_DATA       = ""

A200_EXIT:
   RETURN


****************************************
* Open any data files requried.
****************************************
A300_OPEN_FILES:

   ;******************
   ;* Item Master File
   ;******************
   OPEN "ITMMST" TO ITMMST
   ON ERROR
      RTN_CODE = "A300-ERROR-1-1"
      RTN_MSG  = "Fatal error occurs while opening file ITMMST {":STATUS():"}."
      GO A300_EXIT
   END THEN
      ITMMST_ID  = ""
      ITMMST_REC = ""
   END ELSE
      RTN_CODE = "A300-ERROR-1-2"
      RTN_MSG  = "Unable to open file ITMMST {":STATUS():"}."
      GO A300_EXIT
   END

   ;***************************
   ;* Item Cross Reference File
   ;***************************
   OPEN "ITMXRF" TO ITMXRF
   ON ERROR
      RTN_CODE = "A300-ERROR-2-1"
      RTN_MSG  = "Fatal error occurs while opening file ITMXRF {":STATUS():"}."
      GO A300_EXIT
   END THEN
      ITMXRF_ID  = ""
      ITMXRF_REC = ""
   END ELSE
      RTN_CODE = "A300-ERROR-2-2"
      RTN_MSG  = "Unable to open file ITMXRF {":STATUS():"}."
      GO A300_EXIT
   END

   ;**************
   ;* SYSCON Table
   ;**************
   OPEN "SYSCON" TO SYSCON
   ON ERROR
      RTN_CODE = "A300-ERROR-3-1"
      RTN_MSG  = "Fatal error occurs while opening file SYSCON {":STATUS():"}."
      GO A300_EXIT
   END THEN
      SYSCON_ID  = ""
      SYSCON_REC = ""
   END ELSE
      RTN_CODE = "A300-ERROR-3-2"
      RTN_MSG  = "Unable to open file SYSCON {":STATUS():"}."
      GO A300_EXIT
   END

A300_EXIT:
   RETURN


****************************************
* Main process procedures.
****************************************
A400_MAIN_PROCESS:

   *** Security Check ***
   SYSCON_ID = "PIM.REST.SERVICE.NEW.PRODUCT.CREATION"
   READV USERID_LIST FROM SYSCON, SYSCON_ID, 3
   ON ERROR
      RTN_CODE = "A400-ERROR-1-1"
      RTN_MSG  = "Unable to read record ":SYSCON_ID:" in SYSCON file."
      GO A400_EXIT
   END THEN
      IF NOT(INDEX(USERID_LIST, @LOGNAME, 1)) THEN
         RTN_CODE = "A400-ERROR-1-2"
         RTN_MSG = "You are not authorized to run this program, please contact Infoflo administrator to grant you the access."
         GO A400_EXIT
      END
   END ELSE
      RTN_CODE = "A400-ERROR-1-2"
      RTN_MSG  = "Record ":SYSCON_ID:" does not exist in SYSCON file."
      GO A400_EXIT
   END

   *** Read/Validate Infoflo new product CPN from TCL input ***
   CRT "Enter the new product CPN: "
   INPUT VALUE
   IF TRIM(VALUE) = "" THEN
      GO A400_EXIT
   END
   ITMMST_ID = TRIM(VALUE)
   READ ITMMST_REC FROM ITMMST, ITMMST_ID
   ON ERROR
      RTN_CODE = "A400-ERROR-2-1"
      RTN_MSG  = "Unable to read record ":ITMMST_ID:" in ITMMST file."
      GO A400_EXIT
   END THEN
      *** Get key info ***
      PRODUCT_CPN    = ITMMST_ID
      PRODUCT_UPC    = ITMMST_REC<141>
      PRODUCT_STEPID = ITMMST_REC<185>

      *** Read/Validate STEPID from TCL input ***
      CRT "Enter PIM STEPID associated with the new CPN ":PRODUCT_CPN:": "
      INPUT VALUE
      IF TRIM(VALUE) = "" THEN
         GO A400_EXIT
      END
      IF TRIM(VALUE) # PRODUCT_STEPID THEN
         RTN_CODE = "A400-ERROR-2-2"
         RTN_MSG  = "Invalid PIM STEPID found: {":VALUE:" -> ":PRODUCT_STEPID:"}"
         GO A400_EXIT
      END

      *** Read/Validate Infoflo product UPC from TCL input ***
      CRT "Enter product UPC associated with the new CPN ":ITMMST_ID:": "
      INPUT VALUE
      IF TRIM(VALUE) = "" THEN
         GO A400_EXIT
      END
      IF TRIM(VALUE) # PRODUCT_UPC THEN
         RTN_CODE = "A400-ERROR-2-3"
         RTN_MSG  = "Invalid product UPC found: {":VALUE:" -> ":PRODUCT_UPC:"}"
         GO A400_EXIT
      END

      *** Set up parameters and call the API program to send key info back to PIM ***
      SYSCON_KEYS<1>   = "PIM.HTTP.SETTINGS"
      SYSCON_KEYS<2,1> = "PIM.REST.SERVICE.NEW.PRODUCT.CREATION"
      SYSCON_KEYS<2,2> = "POST"
      IN_DATA = '["':PRODUCT_STEPID:'","':PRODUCT_CPN:'","':PRODUCT_UPC:'"]'
      CALL SYSS9000.1(SYSCON_KEYS, IN_DATA, OUT_DATA, RTN_STATUS)
      IF @SYSTEM.RETURN.CODE # 0 OR RTN_STATUS # 0 THEN
         RTN_CODE =  "A400-ERROR-2-4"
         RTN_MSG  =  "Program SYSS9000.1 aborted at ":RTN_STATUS<1>:" -> ":RTN_STATUS<2>:" -> {":IN_DATA:"}"
         GO A400_EXIT
      END ELSE
         CRT "The new product key info ":IN_DATA:" has been successfully posted to PIM."
      END
   END ELSE
      RTN_CODE = "A400-ERROR-2-5"
      RTN_MSG  = "Record ":ITMMST_ID:" does not exist in ITMMST file."
      GO A400_EXIT
   END

A400_EXIT:
   RETURN


**********************
* Exception handling *
**********************

A500_CONCLUSION:

   IF RTN_CODE # "" THEN
      MILLISECOND = FIELD(SYSTEM(12)/1000,'.',2)
      BEGIN CASE
         CASE LEN(MILLISECOND) = 0
            MILLISECOND = "000"
         CASE LEN(MILLISECOND) = 1
            MILLISECOND := "00"
         CASE LEN(MILLISECOND) = 2
            MILLISECOND := "0"
      END CASE
      TIMESTAMP = OCONV(FIELD(SYSTEM(12)/1000,'.',1),"MTS"):".":MILLISECOND

      PRINT ""
      PRINT "==> [":TIMESTAMP:"] Program ":PROGRAM:" aborted at ":RTN_CODE:" -> ":RTN_MSG
      PRINT ""
   END

   RTN.FLAG = 0
   REFRESH = -2

A500_EXIT:
   END


****************************************
* Exit
****************************************
*
