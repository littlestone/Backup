     SUBROUTINE SYSS9220.2(ARGS_IN,ARGS_OUT)
* UniData Standard URI Percent-encoding API
* VERSION 8.2.3
*
* 16 FEB 15 8.2.3 juntan PRJ*JUNTAN.77-Ability to decode URI data string contains special char
* 27 FEB 13 8.2.3 juntan PRJ*PUR083D.2-(Sub #2) PO INTERNAL CONTROLS
*
*
*
*
*
****************************************
*
*   IPEX Inc. - INFOFLO Release 8.2
*
*    Copyright (c) 1998, Ipex Inc.
*
*         All Rights Reserved
*
****************************************

     PROGRAM='SYSS9220.2'

**************************************************************************
*
* DESCRIPTION:
* ============
*
*              This program is used to do Percent-encoding for URI data string (ASCII CP850)
*              before it could be passed to the web browser as a valid URL address
*              due to the fact that certain special characters cannot be used explicitly
*              within an URL address.
*
*              <<<NOTE>>>
*              a). Input parameter:
*                  ARGS_IN<1> -> Raw URL string
*                  ARGS_IN<2> -> Flag to convert space to + for certain schemes
*              b). Output parameter:
*                  ARGS_OUT<1> -> Encoded URL string
*                  ARGS_OUT<2> -> Error message if there is any
*
*              Perform standard URL encoding for UV/UD ascii. ISO-8859-1
*              (ISO-Latin) character set.
*
*              Author: Stuart Boydell 17-Dec-2004
*
*              Basic example:
*                 deffun URLEncode(string) ;* calling *URLEncode ;*[use 'calling globID' if you globally catalogue the program]
*                 encodedString = URLEncode(unencodedString)
*
*              Only alphanumerics [0-9a-zA-Z], the special characters
*              $-_.+!*'(), and reserved characters used for their reserved
*              purposes may be used unencoded within a URL.
*
*              This process encodes unsafe characters to their URL safe
*              equivalent. eg. char(2) -> "%02"
*
*              First encodes char(37) "%" to %25 then loops through other
*              ASCII.CODES ranges.
*
*              Ranges of ascii codes of all characters to be encoded:
*                 0-31     ASCII Control Characters   Unsafe
*                 32-47    Reserved Characters  ' '!?#$%&'()*+,-./   Unsafe
*                 48-57    ASCII Characters and Numbers  0-9   Safe
*                 58-64    Reserved Characters  :;<=>?@  Unsafe
*                 65-90    ASCII Characters  A-Z   Safe
*                 91-96    Reserved Characters  [\]^_`   Unsafe
*                 97-122   ASCII Characters  a-z   Safe
*                 123-126  Reserved Characters  {|}~  Unsafe
*                 127      Control Characters   ' '   Unsafe
*                 128-255  Non-ASCII Characters    ' '   Unsafe
*
* MODIFICATIONS:
* ==============
*              2015/02/16 juntan JUNTAN.77 - Ability to decode URI data string contains special character(s)
*                                            (i.e. Non-ASCII Characters 128-255) 
*              2013/02/27 juntan PUR083D.2 - Initial creation.
*
**************************************************************************


A100_MAIN:

   GOSUB A200_INITIALIZATION
   IF L_ERR_CODE # "" THEN
      GO A100_EXIT
   END

   GOSUB A300_OPEN_FILES
   IF L_ERR_CODE "" THEN
      GO A100_EXIT
   END

   GOSUB A400_MAIN_PROCESS
   IF L_ERR_CODE # "" THEN
      GO A100_EXIT
   END

A100_EXIT:
   GO A500_CONCLUSION


****************************************
* Definition of local variables & initialization of other variables.
****************************************
A200_INITIALIZATION:

   ARGS_OUT = ""

   RTN.FLAG = 0
   L_ERR_CODE = ""
   L_ERR_MSG = ""

   L_RAW_URL = ""
   L_ACTION_FLAG = ""

   L_PERCENT = ""
   L_SPACE = ""
   L_PLUS = ""

   L_ASCII_START = ""
   L_ASCII_END = ""
   L_MAXRANGE = ""

   I = 0
   J = 0
   L_JCHAR = ""
   
A200_EXIT:
   RETURN


****************************************
* Open the files needed in this subroutine.
****************************************
A300_OPEN_FILES:

   OPEN "SYSCON" TO SYSCON ELSE
      L_ERR_CODE = "A300-ERROR-1"
      GO A300_EXIT
   END

A300_EXIT:
   RETURN


****************************************
* Main process logic structure.
****************************************
A400_MAIN_PROCESS:

   GOSUB B100_DEFINE_ENCODING_CHARACTER_SET
   IF L_ERR_CODE # "" THEN
      GO A400_EXIT
   END

   GOSUB B200_ENCODE_URL
   IF L_ERR_CODE # "" THEN
      GO A400_EXIT
   END

A400_EXIT:
   RETURN


****************************************
* Define encoding character set (ASCII).
****************************************
B100_DEFINE_ENCODING_CHARACTER_SET:

   *** Validate input arguments ***
   IF ARGS_IN<1> = "" THEN
      L_ERR_CODE = "B100-ERROR-1"
      L_ERR_MSG = "Infoflo program ":PROGRAM:" aborted at ":L_ERR_CODE:" ---> No input URL string found."
      GO B100_EXIT
   END

   IF ARGS_IN<2> = "" THEN
      ARGS_IN<2> = "N"  ;* default to "N"
   END ELSE
      IF ARGS_IN<2> # "Y" AND ARGS_IN<2> # "N" THEN
         L_ERR_CODE = "B100-ERROR-2"
         L_ERR_MSG = "Infoflo program ":PROGRAM:" aborted at ":L_ERR_CODE:" ---> Invalid action flag ":ARGS_IN<2>:" found."
         GO B100_EXIT
      END
   END

   L_RAW_URL = ARGS_IN<1>
   L_ACTION_FLAG = ARGS_IN<2>

   *** 'Special' encoding characters ***
   L_PERCENT = '%'
   L_SPACE   = ' '
   L_PLUS    = '+'

   *** 'Normal' encoding start/end characters (decimal ascii) ***
   L_ASCII_START = '00':@AM:'38':@AM:'47':@AM:'58':@AM:'91':@AM:'96':@AM:'123'
   L_ASCII_END   = '36':@AM:'44':@AM:'47':@AM:'64':@AM:'94':@AM:'96':@AM:'255'
   L_MAXRANGE    = '7'
   
B100_EXIT:
   RETURN


****************************************
* Encode URL for web applciation usage.
****************************************
B200_ENCODE_URL:

   *** Convert 'special' encoding characters "%+[sp]" ***
   ARGS_OUT<1> = CHANGE(L_RAW_URL,L_PERCENT,L_PERCENT:'25')

   *** Space may be converted to '+' under some schemes ***
   IF L_ACTION_FLAG = "Y" THEN
      ARGS_OUT<1> = CHANGE(ARGS_OUT<1>,L_PLUS,L_PERCENT:'2B')
      ARGS_OUT<1> = CHANGE(ARGS_OUT<1>,L_SPACE,L_PLUS)
   END

   *** Now convert 'normal' character ranges ***
   FOR I = 1 TO L_MAXRANGE
      FOR J = L_ASCII_START<I> TO L_ASCII_END<I>
         L_JCHAR = CHAR(J)  ;*// Get CHAR from decimal value
         *// INDEX() character before CHANGE() - faster
         IF INDEX(ARGS_OUT<1>,L_JCHAR,1) THEN
            ARGS_OUT<1> = CHANGE(ARGS_OUT<1>,L_JCHAR,L_PERCENT:DTX(J))
         END
      NEXT J
   NEXT I

   *_________________________________________________________________________________________________________________________________
   *
   *// http://en.wikipedia.org/wiki/Percent-encoding        
   *// http://www.w3schools.com/tags/ref_urlencode.asp      
   *// http://meyerweb.com/eric/tools/dencoder/             
   *// Need to convert to UTF-8 equivalent percent-encoding for escaping URI data string in ISO-8859-1 encoding. 
   *// CHAR(31) is used as a temporary placeholder to avoid from duplicate SWAP and will be trimed out after.
   *_________________________________________________________________________________________________________________________________
   *
   *                                                                                ASCII      Char     Description
   *_________________________________________________________________________________________________________________________________
   SWAP "%80" WITH "%C":CHAR(31):"3%8":CHAR(31):"7" IN ARGS_OUT                 ;*  128        Ä        Upper case C with cedilla
   SWAP "%81" WITH "%C":CHAR(31):"3%B":CHAR(31):"C" IN ARGS_OUT                 ;*  129        Å        Lower case u with diaeresis
   SWAP "%82" WITH "%C":CHAR(31):"3%A":CHAR(31):"9" IN ARGS_OUT                 ;*  130        Ç        Lower case e with acute
   SWAP "%83" WITH "%C":CHAR(31):"3%A":CHAR(31):"2" IN ARGS_OUT                 ;*  131        É        Lower case a with circumflex
   SWAP "%84" WITH "%C":CHAR(31):"3%A":CHAR(31):"4" IN ARGS_OUT                 ;*  132        Ñ        Lower case a with diaeresis
   SWAP "%85" WITH "%C":CHAR(31):"3%A":CHAR(31):"0" IN ARGS_OUT                 ;*  133        Ö        Lower case a with grave
   SWAP "%86" WITH "%C":CHAR(31):"3%A":CHAR(31):"5" IN ARGS_OUT                 ;*  134        Ü        Lower case a with ring above
   SWAP "%87" WITH "%C":CHAR(31):"3%A":CHAR(31):"7" IN ARGS_OUT                 ;*  135        á        Lower case c with cedilla
   SWAP "%88" WITH "%C":CHAR(31):"3%A":CHAR(31):"A" IN ARGS_OUT                 ;*  136        à        Lower case e with circumflex
   SWAP "%89" WITH "%C":CHAR(31):"3%A":CHAR(31):"B" IN ARGS_OUT                 ;*  137        â        Lower case e with diaeresis
   SWAP "%8A" WITH "%C":CHAR(31):"3%A":CHAR(31):"8" IN ARGS_OUT                 ;*  138        ä        Lower case e with grave
   SWAP "%8B" WITH "%C":CHAR(31):"3%A":CHAR(31):"F" IN ARGS_OUT                 ;*  139        ã        Lower case i with diaeresis
   SWAP "%8C" WITH "%C":CHAR(31):"3%A":CHAR(31):"E" IN ARGS_OUT                 ;*  140        å        Lower case i with circumflex
   SWAP "%8D" WITH "%C":CHAR(31):"3%A":CHAR(31):"C" IN ARGS_OUT                 ;*  141        ç        Lower case i with grave
   SWAP "%8E" WITH "%C":CHAR(31):"3%8":CHAR(31):"4" IN ARGS_OUT                 ;*  142        é        Upper case A with diaeresis
   SWAP "%8F" WITH "%C":CHAR(31):"3%8":CHAR(31):"5" IN ARGS_OUT                 ;*  143        è        Upper case A with ring above
   SWAP "%90" WITH "%C":CHAR(31):"3%8":CHAR(31):"9" IN ARGS_OUT                 ;*  144        ê        Upper case E with acute
   SWAP "%91" WITH "%C":CHAR(31):"3%A":CHAR(31):"6" IN ARGS_OUT                 ;*  145        ë        Lower case ae
   SWAP "%92" WITH "%C":CHAR(31):"3%8":CHAR(31):"6" IN ARGS_OUT                 ;*  146        í        Upper case AE
   SWAP "%93" WITH "%C":CHAR(31):"3%B":CHAR(31):"4" IN ARGS_OUT                 ;*  147        ì        Lower case o with circumflex
   SWAP "%94" WITH "%C":CHAR(31):"3%B":CHAR(31):"6" IN ARGS_OUT                 ;*  148        î        Lower case o with diaeresis
   SWAP "%95" WITH "%C":CHAR(31):"3%B":CHAR(31):"2" IN ARGS_OUT                 ;*  149        ï        Lower case o with grave
   SWAP "%96" WITH "%C":CHAR(31):"3%B":CHAR(31):"B" IN ARGS_OUT                 ;*  150        ñ        Lower case u with circumflex
   SWAP "%97" WITH "%C":CHAR(31):"3%B":CHAR(31):"9" IN ARGS_OUT                 ;*  151        ó        Lower case u with grave
   SWAP "%98" WITH "%C":CHAR(31):"3%B":CHAR(31):"F" IN ARGS_OUT                 ;*  152        ò        Lower case y with diaeresis
   SWAP "%99" WITH "%C":CHAR(31):"3%9":CHAR(31):"6" IN ARGS_OUT                 ;*  153        ô        Upper case O with diaeresis
   SWAP "%9A" WITH "%C":CHAR(31):"3%9":CHAR(31):"C" IN ARGS_OUT                 ;*  154        ö        Upper case U with diaeresis
   SWAP "%9B" WITH "%C":CHAR(31):"3%B":CHAR(31):"8" IN ARGS_OUT                 ;*  155        õ        Lower case o with stroke
   SWAP "%9C" WITH "%C":CHAR(31):"2%A":CHAR(31):"3" IN ARGS_OUT                 ;*  156        ú        Pound sign
   SWAP "%9D" WITH "%C":CHAR(31):"3%9":CHAR(31):"8" IN ARGS_OUT                 ;*  157        ù        Upper case O with stroke
   SWAP "%9E" WITH "%C":CHAR(31):"3%9":CHAR(31):"7" IN ARGS_OUT                 ;*  158        û        Multiplication sign
   SWAP "%9F" WITH "%C":CHAR(31):"6%9":CHAR(31):"2" IN ARGS_OUT                 ;*  159        ü        Lower case f with hook
   SWAP "%A0" WITH "%C":CHAR(31):"3%A":CHAR(31):"1" IN ARGS_OUT                 ;*  160        †        Lower case a with acute
   SWAP "%A1" WITH "%C":CHAR(31):"3%A":CHAR(31):"D" IN ARGS_OUT                 ;*  161        °        Lower case i with acute
   SWAP "%A2" WITH "%C":CHAR(31):"3%B":CHAR(31):"3" IN ARGS_OUT                 ;*  162        ¢        Lower case o with acute
   SWAP "%A3" WITH "%C":CHAR(31):"3%B":CHAR(31):"A" IN ARGS_OUT                 ;*  163        £        Lower case u with acute
   SWAP "%A4" WITH "%C":CHAR(31):"3%B":CHAR(31):"1" IN ARGS_OUT                 ;*  164        §        Lower case n with tilde
   SWAP "%A5" WITH "%C":CHAR(31):"3%9":CHAR(31):"1" IN ARGS_OUT                 ;*  165        •        Upper case N with tilde
   SWAP "%A6" WITH "%C":CHAR(31):"2%A":CHAR(31):"A" IN ARGS_OUT                 ;*  166        ¶        Feminine ordinal indicator
   SWAP "%A7" WITH "%C":CHAR(31):"2%B":CHAR(31):"A" IN ARGS_OUT                 ;*  167        ß        Masculine ordinal indicator
   SWAP "%A8" WITH "%C":CHAR(31):"2%B":CHAR(31):"F" IN ARGS_OUT                 ;*  168        ®        Inverted question mark
   SWAP "%A9" WITH "%C":CHAR(31):"2%A":CHAR(31):"E" IN ARGS_OUT                 ;*  169        ©        Registered sign
   SWAP "%AA" WITH "%C":CHAR(31):"2%A":CHAR(31):"C" IN ARGS_OUT                 ;*  170        ™        Not sign
   SWAP "%AB" WITH "%C":CHAR(31):"2%B":CHAR(31):"D" IN ARGS_OUT                 ;*  171        ´        Vulgar fraction one half
   SWAP "%AC" WITH "%C":CHAR(31):"2%B":CHAR(31):"C" IN ARGS_OUT                 ;*  172        ¨        Vulgar fraction one quarter
   SWAP "%AD" WITH "%C":CHAR(31):"2%A":CHAR(31):"1" IN ARGS_OUT                 ;*  173        ≠        Inverted exclamation mark
   SWAP "%AE" WITH "%C":CHAR(31):"2%A":CHAR(31):"B" IN ARGS_OUT                 ;*  174        Æ        Right-pointing double angle quotation mark
   SWAP "%AF" WITH "%C":CHAR(31):"2%B":CHAR(31):"B" IN ARGS_OUT                 ;*  175        Ø        Right-pointing double angle quotation mark
   SWAP "%B0" WITH "%E":CHAR(31):"2%9":CHAR(31):"6%9":CHAR(31):"1" IN ARGS_OUT  ;*  176                 Light shade
   SWAP "%B1" WITH "%E":CHAR(31):"2%9":CHAR(31):"6%9":CHAR(31):"2" IN ARGS_OUT  ;*  177                 Medium shade
   SWAP "%B2" WITH "%E":CHAR(31):"2%9":CHAR(31):"6%9":CHAR(31):"3" IN ARGS_OUT  ;*  178                 Dark shade
   SWAP "%B3" WITH "%E":CHAR(31):"2%9":CHAR(31):"4%8":CHAR(31):"2" IN ARGS_OUT  ;*  179                 Box drawings light vertical
   SWAP "%B4" WITH "%E":CHAR(31):"2%9":CHAR(31):"4%A":CHAR(31):"4" IN ARGS_OUT  ;*  180                 Box drawings light vertical and left
   SWAP "%B5" WITH "%C":CHAR(31):"3%8":CHAR(31):"1" IN ARGS_OUT                 ;*  181        µ        Upper case A with acute
   SWAP "%B6" WITH "%C":CHAR(31):"3%8":CHAR(31):"2" IN ARGS_OUT                 ;*  182        ∂        Upper case A with circumflex
   SWAP "%B7" WITH "%C":CHAR(31):"3%8":CHAR(31):"0" IN ARGS_OUT                 ;*  183        ∑        Upper case A with grave
   SWAP "%B8" WITH "%C":CHAR(31):"2%A":CHAR(31):"9" IN ARGS_OUT                 ;*  184        ∏        Copyright sign
   SWAP "%B9" WITH "%E":CHAR(31):"2%9":CHAR(31):"5%A":CHAR(31):"3" IN ARGS_OUT  ;*  185                 Box drawings double vertical and left
   SWAP "%BA" WITH "%E":CHAR(31):"2%9":CHAR(31):"5%9":CHAR(31):"1" IN ARGS_OUT  ;*  186                 Box drawings double vertical
   SWAP "%BB" WITH "%E":CHAR(31):"2%9":CHAR(31):"5%9":CHAR(31):"7" IN ARGS_OUT  ;*  187                 Box drawings double down and left
   SWAP "%BC" WITH "%E":CHAR(31):"2%9":CHAR(31):"5%9":CHAR(31):"D" IN ARGS_OUT  ;*  188                 Box drawings double up and left
   SWAP "%BD" WITH "%C":CHAR(31):"2%A":CHAR(31):"2" IN ARGS_OUT                 ;*  189        Ω        Cent sign
   SWAP "%BE" WITH "%C":CHAR(31):"2%A":CHAR(31):"5" IN ARGS_OUT                 ;*  190        æ        Yen sign
   SWAP "%BF" WITH "%E":CHAR(31):"2%9":CHAR(31):"4%9":CHAR(31):"0" IN ARGS_OUT  ;*  191                 Box drawings light down and left
   SWAP "%C0" WITH "%E":CHAR(31):"2%9":CHAR(31):"4%9":CHAR(31):"4" IN ARGS_OUT  ;*  192                 Box drawings light up and right
   SWAP "%C1" WITH "%E":CHAR(31):"2%9":CHAR(31):"4%B":CHAR(31):"4" IN ARGS_OUT  ;*  193                 Box drawings light up and horizontal
   SWAP "%C2" WITH "%E":CHAR(31):"2%9":CHAR(31):"4%A":CHAR(31):"C" IN ARGS_OUT  ;*  194                 Box drawings light down and horizontal
   SWAP "%C3" WITH "%E":CHAR(31):"2%9":CHAR(31):"4%9":CHAR(31):"C" IN ARGS_OUT  ;*  195                 Box drawings light vertical and right
   SWAP "%C4" WITH "%E":CHAR(31):"2%9":CHAR(31):"4%8":CHAR(31):"0" IN ARGS_OUT  ;*  196                 Box drawings light horizontal
   SWAP "%C5" WITH "%E":CHAR(31):"2%9":CHAR(31):"4%B":CHAR(31):"C" IN ARGS_OUT  ;*  197                 Box drawings light vertical and horizontal
   SWAP "%C6" WITH "%C":CHAR(31):"3%A":CHAR(31):"3" IN ARGS_OUT                 ;*  198        ∆        Lower case a with tilde
   SWAP "%C7" WITH "%C":CHAR(31):"3%8":CHAR(31):"3" IN ARGS_OUT                 ;*  199        «        Upper case A with tilde
   SWAP "%C8" WITH "%E":CHAR(31):"2%9":CHAR(31):"5%9":CHAR(31):"A" IN ARGS_OUT  ;*  200                 Box drawings double up and right
   SWAP "%C9" WITH "%E":CHAR(31):"2%9":CHAR(31):"5%9":CHAR(31):"4" IN ARGS_OUT  ;*  201                 Box drawings double down and right
   SWAP "%CA" WITH "%E":CHAR(31):"2%9":CHAR(31):"5%A":CHAR(31):"9" IN ARGS_OUT  ;*  202                 Box drawings double up and horizontal
   SWAP "%CB" WITH "%E":CHAR(31):"2%9":CHAR(31):"5%A":CHAR(31):"6" IN ARGS_OUT  ;*  203                 Box drawings double down and horizontal
   SWAP "%CC" WITH "%E":CHAR(31):"2%9":CHAR(31):"5%A":CHAR(31):"0" IN ARGS_OUT  ;*  204                 Box drawings double vertical and right
   SWAP "%CD" WITH "%E":CHAR(31):"2%9":CHAR(31):"5%9":CHAR(31):"0" IN ARGS_OUT  ;*  205                 Box drawings double horizontal
   SWAP "%CE" WITH "%E":CHAR(31):"2%9":CHAR(31):"5%A":CHAR(31):"C" IN ARGS_OUT  ;*  206                 Box drawings double vertical and horizontal
   SWAP "%CF" WITH "%C":CHAR(31):"2%A":CHAR(31):"4" IN ARGS_OUT                 ;*  207                 Currency sign
   SWAP "%D0" WITH "%C":CHAR(31):"3%B":CHAR(31):"0" IN ARGS_OUT                 ;*  208                 Lower case eth
   SWAP "%D1" WITH "%C":CHAR(31):"3%9":CHAR(31):"9" IN ARGS_OUT                 ;*  209                 Upper case ETH
   SWAP "%D2" WITH "%C":CHAR(31):"3%8":CHAR(31):"A" IN ARGS_OUT                 ;*  210                 Upper case E with circumflex
   SWAP "%D3" WITH "%C":CHAR(31):"3%8":CHAR(31):"B" IN ARGS_OUT                 ;*  211                 Upper case E with diaeresis
   SWAP "%D4" WITH "%C":CHAR(31):"3%8":CHAR(31):"8" IN ARGS_OUT                 ;*  212                 Upper case E with grave
   SWAP "%D5" WITH "%C":CHAR(31):"4%B":CHAR(31):"1" IN ARGS_OUT                 ;*  213                 Lower case dotless i
   SWAP "%D6" WITH "%C":CHAR(31):"3%8":CHAR(31):"D" IN ARGS_OUT                 ;*  214        ÷        Upper case I with acute
   SWAP "%D7" WITH "%C":CHAR(31):"3%8":CHAR(31):"E" IN ARGS_OUT                 ;*  215        ◊        Upper case I with circumflex
   SWAP "%D8" WITH "%C":CHAR(31):"3%8":CHAR(31):"F" IN ARGS_OUT                 ;*  216        ÿ        Upper case I with diaeresis
   SWAP "%D9" WITH "%E":CHAR(31):"2%9":CHAR(31):"4%9":CHAR(31):"8" IN ARGS_OUT  ;*  217                 Box drawings light up and left
   SWAP "%DA" WITH "%E":CHAR(31):"2%9":CHAR(31):"4%8":CHAR(31):"C" IN ARGS_OUT  ;*  218                 Box drawings light down and right
   SWAP "%DB" WITH "%E":CHAR(31):"2%9":CHAR(31):"6%8":CHAR(31):"8" IN ARGS_OUT  ;*  219                 Full block
   SWAP "%DC" WITH "%E":CHAR(31):"2%9":CHAR(31):"6%8":CHAR(31):"4" IN ARGS_OUT  ;*  220                 Lower half block
   SWAP "%DD" WITH "%C":CHAR(31):"2%A":CHAR(31):"6" IN ARGS_OUT                 ;*  221        ›        Broken bar
   SWAP "%DE" WITH "%C":CHAR(31):"3%8":CHAR(31):"C" IN ARGS_OUT                 ;*  222        ﬁ        Upper case I with grave
   SWAP "%DF" WITH "%E":CHAR(31):"2%9":CHAR(31):"6%8":CHAR(31):"0" IN ARGS_OUT  ;*  223                 Upper half block
   SWAP "%E0" WITH "%C":CHAR(31):"3%9":CHAR(31):"3" IN ARGS_OUT                 ;*  224        ‡        Upper case O with acute
   SWAP "%E1" WITH "%C":CHAR(31):"3%9":CHAR(31):"F" IN ARGS_OUT                 ;*  225        ·        Lower case sharp s
   SWAP "%E2" WITH "%C":CHAR(31):"3%9":CHAR(31):"4" IN ARGS_OUT                 ;*  226        ‚        Upper case O with circumflex
   SWAP "%E3" WITH "%C":CHAR(31):"3%9":CHAR(31):"2" IN ARGS_OUT                 ;*  227        „        Upper case O with grave
   SWAP "%E4" WITH "%C":CHAR(31):"3%B":CHAR(31):"5" IN ARGS_OUT                 ;*  228        ‰        Lower case o with tilde
   SWAP "%E5" WITH "%C":CHAR(31):"3%9":CHAR(31):"5" IN ARGS_OUT                 ;*  229        Â        Upper case O with tilde
   SWAP "%E6" WITH "%C":CHAR(31):"2%B":CHAR(31):"5" IN ARGS_OUT                 ;*  230        Ê        Micro sign
   SWAP "%E7" WITH "%C":CHAR(31):"3%B":CHAR(31):"E" IN ARGS_OUT                 ;*  231        Á        Lower case thorn
   SWAP "%E8" WITH "%C":CHAR(31):"3%9":CHAR(31):"E" IN ARGS_OUT                 ;*  232        Ë        Upper case thorn
   SWAP "%E9" WITH "%C":CHAR(31):"3%9":CHAR(31):"A" IN ARGS_OUT                 ;*  233        È        Upper case U with acute
   SWAP "%EA" WITH "%C":CHAR(31):"3%9":CHAR(31):"B" IN ARGS_OUT                 ;*  234        Í        Upper case U with circumflex
   SWAP "%EB" WITH "%C":CHAR(31):"3%9":CHAR(31):"9" IN ARGS_OUT                 ;*  235        Î        Upper case U with grave
   SWAP "%EC" WITH "%C":CHAR(31):"3%B":CHAR(31):"D" IN ARGS_OUT                 ;*  236        Ï        Lower case y with acute
   SWAP "%ED" WITH "%C":CHAR(31):"3%9":CHAR(31):"D" IN ARGS_OUT                 ;*  237        Ì        Upper case Y with acute
   SWAP "%EE" WITH "%C":CHAR(31):"2%A":CHAR(31):"F" IN ARGS_OUT                 ;*  238        Ó        Macron
   SWAP "%EF" WITH "%C":CHAR(31):"2%B":CHAR(31):"4" IN ARGS_OUT                 ;*  239        Ô        Acute accent
   SWAP "%F0" WITH "%C":CHAR(31):"2%A":CHAR(31):"D" IN ARGS_OUT                 ;*  240                 Soft hyphen
   SWAP "%F1" WITH "%C":CHAR(31):"2%B":CHAR(31):"1" IN ARGS_OUT                 ;*  241        Ò        Plus-minus sign
   SWAP "%F2" WITH "%E":CHAR(31):"2%8":CHAR(31):"0%9":CHAR(31):"7" IN ARGS_OUT  ;*  242                 Double low line
   SWAP "%F3" WITH "%C":CHAR(31):"2%B":CHAR(31):"E" IN ARGS_OUT                 ;*  243        Û        Vulgar fraction three quarters
   SWAP "%F4" WITH "%C":CHAR(31):"2%B":CHAR(31):"6" IN ARGS_OUT                 ;*  244        Ù        Pilcrow sign
   SWAP "%F5" WITH "%C":CHAR(31):"2%A":CHAR(31):"7" IN ARGS_OUT                 ;*  245        ı        Section sign
   SWAP "%F6" WITH "%C":CHAR(31):"3%B":CHAR(31):"7" IN ARGS_OUT                 ;*  246        ˆ        Division sign
   SWAP "%F7" WITH "%C":CHAR(31):"2%B":CHAR(31):"8" IN ARGS_OUT                 ;*  247        ˜        Cedilla
   SWAP "%F8" WITH "%C":CHAR(31):"2%B":CHAR(31):"0" IN ARGS_OUT                 ;*  248        ¯        Degree sign
   SWAP "%F9" WITH "%C":CHAR(31):"2%A":CHAR(31):"8" IN ARGS_OUT                 ;*  249        ˘        Diaeresis
   SWAP "%FA" WITH "%C":CHAR(31):"2%B":CHAR(31):"7" IN ARGS_OUT                 ;*  250        ˙        Middle dot
   SWAP "%FB" WITH "%C":CHAR(31):"2%B":CHAR(31):"9" IN ARGS_OUT                 ;*  251        ˚        Superscript one
   SWAP "%FC" WITH "%C":CHAR(31):"2%B":CHAR(31):"3" IN ARGS_OUT                 ;*  252        ¸        Superscript three
   SWAP "%FD" WITH "%C":CHAR(31):"2%B":CHAR(31):"2" IN ARGS_OUT                 ;*  253        ˝        Superscript two
   SWAP "%FE" WITH "%E":CHAR(31):"2%9":CHAR(31):"6%A":CHAR(31):"0" IN ARGS_OUT  ;*  254                 Black square
   SWAP "%FF" WITH "%C":CHAR(31):"2%A":CHAR(31):"0" IN ARGS_OUT                 ;*  255                 Non-breaking space
   
   *** CHAR(31) is used as a temporary placeholder to avoid from duplicate SWAP ***
   ARGS_OUT = TRIM(ARGS_OUT,CHAR(31),"A")

B200_EXIT:
   RETURN


****************************************
* Final processing.
****************************************
A500_CONCLUSION:

   IF L_ERR_CODE # "" THEN
      ARGS_OUT = ""
      ARGS_OUT<2> = L_ERR_MSG
   END ELSE
      RTN.FLAG = 0
   END

A500_EXIT:
   REFRESH = -2


****************************************
* Exit  
****************************************

END
