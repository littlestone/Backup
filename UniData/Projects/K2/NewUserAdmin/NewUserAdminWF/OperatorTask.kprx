<?xml version="1.0" encoding="utf-8"?><Process Type="SourceCode.Workflow.Design.DefaultProcess" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d" Version="4"><References><AssemblyReference><Guid>c1f2056d9c7b416eb8d3e16968d41dc1</Guid><ItemName>Reference</ItemName><ItemInclude>System</ItemInclude><AssemblyName>System</AssemblyName></AssemblyReference><AssemblyReference><Guid>e2cbe4a4c2ab4df2b048afade21a5116</Guid><ItemName>Reference</ItemName><ItemInclude>Microsoft.CSharp</ItemInclude><AssemblyName>Microsoft.CSharp</AssemblyName></AssemblyReference><AssemblyReference><Guid>3b38b7dbbac54e2f8fd2e2d3730b30ca</Guid><ItemName>Reference</ItemName><ItemInclude>System.Activities</ItemInclude><AssemblyName>System.Activities</AssemblyName></AssemblyReference><AssemblyReference><Guid>a20a23f76f374f7f8a8e9f252e031e19</Guid><ItemName>Reference</ItemName><ItemInclude>System.Core</ItemInclude><AssemblyName>System.Core</AssemblyName></AssemblyReference><AssemblyReference><Guid>59b2d335f3984543a3ec8406e366f7b9</Guid><ItemName>Reference</ItemName><ItemInclude>System.ServiceModel</ItemInclude><AssemblyName>System.ServiceModel</AssemblyName></AssemblyReference><AssemblyReference><Guid>cb9cff45613c41cbbee14773577f5663</Guid><ItemName>Reference</ItemName><ItemInclude>System.ServiceModel.Activities</ItemInclude><AssemblyName>System.ServiceModel.Activities</AssemblyName></AssemblyReference><AssemblyReference><Guid>c1418a50221142b8a3491e8e3b344828</Guid><ItemName>Reference</ItemName><ItemInclude>System.Xaml</ItemInclude><AssemblyName>System.Xaml</AssemblyName></AssemblyReference><AssemblyReference><Guid>fd5d2ba0cd544355bf69888b6c952b16</Guid><ItemName>Reference</ItemName><ItemInclude>System.Xml.Linq</ItemInclude><AssemblyName>System.Xml.Linq</AssemblyName></AssemblyReference><AssemblyReference><Guid>9bd06c05549d4cb18daf3345f5a779b1</Guid><ItemName>Reference</ItemName><ItemInclude>System.Drawing</ItemInclude><AssemblyName>System.Drawing</AssemblyName></AssemblyReference><AssemblyReference><Guid>36da870ae29b41a1b88d0f4e032b53a8</Guid><ItemName>Reference</ItemName><ItemInclude>System.Windows.Forms</ItemInclude><AssemblyName>System.Windows.Forms</AssemblyName></AssemblyReference><AssemblyReference><Guid>2df933f269d2403c8aca633a65056bf2</Guid><ItemName>Reference</ItemName><ItemInclude>System.Data</ItemInclude><AssemblyName>System.Data</AssemblyName></AssemblyReference><AssemblyReference><Guid>c1e1029a22af4577b7bc707fcebecc2d</Guid><ItemName>Reference</ItemName><ItemInclude>System.Xml</ItemInclude><AssemblyName>System.Xml</AssemblyName></AssemblyReference><AssemblyReference><Guid>7d6794e3c21b40ce84f3e6effa46c718</Guid><ItemName>Reference</ItemName><ItemInclude>System.Design</ItemInclude><AssemblyName>System.Design</AssemblyName></AssemblyReference><AssemblyReference><Guid>7cd8018e18524eb6837a69d7443cbb58</Guid><ItemName>Reference</ItemName><ItemInclude>System.Web</ItemInclude><AssemblyName>System.Web</AssemblyName></AssemblyReference><AssemblyReference><Guid>b9768f60d80b483f81fac4604df13ed0</Guid><ItemName>Reference</ItemName><ItemInclude>System.Web.Services</ItemInclude><AssemblyName>System.Web.Services</AssemblyName></AssemblyReference><AssemblyReference><Guid>539cfeb7614d455b86d330299097dbc5</Guid><ItemName>Reference</ItemName><ItemInclude>System.Transactions</ItemInclude><AssemblyName>System.Transactions</AssemblyName></AssemblyReference><AssemblyReference><Guid>55630c9a3f6c48368404c74eaaba4dca</Guid><ItemName>Reference</ItemName><ItemInclude>System.Drawing.Design</ItemInclude><AssemblyName>System.Drawing.Design</AssemblyName></AssemblyReference><AssemblyReference><Guid>ce1d71c0e39a4d15a9c530bc5c132ef9</Guid><ItemName>Reference</ItemName><ItemInclude>KO, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d</ItemInclude><CopyLocal>0</CopyLocal><AssemblyName>KO, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d</AssemblyName><Path>E:\Program Files (x86)\K2 blackpearl\Bin\KO.dll</Path></AssemblyReference><AssemblyReference><Guid>b0225621db8641c5954f375d4b893318</Guid><ItemName>Reference</ItemName><ItemInclude>System.Workflow.ComponentModel</ItemInclude><AssemblyName>System.Workflow.ComponentModel</AssemblyName></AssemblyReference><AssemblyReference><Guid>53dc1a5f27f24dbd869ca97b0e219ed6</Guid><ItemName>Reference</ItemName><ItemInclude>System.Workflow.Runtime</ItemInclude><AssemblyName>System.Workflow.Runtime</AssemblyName></AssemblyReference><AssemblyReference><Guid>9147d69e45b94220999ed4a74b43fbd5</Guid><ItemName>Reference</ItemName><ItemInclude>System.Workflow.Activities</ItemInclude><AssemblyName>System.Workflow.Activities</AssemblyName></AssemblyReference><AssemblyReference><Guid>92f7480c2ba84af3983190806c362d4d</Guid><ItemName>Reference</ItemName><ItemInclude>SourceCode.SmartObjects.Client, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d</ItemInclude><AssemblyName>SourceCode.SmartObjects.Client, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d</AssemblyName></AssemblyReference><AssemblyReference><Guid>3151fcbf9e2a49e49a938460f604914e</Guid><ItemName>Reference</ItemName><ItemInclude>SourceCode.HostClientAPI, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d</ItemInclude><AssemblyName>SourceCode.HostClientAPI, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d</AssemblyName></AssemblyReference><AssemblyReference><Guid>b53a0591252945d9af3dbfae48863481</Guid><ItemName>Reference</ItemName><ItemInclude>SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d</ItemInclude><CopyLocal>0</CopyLocal><AssemblyName>SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d</AssemblyName></AssemblyReference><AssemblyReference><Guid>9014c70ae920423fb6582b3a8eedf0c5</Guid><ItemName>Reference</ItemName><ItemInclude>SourceCode.ResolverFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d</ItemInclude><CopyLocal>0</CopyLocal><AssemblyName>SourceCode.ResolverFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d</AssemblyName></AssemblyReference></References><ExecutionLayers><ExecutionLayer><ExecutableItems><MailEventItem Type="SourceCode.Workflow.Design.Mail.MailEventItem" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Extender Type="SourceCode.Workflow.Design.WindowsWorkflowExtender" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><CodeFiles><CodeFile><Guid>1126a64c59cb42958bc30f5fd4bdf6ef</Guid><OriginalFileName>@safeitemname@.xoml</OriginalFileName><Primary>1</Primary><Content><![CDATA[<ns0:WorkflowContext xmlns:ns0="clr-namespace:SourceCode.Workflow.Common.Extenders;Assembly=SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d" x:Class="ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2.EventItem_f1338015a96349f1b36a75901418c2d1" x:Name="EventItem_f1338015a96349f1b36a75901418c2d1" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow">
	<ns0:WorkflowContext.LockedActivities>
		<x:Array Type="{x:Type System.String}">
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">SetProperties</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Attachment</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">AttachmentPresent</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">AddAttachment</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">NaAttachment</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">SendMail</ns1:String>
		</x:Array>
	</ns0:WorkflowContext.LockedActivities>
	<CodeActivity x:Name="SetProperties" ExecuteCode="SetProperties_ExecuteCode" />
	<IfElseActivity x:Name="Attachment">
		<IfElseBranchActivity x:Name="AttachmentPresent">
			<IfElseBranchActivity.Condition>
				<CodeCondition Condition="HasAttachment" />
			</IfElseBranchActivity.Condition>
			<CodeActivity x:Name="AddAttachment" ExecuteCode="AddAttachment_ExecuteCode" />
		</IfElseBranchActivity>
		<IfElseBranchActivity x:Name="NaAttachment" />
	</IfElseActivity>
	<CodeActivity x:Name="SendMail" ExecuteCode="SendMail_ExecuteCode" />
</ns0:WorkflowContext>]]></Content></CodeFile><CodeFile><Guid>afb1154a711f42ad953e73a275e7bb85</Guid><OriginalFileName>@safeitemname@.xoml.cs</OriginalFileName><Content><![CDATA[using System;
using System.Net.Mail;
using System.Configuration;
using System.Workflow.Activities;
using System.ComponentModel;
using SourceCode.Workflow.Common.Extenders;
using SourceCode.Workflow.Common;
using System.Xml;
using System.Text;
 
using HOSTCONTEXT = Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventItemContext_f1338015a96349f1b36a75901418c2d1;

namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
    public partial class EventItem_f1338015a96349f1b36a75901418c2d1 : IWorkflowContext<HOSTCONTEXT>
    {

        #region Members

        private HOSTCONTEXT _k2;

        #endregion

        #region Properties

        [EditorBrowsable(EditorBrowsableState.Never)]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]

        private MailMessage _emailmessage = null;
        private MailMessage EmailMessage
        {
            set
            {
                _emailmessage = value;
            }
            get
            {
                if (_emailmessage == null)
                {
                    _emailmessage = new MailMessage();
                }
                return _emailmessage;
            }
        }
        #endregion

        #region Code Activities

        private void HasAttachment(object sender, ConditionalEventArgs e)
        {
            e.Result = bool.Parse(K2.Configuration.HasAttachment);
        }

        private void SetProperties_ExecuteCode(object sender, EventArgs e)
        {
            this.EmailMessage.From = new MailAddress(K2.Configuration.From);
            this.EmailMessage.Headers.Remove("return-path");
            this.EmailMessage.Headers.Add("return-path", "<"+ K2.Configuration.From+ ">");

            if (bool.Parse(K2.Configuration.ToSpecify))
            {
                if (!string.IsNullOrEmpty(K2.Configuration.To))
                {
                    string[] arrto = K2.Configuration.To.Split(';');
                    foreach (string to in arrto)
                    {
                        if (string.IsNullOrEmpty(to))
                        {
                            throw new ArgumentException("The email address, Null or Empty, does not meet the requirements.");
                        }

                        try
                        {
                            this.EmailMessage.To.Add(new MailAddress(to));
                        }
                        catch
                        {
                            throw new FormatException("The email address : " + to + ", is invalid.");
                        }
                    }
                }
            }

            if (!string.IsNullOrEmpty(K2.Configuration.Cc))
            {
                string[] arrcc = K2.Configuration.Cc.Split(';');
                foreach (string cc in arrcc)
                {
                    if (string.IsNullOrEmpty(cc))
                    {
                        throw new ArgumentException("The email address, Null or Empty, does not meet the requirements.");
                    }

                    try
                    {
                        this.EmailMessage.CC.Add(new MailAddress(cc));
                    }
                    catch
                    {
                        throw new FormatException("The email address : " + cc + ", is invalid.");
                    }
                }
            }

            if (!string.IsNullOrEmpty(K2.Configuration.Bcc))
            {
                string[] arrbcc = K2.Configuration.Bcc.Split(';');
                foreach (string bcc in arrbcc)
                {
                    if (string.IsNullOrEmpty(bcc))
                    {
                        throw new ArgumentException("The email address, Null or Empty, does not meet the requirements.");
                    }

                    try
                    {
                        this.EmailMessage.Bcc.Add(new MailAddress(bcc));
                    }
                    catch
                    {
                        throw new FormatException("The email address : " + bcc + ", is invalid.");
                    }
                }
            }

            // CHECK FLAG TO INCLUDE DESTINATION USER(S)
            if (bool.Parse(K2.Configuration.ToDestinationUser))
            {
                // IF SINGLEINSTANCE
                if (K2.ActivityInstanceDestination.ActivityInstance.SingleInstance)
                {
                    foreach (SourceCode.KO.User user in K2.ActivityInstanceDestination.ActivityInstance.Destinations)
                    {
                        this.EmailMessage.To.Add(user.Email);
                    }
                }
                else
                {
                    // IF NOT SINGLEINSTANCE USE USER EMAIL
                    if (K2.ActivityInstanceDestination.User == null)
                    {
                        throw new Exception("Activity instance destination not available.");
                    }
                    this.EmailMessage.To.Add(K2.ActivityInstanceDestination.User.Email.ToString());
                }
            }

            if (bool.Parse(K2.Configuration.ToOriginator))
            {
                this.EmailMessage.To.Add(K2.ProcessInstance.Originator.Email.ToString());
            }

            this.EmailMessage.Subject = K2.Configuration.Subject;

            this.EmailMessage.Body = K2.Configuration.Body;

            this.EmailMessage.IsBodyHtml = bool.Parse(K2.Configuration.HTMLEmail);

            switch (K2.Configuration.Importance)
            {
                case "0":
                    this.EmailMessage.Priority = MailPriority.Normal;
                    break;
                case "1":
                    this.EmailMessage.Priority = MailPriority.Low;
                    break;
                case "2":
                    this.EmailMessage.Priority = MailPriority.High;
                    break;
            }
        }

        private void AddAttachment_ExecuteCode(object sender, EventArgs e)
        {

            XmlDocument MyXml = new XmlDocument();

            MyXml.LoadXml(K2.Configuration.Attachments);

            foreach (XmlElement attachmentitem in MyXml.DocumentElement.SelectSingleNode("//mailevent/attachments").ChildNodes)
            {
                string location = string.Empty;
                string filename = string.Empty;
                string content = string.Empty;
                string fieldname = string.Empty;
                string xmlfieldxpath = string.Empty;

                string xmlfilenamexpath = string.Empty;
                string xmlfilenamefield = string.Empty;
                string xmlfilenamefieldscope = string.Empty;
                string xmlfilecontentxpath = string.Empty;
                string xmlfilecontentfield = string.Empty;
                string xmlfilecontentfieldscope = string.Empty;

                bool isencodingtext = false;
                bool isxmlfield = false;
                bool isipattachments = false;
                bool isstringfield = false;
                bool issofield = false;
                bool isfileondisk = false;
                bool issolistfield = true;
                bool isSingleLineAttachments = false;

                if (attachmentitem.SelectSingleNode("location").FirstChild != null)
                {
                    location = attachmentitem.SelectSingleNode("location").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("filename").FirstChild != null)
                {
                    filename = attachmentitem.SelectSingleNode("filename").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("content").FirstChild != null)
                {
                    content = attachmentitem.SelectSingleNode("content").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("fieldname").FirstChild != null)
                {
                    fieldname = attachmentitem.SelectSingleNode("fieldname").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("isfileondisk").FirstChild != null)
                {
                    isfileondisk = bool.Parse(attachmentitem.SelectSingleNode("isfileondisk").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("issinglelineattachments") != null && attachmentitem.SelectSingleNode("issinglelineattachments").FirstChild != null)
                {
                    isSingleLineAttachments = bool.Parse(attachmentitem.SelectSingleNode("issinglelineattachments").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("isencodingtext").FirstChild != null)
                {
                    isencodingtext = bool.Parse(attachmentitem.SelectSingleNode("isencodingtext").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("isxmlfield").FirstChild != null)
                {
                    isxmlfield = bool.Parse(attachmentitem.SelectSingleNode("isxmlfield").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("isipattachments").FirstChild != null)
                {
                    isipattachments = bool.Parse(attachmentitem.SelectSingleNode("isipattachments").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("isstringfield").FirstChild != null)
                {
                    isstringfield = bool.Parse(attachmentitem.SelectSingleNode("isstringfield").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("issofield").FirstChild != null)
                {
                    issofield = bool.Parse(attachmentitem.SelectSingleNode("issofield").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("issolistfield").FirstChild != null)
                {
                    issolistfield = bool.Parse(attachmentitem.SelectSingleNode("issolistfield").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("xmlfieldxpath").FirstChild != null)
                {
                    xmlfieldxpath = attachmentitem.SelectSingleNode("xmlfieldxpath").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("xmlfilenamexpath").FirstChild != null)
                {
                    xmlfilenamexpath = attachmentitem.SelectSingleNode("xmlfilenamexpath").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("xmlfilenamefield").FirstChild != null)
                {
                    xmlfilenamefield = attachmentitem.SelectSingleNode("xmlfilenamefield").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("xmlfilenamefieldscope").FirstChild != null)
                {
                    xmlfilenamefieldscope = attachmentitem.SelectSingleNode("xmlfilenamefieldscope").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("xmlfilecontentxpath").FirstChild != null)
                {
                    xmlfilecontentxpath = attachmentitem.SelectSingleNode("xmlfilecontentxpath").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("xmlfilecontentfield").FirstChild != null)
                {
                    xmlfilecontentfield = attachmentitem.SelectSingleNode("xmlfilecontentfield").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("xmlfilecontentfieldscope").FirstChild != null)
                {
                    xmlfilecontentfieldscope = attachmentitem.SelectSingleNode("xmlfilecontentfieldscope").FirstChild.InnerText;
                }

                if (filename == "{B5EEFC50-FDC9-4AE5-BDA8-4535A414887A}" || isSingleLineAttachments) 
                { //This is a special case, indicating a simple wizard with a single K2Field containing multiple attachments
                  //It is also the case used by the thin client for attachments
                    foreach (XmlNode filesRoot in attachmentitem.SelectSingleNode("content").ChildNodes)
                    {
                        if (filesRoot is XmlElement)
                        {
                            if (filesRoot.Name == "file" || filesRoot.Name == "image")
                            {
                                ProcessAttachment((XmlElement)filesRoot, "Base64");
                            }
                            else
                            {
                                foreach (XmlElement fileAttachment in filesRoot.ChildNodes)
                                {
                                    ProcessAttachment(fileAttachment, string.Empty);
                                }
                            }
                        }
                    }

                }  
                else
                {
                    if (isfileondisk)
                    {
                        this.EmailMessage.Attachments.Add(new Attachment(System.IO.Path.Combine(location, filename)));
                    }
                    else if (isxmlfield)
                    {
                        //IP attachments : <?mso-infoPath-file-attachment-present?>
                        if (isipattachments)
                        {
                            SourceCode.Workflow.Common.SharePoint.Document.InfoPath.Attachments ipAttachments = new
                            SourceCode.Workflow.Common.SharePoint.Document.InfoPath.Attachments(content, xmlfieldxpath);

                            byte[] xmlfileData = ipAttachments[0].File;

                            string xmlfileName = ipAttachments[0].FileName;

                            if (string.IsNullOrEmpty(xmlfileName))
                            {
                                xmlfileName = filename;
                            }

                            System.IO.MemoryStream ms = new System.IO.MemoryStream(xmlfileData);

                            this.EmailMessage.Attachments.Add(new Attachment(ms, xmlfileName));
                        }
                        //Base64
                        else if (xmlfieldxpath.Length > 1)
                        {
                            //Xml Repeating Node
                            if ((xmlfilenamexpath.Length > 1) && (xmlfilecontentxpath.Length > 1))
                            {
                                XmlDocument xmlFileNameCollection = new XmlDocument();

                                XmlDocument xmlFileContentCollection = new XmlDocument();

                                if (xmlfilenamefieldscope.ToUpper() == "PROCESS")
                                {
                                    xmlFileNameCollection.LoadXml(K2.ProcessInstance.XmlFields[xmlfilenamefield].Value);
                                }
                                else if (xmlfilenamefieldscope.ToUpper() == "ACTIVITY")
                                {
                                    xmlFileNameCollection.LoadXml(K2.ActivityInstanceDestination.XmlFields[xmlfilenamefield].Value);
                                }

                                if (xmlfilecontentfieldscope.ToUpper() == "PROCESS")
                                {
                                    xmlFileContentCollection.LoadXml(K2.ProcessInstance.XmlFields[xmlfilecontentfield].Value);
                                }
                                else if (xmlfilenamefieldscope.ToUpper() == "ACTIVITY")
                                {
                                    xmlFileContentCollection.LoadXml(K2.ActivityInstanceDestination.XmlFields[xmlfilecontentfield].Value);
                                }

                                XmlNodeList xmlFileNameList = xmlFileNameCollection.SelectNodes(xmlfilenamexpath);

                                XmlNodeList xmlFileContentList = xmlFileContentCollection.SelectNodes(xmlfilecontentxpath);

                                for (Int32 I = 0; I < xmlFileContentList.Count; I++)
                                {
                                    System.IO.MemoryStream ms = new System.IO.MemoryStream(System.Convert.FromBase64String(xmlFileContentList[I].InnerText));

                                    this.EmailMessage.Attachments.Add(new Attachment(ms, xmlFileNameList[I].InnerText));
                                }
                            }
                            //Xml Node Content
                            else
                            {
                                System.IO.MemoryStream ms = new System.IO.MemoryStream(System.Convert.FromBase64String(content));

                                this.EmailMessage.Attachments.Add(new Attachment(ms, filename));
                            }
                        }
                        // Text
                        else
                        {
                            byte[] buffer = Encoding.UTF8.GetBytes(content);

                            System.IO.MemoryStream ms = new System.IO.MemoryStream(buffer);

                            this.EmailMessage.Attachments.Add(new Attachment(ms, filename));
                        }
                    }
                    else
                    {
                        if (isstringfield)
                        {
                            //Base64
                            if ((!isencodingtext) || (issofield) || (issolistfield))
                            {
                                System.IO.MemoryStream ms = new System.IO.MemoryStream(System.Convert.FromBase64String(content));

                                this.EmailMessage.Attachments.Add(new Attachment(ms, filename));
                            }
                            // Text
                            else
                            {
                                byte[] buffer = Encoding.UTF8.GetBytes(content);

                                System.IO.MemoryStream ms = new System.IO.MemoryStream(buffer);

                                this.EmailMessage.Attachments.Add(new Attachment(ms, filename));
                            }
                        }
                        // Binary 2 Base64
                        else
                        {
                            System.IO.MemoryStream ms = new System.IO.MemoryStream(System.Convert.FromBase64String(content));

                            this.EmailMessage.Attachments.Add(new Attachment(ms, filename));
                        }
                    }
                }
            }
        }

        private void ProcessAttachment(XmlElement fileAttachment, string overrideEncoding)
        {
            string encoding = string.IsNullOrEmpty(overrideEncoding) ? (fileAttachment.Attributes["encoding"] != null ? fileAttachment.Attributes["encoding"].Value : string.Empty) : overrideEncoding;
            string fileName = fileAttachment.SelectSingleNode("name").InnerText;
            string fileContent = fileAttachment.SelectSingleNode("content").InnerText;
            byte[] fileData = null;
            switch (encoding)
            {
                case "InfoPath":
                case "Base64":
                case "SharePoint":
                    fileData = System.Convert.FromBase64String(fileContent);
                    break;
                case "Xml":
                case "":
                default:
                    fileData = Encoding.UTF8.GetBytes(fileContent);
                    break;
            }
            System.IO.MemoryStream ms = new System.IO.MemoryStream(fileData);
            this.EmailMessage.Attachments.Add(new Attachment(ms, fileName));
        }

        private void SendMail_ExecuteCode(object sender, EventArgs e)
        {
            using(this.EmailMessage)
                SmtpMail.Send(this.EmailMessage, K2.ProcessInstance.Logger, K2.Configuration.SmartObjectServerConnectionString);

            this.EmailMessage = null;
        }

        #endregion

        #region IWorkflowContext<HOSTCONTEXT> Members

        public Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventItemContext_f1338015a96349f1b36a75901418c2d1 K2
        {
            get
            {
                return _k2;
            }
            set
            {
                _k2 = value;
            }
        }

        #endregion

    }
}
]]></Content></CodeFile></CodeFiles><Guid>f1338015a96349f1b36a75901418c2d1</Guid><MetaData /><Username /><CredentialGuid>00000000-0000-0000-0000-000000000000</CredentialGuid><Language>CSharp</Language></Extender><SMTPServer Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ArtifactLibraryFieldPart Type="SourceCode.Workflow.Design.ArtifactLibraryFieldPart" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>fc3b0e9c88f4453587df431405141a72</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><FieldName>Mail Server</FieldName></ArtifactLibraryFieldPart></Parts><Guid>8b9514cf81bf4234b2cbf21ea98a7f71</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></SMTPServer><From Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ArtifactLibraryFieldPart Type="SourceCode.Workflow.Design.ArtifactLibraryFieldPart" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>4532ef5a8d174db69a4083286f471ca8</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><FieldName>From Address</FieldName></ArtifactLibraryFieldPart></Parts><Guid>700437546a9843af87e6ed82ac9f80f2</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></From><Subject Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>45b5a8aa5d3c4114bf699b8cb9dbce11</Guid><ValueType>System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="592a1b65-295d-40a0-b27f-98e118954517&#xD;" /><DataFieldName>RequestID</DataFieldName><Scope>Process</Scope><Type>Long</Type><ListOption>None</ListOption></DataFieldPart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>641f35ce78614bc7875c07ac1d233545</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[ - ]]></Value></ValueTypePart><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>37f12af9bd0a4befae516297502c6899</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="8ab835da-4f4e-4ad4-9d90-6dabd57a7fc8&#xD;" /><DataFieldName>EmployeeFullName</DataFieldName><Scope>Process</Scope><Type>String</Type><ListOption>None</ListOption></DataFieldPart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>55cd0d4561b949b5a19f50b25915d267</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[: ]]></Value></ValueTypePart><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>4227b782a4884ef48e25bd15cd86924f</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="8ef45b7c-d39f-4b35-a6dc-b4a9f9301aed&#xD;" /><DataFieldName>RequestServiceTypeName</DataFieldName><Scope>Process</Scope><Type>String</Type><ListOption>None</ListOption></DataFieldPart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>d8d87642102b469b977a61f219ff3a7b</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[ ]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e88aba03915845ba82c587fd39007ba9</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[access operation]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>af6820534fe84a8b8aa6251ecae6fe5c</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[ ]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>64ec0ca7827a45bab7449937087307e1</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[has been ]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>d8cc817460444a798e9f20c5228c97d5</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[CANCELLED]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>86332e71b4964a2e940e4b2491b50a07</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[ by ]]></Value></ValueTypePart><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>4b897103f7784047b3f9fd00dbcf7a38</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="3b2a57a4-5a5e-41cc-a64e-b03ec2da18e9&#xD;" /><DataFieldName>OperatorName</DataFieldName><Scope>Process</Scope><Type>String</Type><ListOption>None</ListOption></DataFieldPart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>5a662ce5d52a4a3781979638d6e28cbf</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[ at ]]></Value></ValueTypePart><FunctionFieldPart Type="SourceCode.Workflow.Functions.Design.FunctionFieldPart" Assembly="SourceCode.Workflow.Functions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><WizardDefinition Type="SourceCode.Workflow.Functions.Wizard.FunctionFieldPartDefinition" Assembly="SourceCode.Workflow.Functions.Wizard, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>92286820b29c473f85aeeb83fe0113bd</Guid><Name>{edfee3fe-c873-458e-871b-68f0a55867a1}</Name><RegisteredItem>Function FieldPart Wizard</RegisteredItem></WizardDefinition><Guid>70b4db6ce782412bb4075bc8cbb5a403</Guid><ValueType>System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><MethodPath>SourceCode.Workflow.Functions.DateAndTime, SourceCode.Workflow.Functions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d|Now</MethodPath><ReturnType>System.DateTime</ReturnType><Name>Now</Name><Desc>Gets the current date and time.</Desc></FunctionFieldPart></Parts><Guid>7d84c8ad12be426d8c041492527c9115</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Subject><Body Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>84d29d727a914421bb5abd54e0d89cd6</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<HTML>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>d5fbe68d2a0442cc89b66eb271b51f5a</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<HEAD>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>bc47cf503ebe40c6bdf4eed6c5a15412</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</HEAD>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>5b16fbca30754e7ba97cd9db9b66e9d3</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<BODY>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>b77c5465f4c5415f81fc49e8f5fb5018</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<p style='font-family:Arial;font-size:11pt;font-weight:Normal;font-style:Normal;font-stretch:Normal;color:#000000;text-align:Left;text-decoration:None;line-height:1.5'>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>9fa100f89a8a47f9979ff2a13931c819</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</p>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>72500cd214574302848b4ed78ba1bef3</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</BODY>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>47b4eda826dc40cb93058a9a23172d26</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</HTML>]]></Value></ValueTypePart></Parts><Guid>58fc6d1699834c9bb51404fe517b1ceb</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Body><Guid>b2bded5f418042ffb01332c5b6fe6bf1</Guid><MetaData /><Parent ref="b3cce48f-f7ce-4067-b8ba-b2cb92a0d562&#xD;" /><ToOriginator>1</ToOriginator><Importance>0</Importance><HTMLEmail>1</HTMLEmail><AttachmentsVersion>2</AttachmentsVersion></MailEventItem><MailEventItem Type="SourceCode.Workflow.Design.Mail.MailEventItem" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Extender Type="SourceCode.Workflow.Design.WindowsWorkflowExtender" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><CodeFiles><CodeFile><Guid>da98755ac3954f46899fc78efbbc98b6</Guid><OriginalFileName>@safeitemname@.xoml</OriginalFileName><Primary>1</Primary><Content><![CDATA[<ns0:WorkflowContext xmlns:ns0="clr-namespace:SourceCode.Workflow.Common.Extenders;Assembly=SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d" x:Class="ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2.EventItem_cfa257d5431c4a27a844b4ede15bedd6" x:Name="EventItem_cfa257d5431c4a27a844b4ede15bedd6" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow">
	<ns0:WorkflowContext.LockedActivities>
		<x:Array Type="{x:Type System.String}">
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">SetProperties</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">Attachment</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">AttachmentPresent</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">AddAttachment</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">NaAttachment</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">SendMail</ns1:String>
		</x:Array>
	</ns0:WorkflowContext.LockedActivities>
	<CodeActivity x:Name="SetProperties" ExecuteCode="SetProperties_ExecuteCode" />
	<IfElseActivity x:Name="Attachment">
		<IfElseBranchActivity x:Name="AttachmentPresent">
			<IfElseBranchActivity.Condition>
				<CodeCondition Condition="HasAttachment" />
			</IfElseBranchActivity.Condition>
			<CodeActivity x:Name="AddAttachment" ExecuteCode="AddAttachment_ExecuteCode" />
		</IfElseBranchActivity>
		<IfElseBranchActivity x:Name="NaAttachment" />
	</IfElseActivity>
	<CodeActivity x:Name="SendMail" ExecuteCode="SendMail_ExecuteCode" />
</ns0:WorkflowContext>]]></Content></CodeFile><CodeFile><Guid>d6a3087401d44113a2bca2ebfbccfd52</Guid><OriginalFileName>@safeitemname@.xoml.cs</OriginalFileName><Content><![CDATA[using System;
using System.Net.Mail;
using System.Configuration;
using System.Workflow.Activities;
using System.ComponentModel;
using SourceCode.Workflow.Common.Extenders;
using SourceCode.Workflow.Common;
using System.Xml;
using System.Text;
 
using HOSTCONTEXT = Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventItemContext_cfa257d5431c4a27a844b4ede15bedd6;

namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
    public partial class EventItem_cfa257d5431c4a27a844b4ede15bedd6 : IWorkflowContext<HOSTCONTEXT>
    {

        #region Members

        private HOSTCONTEXT _k2;

        #endregion

        #region Properties

        [EditorBrowsable(EditorBrowsableState.Never)]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]

        private MailMessage _emailmessage = null;
        private MailMessage EmailMessage
        {
            set
            {
                _emailmessage = value;
            }
            get
            {
                if (_emailmessage == null)
                {
                    _emailmessage = new MailMessage();
                }
                return _emailmessage;
            }
        }
        #endregion

        #region Code Activities

        private void HasAttachment(object sender, ConditionalEventArgs e)
        {
            e.Result = bool.Parse(K2.Configuration.HasAttachment);
        }

        private void SetProperties_ExecuteCode(object sender, EventArgs e)
        {
            this.EmailMessage.From = new MailAddress(K2.Configuration.From);
            this.EmailMessage.Headers.Remove("return-path");
            this.EmailMessage.Headers.Add("return-path", "<"+ K2.Configuration.From+ ">");

            if (bool.Parse(K2.Configuration.ToSpecify))
            {
                if (!string.IsNullOrEmpty(K2.Configuration.To))
                {
                    string[] arrto = K2.Configuration.To.Split(';');
                    foreach (string to in arrto)
                    {
                        if (string.IsNullOrEmpty(to))
                        {
                            throw new ArgumentException("The email address, Null or Empty, does not meet the requirements.");
                        }

                        try
                        {
                            this.EmailMessage.To.Add(new MailAddress(to));
                        }
                        catch
                        {
                            throw new FormatException("The email address : " + to + ", is invalid.");
                        }
                    }
                }
            }

            if (!string.IsNullOrEmpty(K2.Configuration.Cc))
            {
                string[] arrcc = K2.Configuration.Cc.Split(';');
                foreach (string cc in arrcc)
                {
                    if (string.IsNullOrEmpty(cc))
                    {
                        throw new ArgumentException("The email address, Null or Empty, does not meet the requirements.");
                    }

                    try
                    {
                        this.EmailMessage.CC.Add(new MailAddress(cc));
                    }
                    catch
                    {
                        throw new FormatException("The email address : " + cc + ", is invalid.");
                    }
                }
            }

            if (!string.IsNullOrEmpty(K2.Configuration.Bcc))
            {
                string[] arrbcc = K2.Configuration.Bcc.Split(';');
                foreach (string bcc in arrbcc)
                {
                    if (string.IsNullOrEmpty(bcc))
                    {
                        throw new ArgumentException("The email address, Null or Empty, does not meet the requirements.");
                    }

                    try
                    {
                        this.EmailMessage.Bcc.Add(new MailAddress(bcc));
                    }
                    catch
                    {
                        throw new FormatException("The email address : " + bcc + ", is invalid.");
                    }
                }
            }

            // CHECK FLAG TO INCLUDE DESTINATION USER(S)
            if (bool.Parse(K2.Configuration.ToDestinationUser))
            {
                // IF SINGLEINSTANCE
                if (K2.ActivityInstanceDestination.ActivityInstance.SingleInstance)
                {
                    foreach (SourceCode.KO.User user in K2.ActivityInstanceDestination.ActivityInstance.Destinations)
                    {
                        this.EmailMessage.To.Add(user.Email);
                    }
                }
                else
                {
                    // IF NOT SINGLEINSTANCE USE USER EMAIL
                    if (K2.ActivityInstanceDestination.User == null)
                    {
                        throw new Exception("Activity instance destination not available.");
                    }
                    this.EmailMessage.To.Add(K2.ActivityInstanceDestination.User.Email.ToString());
                }
            }

            if (bool.Parse(K2.Configuration.ToOriginator))
            {
                this.EmailMessage.To.Add(K2.ProcessInstance.Originator.Email.ToString());
            }

            this.EmailMessage.Subject = K2.Configuration.Subject;

            this.EmailMessage.Body = K2.Configuration.Body;

            this.EmailMessage.IsBodyHtml = bool.Parse(K2.Configuration.HTMLEmail);

            switch (K2.Configuration.Importance)
            {
                case "0":
                    this.EmailMessage.Priority = MailPriority.Normal;
                    break;
                case "1":
                    this.EmailMessage.Priority = MailPriority.Low;
                    break;
                case "2":
                    this.EmailMessage.Priority = MailPriority.High;
                    break;
            }
        }

        private void AddAttachment_ExecuteCode(object sender, EventArgs e)
        {

            XmlDocument MyXml = new XmlDocument();

            MyXml.LoadXml(K2.Configuration.Attachments);

            foreach (XmlElement attachmentitem in MyXml.DocumentElement.SelectSingleNode("//mailevent/attachments").ChildNodes)
            {
                string location = string.Empty;
                string filename = string.Empty;
                string content = string.Empty;
                string fieldname = string.Empty;
                string xmlfieldxpath = string.Empty;

                string xmlfilenamexpath = string.Empty;
                string xmlfilenamefield = string.Empty;
                string xmlfilenamefieldscope = string.Empty;
                string xmlfilecontentxpath = string.Empty;
                string xmlfilecontentfield = string.Empty;
                string xmlfilecontentfieldscope = string.Empty;

                bool isencodingtext = false;
                bool isxmlfield = false;
                bool isipattachments = false;
                bool isstringfield = false;
                bool issofield = false;
                bool isfileondisk = false;
                bool issolistfield = true;
                bool isSingleLineAttachments = false;

                if (attachmentitem.SelectSingleNode("location").FirstChild != null)
                {
                    location = attachmentitem.SelectSingleNode("location").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("filename").FirstChild != null)
                {
                    filename = attachmentitem.SelectSingleNode("filename").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("content").FirstChild != null)
                {
                    content = attachmentitem.SelectSingleNode("content").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("fieldname").FirstChild != null)
                {
                    fieldname = attachmentitem.SelectSingleNode("fieldname").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("isfileondisk").FirstChild != null)
                {
                    isfileondisk = bool.Parse(attachmentitem.SelectSingleNode("isfileondisk").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("issinglelineattachments") != null && attachmentitem.SelectSingleNode("issinglelineattachments").FirstChild != null)
                {
                    isSingleLineAttachments = bool.Parse(attachmentitem.SelectSingleNode("issinglelineattachments").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("isencodingtext").FirstChild != null)
                {
                    isencodingtext = bool.Parse(attachmentitem.SelectSingleNode("isencodingtext").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("isxmlfield").FirstChild != null)
                {
                    isxmlfield = bool.Parse(attachmentitem.SelectSingleNode("isxmlfield").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("isipattachments").FirstChild != null)
                {
                    isipattachments = bool.Parse(attachmentitem.SelectSingleNode("isipattachments").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("isstringfield").FirstChild != null)
                {
                    isstringfield = bool.Parse(attachmentitem.SelectSingleNode("isstringfield").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("issofield").FirstChild != null)
                {
                    issofield = bool.Parse(attachmentitem.SelectSingleNode("issofield").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("issolistfield").FirstChild != null)
                {
                    issolistfield = bool.Parse(attachmentitem.SelectSingleNode("issolistfield").FirstChild.InnerText);
                }
                if (attachmentitem.SelectSingleNode("xmlfieldxpath").FirstChild != null)
                {
                    xmlfieldxpath = attachmentitem.SelectSingleNode("xmlfieldxpath").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("xmlfilenamexpath").FirstChild != null)
                {
                    xmlfilenamexpath = attachmentitem.SelectSingleNode("xmlfilenamexpath").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("xmlfilenamefield").FirstChild != null)
                {
                    xmlfilenamefield = attachmentitem.SelectSingleNode("xmlfilenamefield").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("xmlfilenamefieldscope").FirstChild != null)
                {
                    xmlfilenamefieldscope = attachmentitem.SelectSingleNode("xmlfilenamefieldscope").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("xmlfilecontentxpath").FirstChild != null)
                {
                    xmlfilecontentxpath = attachmentitem.SelectSingleNode("xmlfilecontentxpath").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("xmlfilecontentfield").FirstChild != null)
                {
                    xmlfilecontentfield = attachmentitem.SelectSingleNode("xmlfilecontentfield").FirstChild.InnerText;
                }
                if (attachmentitem.SelectSingleNode("xmlfilecontentfieldscope").FirstChild != null)
                {
                    xmlfilecontentfieldscope = attachmentitem.SelectSingleNode("xmlfilecontentfieldscope").FirstChild.InnerText;
                }

                if (filename == "{B5EEFC50-FDC9-4AE5-BDA8-4535A414887A}" || isSingleLineAttachments) 
                { //This is a special case, indicating a simple wizard with a single K2Field containing multiple attachments
                  //It is also the case used by the thin client for attachments
                    foreach (XmlNode filesRoot in attachmentitem.SelectSingleNode("content").ChildNodes)
                    {
                        if (filesRoot is XmlElement)
                        {
                            if (filesRoot.Name == "file" || filesRoot.Name == "image")
                            {
                                ProcessAttachment((XmlElement)filesRoot, "Base64");
                            }
                            else
                            {
                                foreach (XmlElement fileAttachment in filesRoot.ChildNodes)
                                {
                                    ProcessAttachment(fileAttachment, string.Empty);
                                }
                            }
                        }
                    }

                }  
                else
                {
                    if (isfileondisk)
                    {
                        this.EmailMessage.Attachments.Add(new Attachment(System.IO.Path.Combine(location, filename)));
                    }
                    else if (isxmlfield)
                    {
                        //IP attachments : <?mso-infoPath-file-attachment-present?>
                        if (isipattachments)
                        {
                            SourceCode.Workflow.Common.SharePoint.Document.InfoPath.Attachments ipAttachments = new
                            SourceCode.Workflow.Common.SharePoint.Document.InfoPath.Attachments(content, xmlfieldxpath);

                            byte[] xmlfileData = ipAttachments[0].File;

                            string xmlfileName = ipAttachments[0].FileName;

                            if (string.IsNullOrEmpty(xmlfileName))
                            {
                                xmlfileName = filename;
                            }

                            System.IO.MemoryStream ms = new System.IO.MemoryStream(xmlfileData);

                            this.EmailMessage.Attachments.Add(new Attachment(ms, xmlfileName));
                        }
                        //Base64
                        else if (xmlfieldxpath.Length > 1)
                        {
                            //Xml Repeating Node
                            if ((xmlfilenamexpath.Length > 1) && (xmlfilecontentxpath.Length > 1))
                            {
                                XmlDocument xmlFileNameCollection = new XmlDocument();

                                XmlDocument xmlFileContentCollection = new XmlDocument();

                                if (xmlfilenamefieldscope.ToUpper() == "PROCESS")
                                {
                                    xmlFileNameCollection.LoadXml(K2.ProcessInstance.XmlFields[xmlfilenamefield].Value);
                                }
                                else if (xmlfilenamefieldscope.ToUpper() == "ACTIVITY")
                                {
                                    xmlFileNameCollection.LoadXml(K2.ActivityInstanceDestination.XmlFields[xmlfilenamefield].Value);
                                }

                                if (xmlfilecontentfieldscope.ToUpper() == "PROCESS")
                                {
                                    xmlFileContentCollection.LoadXml(K2.ProcessInstance.XmlFields[xmlfilecontentfield].Value);
                                }
                                else if (xmlfilenamefieldscope.ToUpper() == "ACTIVITY")
                                {
                                    xmlFileContentCollection.LoadXml(K2.ActivityInstanceDestination.XmlFields[xmlfilecontentfield].Value);
                                }

                                XmlNodeList xmlFileNameList = xmlFileNameCollection.SelectNodes(xmlfilenamexpath);

                                XmlNodeList xmlFileContentList = xmlFileContentCollection.SelectNodes(xmlfilecontentxpath);

                                for (Int32 I = 0; I < xmlFileContentList.Count; I++)
                                {
                                    System.IO.MemoryStream ms = new System.IO.MemoryStream(System.Convert.FromBase64String(xmlFileContentList[I].InnerText));

                                    this.EmailMessage.Attachments.Add(new Attachment(ms, xmlFileNameList[I].InnerText));
                                }
                            }
                            //Xml Node Content
                            else
                            {
                                System.IO.MemoryStream ms = new System.IO.MemoryStream(System.Convert.FromBase64String(content));

                                this.EmailMessage.Attachments.Add(new Attachment(ms, filename));
                            }
                        }
                        // Text
                        else
                        {
                            byte[] buffer = Encoding.UTF8.GetBytes(content);

                            System.IO.MemoryStream ms = new System.IO.MemoryStream(buffer);

                            this.EmailMessage.Attachments.Add(new Attachment(ms, filename));
                        }
                    }
                    else
                    {
                        if (isstringfield)
                        {
                            //Base64
                            if ((!isencodingtext) || (issofield) || (issolistfield))
                            {
                                System.IO.MemoryStream ms = new System.IO.MemoryStream(System.Convert.FromBase64String(content));

                                this.EmailMessage.Attachments.Add(new Attachment(ms, filename));
                            }
                            // Text
                            else
                            {
                                byte[] buffer = Encoding.UTF8.GetBytes(content);

                                System.IO.MemoryStream ms = new System.IO.MemoryStream(buffer);

                                this.EmailMessage.Attachments.Add(new Attachment(ms, filename));
                            }
                        }
                        // Binary 2 Base64
                        else
                        {
                            System.IO.MemoryStream ms = new System.IO.MemoryStream(System.Convert.FromBase64String(content));

                            this.EmailMessage.Attachments.Add(new Attachment(ms, filename));
                        }
                    }
                }
            }
        }

        private void ProcessAttachment(XmlElement fileAttachment, string overrideEncoding)
        {
            string encoding = string.IsNullOrEmpty(overrideEncoding) ? (fileAttachment.Attributes["encoding"] != null ? fileAttachment.Attributes["encoding"].Value : string.Empty) : overrideEncoding;
            string fileName = fileAttachment.SelectSingleNode("name").InnerText;
            string fileContent = fileAttachment.SelectSingleNode("content").InnerText;
            byte[] fileData = null;
            switch (encoding)
            {
                case "InfoPath":
                case "Base64":
                case "SharePoint":
                    fileData = System.Convert.FromBase64String(fileContent);
                    break;
                case "Xml":
                case "":
                default:
                    fileData = Encoding.UTF8.GetBytes(fileContent);
                    break;
            }
            System.IO.MemoryStream ms = new System.IO.MemoryStream(fileData);
            this.EmailMessage.Attachments.Add(new Attachment(ms, fileName));
        }

        private void SendMail_ExecuteCode(object sender, EventArgs e)
        {
            using(this.EmailMessage)
                SmtpMail.Send(this.EmailMessage, K2.ProcessInstance.Logger, K2.Configuration.SmartObjectServerConnectionString);

            this.EmailMessage = null;
        }

        #endregion

        #region IWorkflowContext<HOSTCONTEXT> Members

        public Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventItemContext_cfa257d5431c4a27a844b4ede15bedd6 K2
        {
            get
            {
                return _k2;
            }
            set
            {
                _k2 = value;
            }
        }

        #endregion

    }
}
]]></Content></CodeFile></CodeFiles><Guid>cfa257d5431c4a27a844b4ede15bedd6</Guid><MetaData /><Username /><CredentialGuid>00000000-0000-0000-0000-000000000000</CredentialGuid><Language>CSharp</Language></Extender><SMTPServer Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ArtifactLibraryFieldPart Type="SourceCode.Workflow.Design.ArtifactLibraryFieldPart" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>9794d46bc4d44b9dabc9f6c4e05aa347</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><FieldName>Mail Server</FieldName></ArtifactLibraryFieldPart></Parts><Guid>9a0a66b6b21148198ca28af0156afeda</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></SMTPServer><From Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ArtifactLibraryFieldPart Type="SourceCode.Workflow.Design.ArtifactLibraryFieldPart" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>7ac78688f1cc47b1aa07c66f7214ae13</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><FieldName>From Address</FieldName></ArtifactLibraryFieldPart></Parts><Guid>aad7331856464c7990724b07806cc28c</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></From><Subject Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>15621ec4bf3a4dd7bb2a42c507070b4b</Guid><ValueType>System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="592a1b65-295d-40a0-b27f-98e118954517&#xD;" /><DataFieldName>RequestID</DataFieldName><Scope>Process</Scope><Type>Long</Type><ListOption>None</ListOption></DataFieldPart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>284a29b4d23a4d7a9b27bb6332360663</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[ - ]]></Value></ValueTypePart><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>d172799a53464cf3a4ec642f7a52fa81</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="8ab835da-4f4e-4ad4-9d90-6dabd57a7fc8&#xD;" /><DataFieldName>EmployeeFullName</DataFieldName><Scope>Process</Scope><Type>String</Type><ListOption>None</ListOption></DataFieldPart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>52ae414777e3492aa78d3cbae6fb5098</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[: ]]></Value></ValueTypePart><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>865a8a69f80e43c3b98b25daa99e39aa</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="8ef45b7c-d39f-4b35-a6dc-b4a9f9301aed&#xD;" /><DataFieldName>RequestServiceTypeName</DataFieldName><Scope>Process</Scope><Type>String</Type><ListOption>None</ListOption></DataFieldPart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>7e6981656b864c138834a5aaa75d1b01</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[ access ]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>1c31e4d99a39440daab155329794381c</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[operation ]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>39b0330221c940c6be676550d34c83a2</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[has been ]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>c4ec4ecc42374733bb673c3e3d3be741</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[COMPLETED ]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>fb3086b254ae44aa812cbfed59b4e2b3</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[by ]]></Value></ValueTypePart><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>7ce5b02638134c97b3f06715ce4aa019</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="3b2a57a4-5a5e-41cc-a64e-b03ec2da18e9&#xD;" /><DataFieldName>OperatorName</DataFieldName><Scope>Process</Scope><Type>String</Type><ListOption>None</ListOption></DataFieldPart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>8b9e14c39e764180ae10b7a13afd240c</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[ at ]]></Value></ValueTypePart><FunctionFieldPart Type="SourceCode.Workflow.Functions.Design.FunctionFieldPart" Assembly="SourceCode.Workflow.Functions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><WizardDefinition Type="SourceCode.Workflow.Functions.Wizard.FunctionFieldPartDefinition" Assembly="SourceCode.Workflow.Functions.Wizard, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>fcc384f1274140cbb863c46a0ccb0e9a</Guid><Name>{bb1df5ac-0afe-4e98-adf8-e2a257aa0c7c}</Name><RegisteredItem>Function FieldPart Wizard</RegisteredItem></WizardDefinition><Guid>9f05be1d0254495197e8ff5d536ec87e</Guid><ValueType>System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><MethodPath>SourceCode.Workflow.Functions.DateAndTime, SourceCode.Workflow.Functions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d|Now</MethodPath><ReturnType>System.DateTime</ReturnType><Name>Now</Name><Desc>Gets the current date and time.</Desc></FunctionFieldPart></Parts><Guid>c80732e8747146a490b978631771bd34</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Subject><Body Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>8b18f1e7352240ffb7ed1c854bd36c08</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<HTML>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>a00a22d52b6c426cb6e59409a95b0cb5</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<HEAD>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>ea71b6ff167441d3b061a70ea67fc886</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</HEAD>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>3ca09e48b94441dca769f3de49544ecb</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<BODY>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>d948b77954c24b4d9a867c3fb5f8a61f</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<p style='font-family:Arial;font-size:11pt;font-weight:Normal;font-style:Normal;font-stretch:Normal;color:#000000;text-align:Left;text-decoration:None;line-height:1.5'>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>9c8e0be211a14e10af222bfddb94e6c2</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</p>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>0a9acc9851ed46bdb1008f584f2649d5</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</BODY>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>4bb896d74e3b4635b3ea8b8fff55d362</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</HTML>]]></Value></ValueTypePart></Parts><Guid>f9c1a2d1fa8941829327eef988070e9e</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Body><Guid>fac78542324f4f4f9c7d9263a7a6714e</Guid><MetaData /><Parent ref="9837affb-aa7e-4cce-bf8f-af5f1d32b33e&#xD;" /><ToOriginator>1</ToOriginator><Importance>0</Importance><HTMLEmail>1</HTMLEmail><AttachmentsVersion>2</AttachmentsVersion></MailEventItem><SimpleDestinationRule Type="SourceCode.Workflow.Design.SimpleRules.SimpleDestinationRule" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Extender Type="SourceCode.Workflow.Design.WindowsWorkflowExtender" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><CodeFiles><CodeFile><Guid>3e85cb3f76994c1b850311d171c78410</Guid><OriginalFileName>@safeitemname@.xoml</OriginalFileName><Primary>1</Primary><Content><![CDATA[<ns0:WorkflowContext xmlns:ns0="clr-namespace:SourceCode.Workflow.Common.Extenders;Assembly=SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d" x:Class="ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2.DestinationRule_417c85e736e541838dd4fe4cc7566156" x:Name="DestinationRule_417c85e736e541838dd4fe4cc7566156" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ns0:WorkflowContext.LockedActivities>
    </ns0:WorkflowContext.LockedActivities>
	<CodeActivity x:Name="DestinationRule" ExecuteCode="DestinationRule_ExecuteCode" />
</ns0:WorkflowContext>
]]></Content></CodeFile><CodeFile><Guid>2fc8dd388e4444fc9521a9294650421a</Guid><OriginalFileName>@safeitemname@.xoml.cs</OriginalFileName><Content><![CDATA[using System;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Collections;
using System.Drawing;
using System.Workflow.ComponentModel.Compiler;
using System.Workflow.ComponentModel.Serialization;
using System.Workflow.ComponentModel;
using System.Workflow.ComponentModel.Design;
using System.Workflow.Runtime;
using System.Workflow.Activities;
using System.Workflow.Activities.Rules;
using SourceCode.Workflow.Common.Extenders;
using SourceCode.KO;
using hostContext = Project_fd7ed7e1f1e345d7a3a78850c91470e2.DestinationRuleContext_417c85e736e541838dd4fe4cc7566156;
namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
	public partial class DestinationRule_417c85e736e541838dd4fe4cc7566156 : IWorkflowContext<hostContext>
	{
		#region K2 Context

        private hostContext _k2;

        #endregion

		#region IWorkflowContext<hostContext> Members

        public Project_fd7ed7e1f1e345d7a3a78850c91470e2.DestinationRuleContext_417c85e736e541838dd4fe4cc7566156 K2
        {
            get
            {
                return _k2;
            }
            set
            {
                _k2 = value;
            }
        }

        #endregion
        
        private void DestinationRule_ExecuteCode(object sender, EventArgs e)
        {
            if (K2.ActivityInstance.SlotInstance)
            {
                //
                // The activity is a slot instance activity
                //

                int slotCount = 0;
                string[] slotInstanceData = null;

                if (K2.Configuration.DynamicSlots)
                {
                    // If it is dynamic slot, get the slot count from
                    // the initialization data
                    slotCount = K2.Configuration.SlotInstanceData.Length;
                    slotInstanceData = K2.Configuration.SlotInstanceData;
                }
                else
                {
                    // Get the slot count and prepare the initialization
                    // data
                    slotCount = K2.Configuration.Slots;
                    slotInstanceData = new string[slotCount];
                    string initData = string.Empty;
                    if (K2.Configuration.SlotInstanceData.Length > 0)
                    {
                        initData = K2.Configuration.SlotInstanceData[0];
                    }
                    for (int i = 0; i < slotCount; i++)
                    {
                        slotInstanceData[i] = initData;
                    }
                }

                // Set the slot count and initialization data
                K2.Slots = slotCount;
                K2.SlotInstanceData = K2.Configuration.SlotInstanceData;
            }
            else
            {
                K2.DynamicQueues = K2.Configuration.DynamicQueues;
                K2.ResolveQueuesToUsers = K2.Configuration.ResolveQueuesToUsers;

                int setCount = K2.Configuration.SetCount;

                for (int i = 0; i < setCount; i++)
                {
                    if (GetRuleResult(i + 1))
                    {
                        AddDestinations(i + 1);
                    }
                }
            }
        }

       #region - Helper Methods -

        private bool GetRuleResult(int setIdx)
        {
            // Get the property that returns the result
            string propName = string.Format("DestinationSetRuleResult{0}", setIdx);
            System.Reflection.PropertyInfo pi =
                K2.Configuration.GetType().GetProperty(propName);
            if (pi == null)
                return true;

            // Invoke the get
            System.Reflection.MethodInfo mi = pi.GetGetMethod();
            if (mi == null)
                return true;

            object retval = mi.Invoke(K2.Configuration, null);

            return Convert.ToBoolean(retval);
        }

        private void AddDestinations(int setIdx)
        {
            // Get the property that returns the result
            string propName = string.Format("DestinationSetDestinationTable{0}", setIdx);
            System.Reflection.PropertyInfo pi =
                K2.Configuration.GetType().GetProperty(propName);
            if (pi == null)
                return;
            System.Reflection.MethodInfo mi = pi.GetGetMethod();
            if (mi == null)
                return;

            // Invoke the get
            object retval = mi.Invoke(K2.Configuration, null);
            if (retval == null)
                return;

            string[][] destinations = (string[][])retval;

            // Results are returned in a jagged array. The first item contains the
            // DestinationType and the rest will be the users, groups or queues.
            for (int row = 0; row < destinations.Length; row++)
            {
                DestinationType destType = DestinationType.User;

                // Get the DestinationType
                switch (destinations[row][0])
                {
                    case "User":
                        destType = DestinationType.User;
                        break;
                    case "Group":
                        destType = DestinationType.Group;
                        break;
                    case "Queue":
                        destType = DestinationType.Queue;
                        break;
                }

                // Iterate through the rest of the list and add each
                // destination with its corresponding type.
                for (int i = 1; i < destinations[row].Length; i++)
                {
                    K2.Destinations.Add(destType, destinations[row][i]);
                }
            }
        }

        #endregion
    }
}
]]></Content></CodeFile></CodeFiles><Guid>417c85e736e541838dd4fe4cc7566156</Guid><MetaData /><Username /><CredentialGuid>00000000-0000-0000-0000-000000000000</CredentialGuid><Language>CSharp</Language></Extender><DestinationSets><DestinationSet Type="SourceCode.Workflow.Design.SimpleRules.DestinationSet" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Destinations><Destination Type="SourceCode.Workflow.Design.SimpleRules.Destination" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>1c9adec1ebdc4f9b901f462cb29433d8</Guid><ValueType>System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="dbaea8d4-2773-4b35-9e0c-ffe671fdafff&#xD;" /><DataFieldName>OperatorUserID</DataFieldName><Scope>Process</Scope><Type>String</Type><ListOption>None</ListOption></DataFieldPart></Parts><Guid>42dd89d5599142b6852837016620c3de</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>df9d2fdf7b9146c4be21bdd017f25d9c</Guid></Destination></Destinations><Guid>0f67da9c85c24de5837466e4ded1aef2</Guid><Name>Default</Name></DestinationSet></DestinationSets><Guid>809f287df41b46b5a05b218a184449d0</Guid><MetaData /><Parent ref="36ca722e-3489-4325-aa7a-ff1331db725d&#xD;" /></SimpleDestinationRule><DefaultOutcomeSucceedingRule Type="SourceCode.Workflow.Design.Outcome.DefaultOutcomeSucceedingRule" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Extender Type="SourceCode.Workflow.Design.WindowsWorkflowExtender" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><CodeFiles><CodeFile><Guid>f37a99f8b6b5459aa275229b97c9b57f</Guid><OriginalFileName>@safeitemname@.xoml</OriginalFileName><Primary>1</Primary><Content><![CDATA[<ns0:WorkflowContext xmlns:ns0="clr-namespace:SourceCode.Workflow.Common.Extenders;Assembly=SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d" x:Class="ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2.SucceedingRule_ccfc255dd8db472e8b5363127080bc61" x:Name="SucceedingRule_ccfc255dd8db472e8b5363127080bc61" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<ns0:WorkflowContext.LockedActivities>
		<x:Array Type="{x:Type System.String}">
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">RuleOutcome</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">RuleOutcomeTrue</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">EvaluateRule</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">SetSucceedingRuleTrue</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">SetSucceedingRuleFalse</ns1:String>
		</x:Array>
	</ns0:WorkflowContext.LockedActivities>
	<IfElseActivity x:Name="RuleOutcome">
		<IfElseBranchActivity x:Name="RuleOutcomeTrue">
			<IfElseBranchActivity.Condition>
				<CodeCondition Condition="EvaluateRule" />
			</IfElseBranchActivity.Condition>
			<CodeActivity x:Name="SetSucceedingRuleTrue" ExecuteCode="SetSucceedingRuleTrue_ExecuteCode" />
		</IfElseBranchActivity>
		<IfElseBranchActivity x:Name="RuleOutcomeFalse">
			<CodeActivity x:Name="SetSucceedingRuleFalse" ExecuteCode="SetSucceedingRuleFalse_ExecuteCode" />
		</IfElseBranchActivity>
	</IfElseActivity>
	
</ns0:WorkflowContext>
]]></Content></CodeFile><CodeFile><Guid>352d7795d5ba49e092bf83d9de7f7227</Guid><OriginalFileName>@safeitemname@.xoml.cs</OriginalFileName><Content><![CDATA[using System;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Collections;
using System.Drawing;
using System.Workflow.ComponentModel.Compiler;
using System.Workflow.ComponentModel.Serialization;
using System.Workflow.ComponentModel;
using System.Workflow.ComponentModel.Design;
using System.Workflow.Runtime;
using System.Workflow.Activities;
using System.Workflow.Activities.Rules;
using SourceCode.Workflow.Common.Extenders;
using SourceCode.KO;
using System.Xml;
using hostContext = Project_fd7ed7e1f1e345d7a3a78850c91470e2.SucceedingRuleContext_ccfc255dd8db472e8b5363127080bc61;

namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
	public partial class SucceedingRule_ccfc255dd8db472e8b5363127080bc61 : IWorkflowContext<hostContext>
	{
		#region K2 Context

        	private hostContext _k2;

       		#endregion

		#region IWorkflowContext<hostContext> Members

        	public Project_fd7ed7e1f1e345d7a3a78850c91470e2.SucceedingRuleContext_ccfc255dd8db472e8b5363127080bc61 K2
        	{
            		get
            		{
            		    return _k2;
            		}
            		set
            		{
            		    _k2 = value;
            		}
        	}

        	#endregion

		private void EvaluateRule(object sender, ConditionalEventArgs e)
        	{

            		e.Result = SucceedingRuleHelper.AnyOutcomesEvaluatedSuccessfully(K2);
             
        	}

        	private void SetSucceedingRuleTrue_ExecuteCode(object sender, EventArgs e)
        	{
            		K2.SucceedingRule = true;
        	}

        	private void SetSucceedingRuleFalse_ExecuteCode(object sender, EventArgs e)
        	{
            		K2.SucceedingRule = false;
        	}

	}
}

]]></Content></CodeFile><CodeFile><Guid>03f8815ea2074cb0a3ad48f5722e654f</Guid><OriginalFileName>@safeitemname@Helper.cs</OriginalFileName><Primary>1</Primary><Content><![CDATA[using System;
using System.Xml;
using SourceCode.KO;
using SourceCode.Workflow.Common.Extenders;

namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
	public partial class SucceedingRule_ccfc255dd8db472e8b5363127080bc61
	{
		public class SucceedingRuleHelper
		{

			public static bool AnyOutcomesEvaluatedSuccessfully(Project_fd7ed7e1f1e345d7a3a78850c91470e2.SucceedingRuleContext_ccfc255dd8db472e8b5363127080bc61 K2)
			{
				bool retval = false;
                K2.ProcessInstance.Logger.LogDebugMessage("Outcome.SucceedingRule.Helper", "Outcome Evaluation: Started");
    			for (int i = 0; i < K2.Configuration.SetCount; i++)
    			{
        			if (GetRuleResult(K2, i))
        			{
                        K2.ProcessInstance.Logger.LogDebugMessage("Outcome.SucceedingRule.Helper", "Outcome Event Evaluation Result: " + GetName(K2,i));
            			SetOutcomeResult(K2, GetName(K2,i));
          				retval = true;
		                break;
        			} 

    			}

                K2.ProcessInstance.Logger.LogDebugMessage("Outcome.SucceedingRule.Helper", "Outcome Evaluation: Completed");
				return retval;
			}

			public static void SetOutcomeResult(Project_fd7ed7e1f1e345d7a3a78850c91470e2.SucceedingRuleContext_ccfc255dd8db472e8b5363127080bc61 K2, string value)
			{
				K2.ActivityInstance.DataFields["Outcome"].Value = value;	
			}

			private static string GetName(Project_fd7ed7e1f1e345d7a3a78850c91470e2.SucceedingRuleContext_ccfc255dd8db472e8b5363127080bc61 K2, int setIdx)
		        {
		            // Get the property that returns the result
		            string propName = string.Format("OutcomeName{0}", setIdx);
		            System.Reflection.PropertyInfo pi = K2.Configuration.GetType().GetProperty(propName);
		            if (pi == null)
		                return string.Empty;

		            // Invoke the get
		            System.Reflection.MethodInfo mi = pi.GetGetMethod();
		            if (mi == null)
		                return string.Empty;

		            object retval = mi.Invoke(K2.Configuration, null);

		            return Convert.ToString(retval);
		        }

		        private static bool GetRuleResult(Project_fd7ed7e1f1e345d7a3a78850c91470e2.SucceedingRuleContext_ccfc255dd8db472e8b5363127080bc61 K2, int setIdx)
		        {
		            // Get the property that returns the result
		            string propName = string.Format("OutcomeRule{0}", setIdx);
		            System.Reflection.PropertyInfo pi = K2.Configuration.GetType().GetProperty(propName);
		            if (pi == null)
		                return true;

		            // Invoke the get
		            System.Reflection.MethodInfo mi = pi.GetGetMethod();
		            if (mi == null)
		                return true;

		            object retval = mi.Invoke(K2.Configuration, null);

		            return Convert.ToBoolean(retval);
		        }
		}
	}
}]]></Content></CodeFile></CodeFiles><Guid>ccfc255dd8db472e8b5363127080bc61</Guid><MetaData /><Username /><CredentialGuid>00000000-0000-0000-0000-000000000000</CredentialGuid><Language>CSharp</Language></Extender><Outcomes><OutcomeItem Type="SourceCode.Workflow.Design.Outcome.Base.OutcomeItem" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Rule Type="SourceCode.Workflow.Design.SimpleRules.SimpleRule" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Expressions><ExpressionLevelPair Type="SourceCode.Workflow.Design.SimpleRules.ExpressionLevelPair" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Exp Type="SourceCode.Workflow.Design.SimpleRules.ComparisonListExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Left Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>5d58eb7edc9f401083dd3e83645c42e5</Guid><IsList>1</IsList><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="c367ff8b-b72c-49da-9e2d-38d73d204f59&#xD;" /><DataFieldName>Action Result</DataFieldName><Scope>Destination</Scope><Type>String</Type><ListOption>Slots</ListOption></DataFieldPart></Parts><Guid>03797d01222b4595827947e0f86a485b</Guid><IsList>1</IsList><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>5bcad6a5c82b4539b4b9bd7fc9e98d78</Guid></Left><Right Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>51ecf0de6b0f47989eca7713edd7a8b7</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[Done]]></Value></ValueTypePart></Parts><Guid>8a2ee05938ec433896324d99eabc8998</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>20a0028be4ac4f77b5de1c20f2498348</Guid></Right><Count Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>7fd2c53900144a37801b629ff8e265c6</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>20e18c0841ef4662bec27a09ac25dae5</Guid></Count><Guid>6288e9ad2fe74827bdbd68cbc6b10324</Guid><Operator>Equal</Operator><ListOperator>All</ListOperator></Exp><Guid>b0295a2355244c3a99da1ebe1e1305d8</Guid></ExpressionLevelPair></Expressions><Guid>f823cef2167d4acb94203e9256bd40fe</Guid></Rule><Guid>99298ed73b5943df84ae58b220903119</Guid><Name>Done</Name><Description>Default Outcome generated originally from the Complete Action.</Description></OutcomeItem><OutcomeItem Type="SourceCode.Workflow.Design.Outcome.Base.OutcomeItem" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Rule Type="SourceCode.Workflow.Design.SimpleRules.SimpleRule" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Expressions><ExpressionLevelPair Type="SourceCode.Workflow.Design.SimpleRules.ExpressionLevelPair" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Exp Type="SourceCode.Workflow.Design.SimpleRules.ComparisonListExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Left Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>c9e6398dce5a4190a3b6f567e196526a</Guid><IsList>1</IsList><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="c367ff8b-b72c-49da-9e2d-38d73d204f59&#xD;" /><DataFieldName>Action Result</DataFieldName><Scope>Destination</Scope><Type>String</Type><ListOption>Slots</ListOption></DataFieldPart></Parts><Guid>1e5d8e6e40f345fba583deadf14ca367</Guid><IsList>1</IsList><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>86efbc1f93e74bad96da8aa9fd85a2ef</Guid></Left><Right Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>77b568def0604bb5ae68f8ed80eaf03d</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[Cancel]]></Value></ValueTypePart></Parts><Guid>7e3be5d4c61346b7aee5e8b3ac2c970c</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>bbec95855116451fa9a160e419e34e86</Guid></Right><Count Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>3a9877201e7c422cb747c1ee9f12c579</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>74d4a84306814c348377e6798e05751a</Guid></Count><Guid>2cf5cd4ae251415fa6ca9c78bccd380a</Guid><Operator>Equal</Operator><ListOperator>All</ListOperator></Exp><Guid>1f73fbf9e0374301b9bdef98d23ab595</Guid></ExpressionLevelPair></Expressions><Guid>5c73432f066d4131bf8198d594d59bce</Guid></Rule><Guid>0f1015ab9a4044a68ae763afaa3b4673</Guid><Name>Cancel</Name><Description>Default Outcome generated originally from the Cancel Action.</Description></OutcomeItem></Outcomes><Guid>2ddbdddad00340c28f1fffb23f9159de</Guid><MetaData /><Parent ref="36ca722e-3489-4325-aa7a-ff1331db725d&#xD;" /></DefaultOutcomeSucceedingRule><ClientEventItem Type="SourceCode.Workflow.Design.ClientEventItem" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Extender Type="SourceCode.Workflow.Design.WindowsWorkflowExtender" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><CodeFiles><CodeFile><Guid>2a1ede9eb82b47d7bbdc15954282beb1</Guid><OriginalFileName>@safeitemname@.xoml</OriginalFileName><Primary>1</Primary><Content><![CDATA[<ns0:WorkflowContext xmlns:ns0="clr-namespace:SourceCode.Workflow.Common.Extenders;Assembly=SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d" x:Class="ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2.EventItem_7cb25dd3ce6f4de4b647d5160ebbc36d" x:Name="EventItem_7cb25dd3ce6f4de4b647d5160ebbc36d" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow">
	<ns0:WorkflowContext.LockedActivities>
		<x:Array Type="{x:Type System.String}">
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">SendToInternet</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">SendToMobile</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">SendToExchange</ns1:String>
		</x:Array>
	</ns0:WorkflowContext.LockedActivities>
	<ConditionedActivityGroup x:Name="ClientEventActivity">
		<ConditionedActivityGroup.UntilCondition>
			<CodeCondition Condition="UntilCondition" />
		</ConditionedActivityGroup.UntilCondition>
		<CodeActivity x:Name="SendToInternet" ExecuteCode="SendWorkToInternet">
			<ConditionedActivityGroup.WhenCondition>
				<CodeCondition Condition="ShouldSendToInternet" />
			</ConditionedActivityGroup.WhenCondition>
		</CodeActivity>
		<CodeActivity x:Name="SendToMobile" ExecuteCode="SendWorkToMobile">
			<ConditionedActivityGroup.WhenCondition>
				<CodeCondition Condition="ShouldSendToMobile" />
			</ConditionedActivityGroup.WhenCondition>
		</CodeActivity>
		<CodeActivity x:Name="SendToExchange" ExecuteCode="SendWorkToExchange">
			<ConditionedActivityGroup.WhenCondition>
				<CodeCondition Condition="ShouldSendToExchange" />
			</ConditionedActivityGroup.WhenCondition>
		</CodeActivity>
	</ConditionedActivityGroup>

</ns0:WorkflowContext>]]></Content></CodeFile><CodeFile><Guid>a4aa6d837c7d4ac49c8340204683ed19</Guid><OriginalFileName>@safeitemname@.xoml.cs</OriginalFileName><Content><![CDATA[using System;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Collections;
using System.Drawing;
using System.Workflow.ComponentModel.Compiler;
using System.Workflow.ComponentModel.Serialization;
using System.Workflow.ComponentModel;
using System.Workflow.ComponentModel.Design;
using System.Workflow.Runtime;
using System.Workflow.Activities;
using System.Workflow.Activities.Rules;
using SourceCode.KO;
using SourceCode.Workflow.Common.Extenders;
using hostContext = Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventItemContext_7cb25dd3ce6f4de4b647d5160ebbc36d;
namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
	public partial class EventItem_7cb25dd3ce6f4de4b647d5160ebbc36d : IWorkflowContext<hostContext>
    {

		private bool internetExecuted = false;
        private bool mobileExecuted = false;
        private bool exchangeExecuted = false;
		private bool AllowAnyUserToFinishEventDone = false;

        #region K2 Context

        private hostContext _k2;

        #endregion

		#region Client Event Activity

		private void UntilCondition(object sender, ConditionalEventArgs e)
        {
			// No URL(s) were specified, add a blank worklist item
            if (string.IsNullOrEmpty(K2.Configuration.InternetUrl)
                && string.IsNullOrEmpty(K2.Configuration.MobileUrl)
                && !bool.Parse(K2.Configuration.SendToMobile))
            {
                K2.AddWorklist("ASP", "");
                e.Result = true;
            }
            else
            {
                if (!AllowAnyUserToFinishEventDone)
                {
                    if (Convert.ToBoolean(K2.Configuration.AllowAnyUserToFinishEvent))
                    {
                        K2.VerifyCredentials = false;
                    }
                    else
                    {
                        K2.VerifyCredentials = true;
                    }
                    AllowAnyUserToFinishEventDone = true;
                }
                if (internetExecuted && mobileExecuted && exchangeExecuted)
                {
                    e.Result = true;
                }
                else
                {
                    e.Result = false;
                }
            }


        }
		#endregion

        #region Internet

		private void ShouldSendToInternet(object sender, ConditionalEventArgs e)
        {
            internetExecuted = true;
            e.Result = bool.Parse(K2.Configuration.SendToInternet);
        }

        private void SendWorkToInternet(object sender, EventArgs e)
        {
            string strURL = K2.Configuration.InternetUrl;
            strURL = strURL.Replace("{SERIALNO}", K2.SerialNumber);
            K2.AddWorklist(K2.Configuration.InternetPlatform, System.Web.HttpUtility.UrlPathEncode(strURL));
            
            
        }
        #endregion

        #region Mobile
        private void SendWorkToMobile(object sender, EventArgs e)
        {
            string strURL = K2.Configuration.MobileUrl;
            strURL = strURL.Replace("{SERIALNO}", K2.SerialNumber);
            K2.AddWorklist(K2.Configuration.MobilePlatform, System.Web.HttpUtility.UrlPathEncode(strURL));
            
        }

        private void ShouldSendToMobile(object sender, ConditionalEventArgs e)
        {
            mobileExecuted = true;
            e.Result = bool.Parse(K2.Configuration.SendToMobile);
        }
        #endregion

        #region Exchange

        private void ShouldSendToExchange(object sender, ConditionalEventArgs e)
        {
            exchangeExecuted = true;
            e.Result = bool.Parse(K2.Configuration.SendToExchange);
        }

        private void SendWorkToExchange(object sender, EventArgs e)
        {
            K2.AddWorklist("EXCHANGEPROFILENAME", K2.Configuration.ExchangeProfileName);
            K2.AddWorklist("EXCHANGEFORMTYPE", K2.Configuration.ExchangeFormType);
            
        }

        #endregion


        #region Other Methods

        #endregion


        #region IWorkflowContext<hostContext> Members

        public Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventItemContext_7cb25dd3ce6f4de4b647d5160ebbc36d K2
        {
            get
            {
                return _k2;
            }
            set
            {
                _k2 = value;
            }
        }

        #endregion
    }
}
]]></Content></CodeFile></CodeFiles><Guid>7cb25dd3ce6f4de4b647d5160ebbc36d</Guid><MetaData /><Username /><CredentialGuid>00000000-0000-0000-0000-000000000000</CredentialGuid><Language>CSharp</Language></Extender><NotificationMessage Type="SourceCode.Workflow.Authoring.NotificationMessage" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Subject Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>1e27bf6ee76e428d8a63a9f5f3201646</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[Operator Action Notification]]></Value></ValueTypePart></Parts><Guid>037459b9e08a4c85998fcc877491a956</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Subject><Body Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>85216a9ad2224ff384488d3c74f6a52b</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<HTML>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>764f3a1a6ceb41e3be8d6e01df9e8af2</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<HEAD>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>8b2bfcb3dda643d9b413ed5a7ca29593</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</HEAD>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>772250e292b34b73bf187e7cf6e37923</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<BODY>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>c19c38c2bf9141a3afa7e276d709a7f1</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<p style='font-family:Verdana;font-size:13pt;font-weight:Normal;font-style:Normal;font-stretch:Normal;color:#000000;text-align:Left;text-decoration:None;line-height:1'>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>b2d0dd482515493b9c90bc55020103e0</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<span style='font-family:Verdana;font-size:10pt;font-weight:Normal;font-style:Normal;font-stretch:Normal;color:#000000;text-align:Left;text-decoration:None;line-height:1' id='run'>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>850708a2243b452d9139c1f64d052419</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[Dear ]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>50fa55a86c4140e08a5868c3329325aa</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</span>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>166f8ff325ec4cc4a935081a92235abc</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<span style='font-family:Verdana;font-size:10pt;font-weight:Normal;font-style:Normal;font-stretch:Normal;color:#000000;text-align:Left;text-decoration:None;line-height:1' id='run'>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>fb2c51f760cb414285a92636802c43ff</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[participants]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>7d584d6edb6b4fc4b853294811391c5e</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</span>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>d133dcffcde14bef9d610385c6fca881</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<span style='font-family:Verdana;font-size:10pt;font-weight:Normal;font-style:Normal;font-stretch:Normal;color:#000000;text-align:Left;text-decoration:None;line-height:1' id='run'>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>431438ce6dec4f11b77871011c1c2eb3</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[,<br><br>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>ad9f60578d4340d6a351bae4cbc60250</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</span>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>fc614244e9b0435c92da3ff71e6f493c</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<span style='font-family:Verdana;font-size:10pt;font-weight:Normal;font-style:Normal;font-stretch:Normal;color:#000000;text-align:Left;text-decoration:None;line-height:1' id='run'>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>6bccf7a1d0874df3a567ab64d5f24ab0</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[Please u]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>eba027307425480e9d7694becdf03de7</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</span>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>7c58850eb7584cf7912a7c0925de1415</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<span style='font-family:Verdana;font-size:10pt;font-weight:Normal;font-style:Normal;font-stretch:Normal;color:#000000;text-align:Left;text-decoration:None;line-height:1' id='run'>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>88b2c81d9fcb4bfebc48c132adca55a2</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[se the following link to open the worklist item:<br>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>d18c02e221c3440e91489d3451eb6843</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</span>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>97cf1f7490c84710a9c3172dd4f1bc14</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[<span style='font-family:Verdana;font-size:10pt;font-weight:Normal;font-style:Normal;font-stretch:Normal;color:#000000;text-align:Left;text-decoration:None;line-height:1'>]]></Value></ValueTypePart><FunctionFieldPart Type="SourceCode.Workflow.Functions.Design.FunctionFieldPart" Assembly="SourceCode.Workflow.Functions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Inputs><FunctionInput Type="SourceCode.Workflow.Functions.Design.FunctionInput" Assembly="SourceCode.Workflow.Functions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>187485986b154d71acb0e3f3c7edfc43</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[Click to open worklist item]]></Value></ValueTypePart></Parts><Guid>4e5f3a5e98de447c806847fc9a90fec2</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>2ea6136ec8fb4050bd3040b012688b0c</Guid><Type>System.String</Type><Name>Display Name</Name><Description>The text to be displayed.</Description></FunctionInput><FunctionInput Type="SourceCode.Workflow.Functions.Design.FunctionInput" Assembly="SourceCode.Workflow.Functions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>1030a9d3e0374a289f4e80fbaea0d8c1</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[http://K2DevForms.intranet.local/Runtime/Runtime/Form/IPEX.NewUserAdmin.ITServiceRequestWorkspaceSF/]]></Value></ValueTypePart></Parts><Guid>16b12e50f4a74c4b92d8b2fd4a97f6c2</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>373f9a89f4b349af9deed3ff9a230f5d</Guid><Type>System.String</Type><Name>URL</Name><Description>The address the hyperlink points to.</Description></FunctionInput></Inputs><WizardDefinition Type="SourceCode.Workflow.Functions.Wizard.FunctionFieldPartDefinition" Assembly="SourceCode.Workflow.Functions.Wizard, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>5d04dc654be641f2bb006b9af3ec9123</Guid><Name>{ac4496ca-8ebf-40de-9f4e-7cffb6b0a1cf}</Name><RegisteredItem>Function FieldPart Wizard</RegisteredItem></WizardDefinition><Guid>c09dd08437774f91b50e0877498bb845</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><FormattingOptions>&lt;font:Verdana&gt;&lt;size:10&gt;</FormattingOptions><MethodPath>SourceCode.Workflow.Functions.HTMLHelper, SourceCode.Workflow.Functions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d|CreateHyperlink</MethodPath><ReturnType>System.String</ReturnType><Name>Hyperlink</Name><Desc>Creates a hyperlink with a display name and URL.</Desc></FunctionFieldPart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>75a204a2ac7242958f132114ca0d37c5</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</span>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>4b7573fd693e4cf48f48040223344b88</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</p>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>17daa13ffa204444bcd04556ea767987</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</BODY>]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>0e3d51be4fef4b70bd335775df5ca92a</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[</HTML>]]></Value></ValueTypePart></Parts><Guid>398512652c824e91abda78b519bad0f6</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Body><From Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ArtifactLibraryFieldPart Type="SourceCode.Workflow.Design.ArtifactLibraryFieldPart" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>6a8a5c89e78243e796efa7ebf7481ed1</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><FieldName>From Address</FieldName></ArtifactLibraryFieldPart></Parts><Guid>6d6ff2e945f849359c66d3d9f136300d</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></From><Guid>f0e2f199f9ec48e5b715fdb12b81c8fd</Guid><HTMLEmail>1</HTMLEmail><IsHTMLTemplate>0</IsHTMLTemplate></NotificationMessage><InternetUrl Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>bdec2a128905464da5fb947a29f86af3</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[http://K2DevForms.intranet.local/Runtime/Runtime/Form/IPEX.NewUserAdmin.ITServiceRequestApprovalSF/]]></Value></ValueTypePart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e2c18c8ebf9b4941ac1aa966c6887b66</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[?ID=]]></Value></ValueTypePart><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>92e2014d8b4b4faf95883137be72f122</Guid><ValueType>System.Int64, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="592a1b65-295d-40a0-b27f-98e118954517&#xD;" /><DataFieldName>RequestID</DataFieldName><Scope>Process</Scope><Type>Long</Type><ListOption>None</ListOption></DataFieldPart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>cb715d12beeb419b94edceda6ff87f15</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[_]]></Value></ValueTypePart><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>be8b9252c6fd4f978414661d197bdb99</Guid><ValueType>System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="af55a3e8-ddd0-43a9-8fce-426887c56950&#xD;" /><DataFieldName>OperatorCheckListID</DataFieldName><Scope>Process</Scope><Type>Integer</Type><ListOption>None</ListOption></DataFieldPart><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>81b9444ff0804807a0dd1f6e8fbaab34</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[&]]></Value></ValueTypePart><SerialNoFieldPart Type="SourceCode.Workflow.Design.SerialNoFieldPart" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>1439577f655c405b902e16a23584c23d</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value>SN={SERIALNO}</Value></SerialNoFieldPart></Parts><Guid>ea74cfdca6374b63b3ef80241ad445df</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></InternetUrl><Guid>f4f6598d1c6f4ab3818bc87dda050b75</Guid><MetaData /><Parent ref="502fc7ac-d034-44c1-8717-dbf75bf541dc&#xD;" /><Notification>1</Notification><UseCustomNotification>1</UseCustomNotification><SendToInternet>1</SendToInternet><InternetPlatform>ASP</InternetPlatform><MobilePlatform>ASP</MobilePlatform></ClientEventItem><DefaultOutcomeEventSucceedingRule Type="SourceCode.Workflow.Design.Outcome.DefaultOutcomeEventSucceedingRule" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Extender Type="SourceCode.Workflow.Design.WindowsWorkflowExtender" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><CodeFiles><CodeFile><Guid>a45fcba69e654f649cdd9a5dc8bd91fc</Guid><OriginalFileName>@safeitemname@.xoml</OriginalFileName><Primary>1</Primary><Content><![CDATA[<ns0:WorkflowContext xmlns:ns0="clr-namespace:SourceCode.Workflow.Common.Extenders;Assembly=SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d" x:Class="ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2.EventSucceedingRule_65723b27fc7845eabf2127a7bb1e4c6b" x:Name="EventSucceedingRule_65723b27fc7845eabf2127a7bb1e4c6b" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <ns0:WorkflowContext.LockedActivities>
    <x:Array Type="{x:Type System.String}">
      <ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">RuleOutcome</ns1:String>
      <ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">RuleOutcomeTrue</ns1:String>
      <ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">EvaluateRule</ns1:String>
      <ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">SetSucceedingRuleTrue</ns1:String>
      <ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">SetSucceedingRuleFalse</ns1:String>
    </x:Array>
  </ns0:WorkflowContext.LockedActivities>
  <IfElseActivity x:Name="RuleOutcome">
    <IfElseBranchActivity x:Name="RuleOutcomeTrue">
      <IfElseBranchActivity.Condition>
        <CodeCondition Condition="EvaluateRule" />
      </IfElseBranchActivity.Condition>
      <CodeActivity x:Name="SetSucceedingRuleTrue" ExecuteCode="SetSucceedingRuleTrue_ExecuteCode" />
    </IfElseBranchActivity>
    <IfElseBranchActivity x:Name="RuleOutcomeFalse">
      <CodeActivity x:Name="SetSucceedingRuleFalse" ExecuteCode="SetSucceedingRuleFalse_ExecuteCode" />
    </IfElseBranchActivity>
  </IfElseActivity>

</ns0:WorkflowContext>
]]></Content></CodeFile><CodeFile><Guid>56c38f2707b642f3a7587c413c52fca9</Guid><OriginalFileName>@safeitemname@.xoml.cs</OriginalFileName><Content><![CDATA[using System;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Collections;
using System.Drawing;
using System.Workflow.ComponentModel.Compiler;
using System.Workflow.ComponentModel.Serialization;
using System.Workflow.ComponentModel;
using System.Workflow.ComponentModel.Design;
using System.Workflow.Runtime;
using System.Workflow.Activities;
using System.Workflow.Activities.Rules;
using SourceCode.Workflow.Common.Extenders;
using SourceCode.KO;
using System.Xml;
using hostContext = Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventSucceedingRuleContext_65723b27fc7845eabf2127a7bb1e4c6b;

namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
	public partial class EventSucceedingRule_65723b27fc7845eabf2127a7bb1e4c6b : IWorkflowContext<hostContext>
	{
		#region K2 Context

        	private hostContext _k2;

       		#endregion

		#region IWorkflowContext<hostContext> Members

        	public Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventSucceedingRuleContext_65723b27fc7845eabf2127a7bb1e4c6b K2
        	{
            		get
            		{
            		    return _k2;
            		}
            		set
            		{
            		    _k2 = value;
            		}
        	}

        	#endregion

		private void EvaluateRule(object sender, ConditionalEventArgs e)
        	{

                if (K2.EventInstance.ActivityInstanceDestination.ActivityInstance.SingleInstance)
                {
                    e.Result = SucceedingRuleHelper.AnyOutcomesEvaluatedSuccessfully(K2);
                }
                else
                {
                    e.Result = true;
                }
             
        	}

        	private void SetSucceedingRuleTrue_ExecuteCode(object sender, EventArgs e)
        	{
            		K2.SucceedingRule = true;
        	}

        	private void SetSucceedingRuleFalse_ExecuteCode(object sender, EventArgs e)
        	{
            		K2.SucceedingRule = false;
        	}

	}
}

]]></Content></CodeFile><CodeFile><Guid>9d39915e1a9b4c8abff01e8de3915192</Guid><OriginalFileName>@safeitemname@Helper.cs</OriginalFileName><Primary>1</Primary><Content><![CDATA[using System;
using System.Xml;
using SourceCode.KO;
using SourceCode.Workflow.Common.Extenders;

namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
	public partial class EventSucceedingRule_65723b27fc7845eabf2127a7bb1e4c6b
	{
		public class SucceedingRuleHelper
		{

			public static bool AnyOutcomesEvaluatedSuccessfully(Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventSucceedingRuleContext_65723b27fc7845eabf2127a7bb1e4c6b K2)
			{
                bool retval = false;
                if (K2.EventInstance.ActivityInstanceDestination.ActivityInstance.SingleInstance)
                {
                        K2.ProcessInstance.Logger.LogDebugMessage("Outcome.SucceedingRule.EventHelper", "Outcome Evaluation: Started");
            			for (int i = 0; i < K2.Configuration.SetCount; i++)
            			{
                			if (GetRuleResult(K2, i))
                			{
                                K2.ProcessInstance.Logger.LogDebugMessage("Outcome.SucceedingRule.EventHelper", "Outcome Event Evaluation Result: " + GetName(K2,i));
                  				retval = true;
				                break;
                			} 

            			}
                        K2.ProcessInstance.Logger.LogDebugMessage("Outcome.SucceedingRule.EventHelper", "Outcome Evaluation: Completed");
                } 
                else 
                {
                    retval = true;
                }
				return retval;
			}

			private static string GetName(Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventSucceedingRuleContext_65723b27fc7845eabf2127a7bb1e4c6b K2, int setIdx)
		        {
		            // Get the property that returns the result
		            string propName = string.Format("OutcomeName{0}", setIdx);
		            System.Reflection.PropertyInfo pi = K2.Configuration.GetType().GetProperty(propName);
		            if (pi == null)
		                return string.Empty;

		            // Invoke the get
		            System.Reflection.MethodInfo mi = pi.GetGetMethod();
		            if (mi == null)
		                return string.Empty;

		            object retval = mi.Invoke(K2.Configuration, null);

		            return Convert.ToString(retval);
		        }

		        private static bool GetRuleResult(Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventSucceedingRuleContext_65723b27fc7845eabf2127a7bb1e4c6b K2, int setIdx)
		        {
		            // Get the property that returns the result
		            string propName = string.Format("OutcomeRule{0}", setIdx);
		            System.Reflection.PropertyInfo pi = K2.Configuration.GetType().GetProperty(propName);
		            if (pi == null)
		                return true;

		            // Invoke the get
		            System.Reflection.MethodInfo mi = pi.GetGetMethod();
		            if (mi == null)
		                return true;

		            object retval = mi.Invoke(K2.Configuration, null);

		            return Convert.ToBoolean(retval);
		        }
		}
	}
}]]></Content></CodeFile></CodeFiles><Guid>65723b27fc7845eabf2127a7bb1e4c6b</Guid><MetaData /><Username /><CredentialGuid>00000000-0000-0000-0000-000000000000</CredentialGuid><Language>CSharp</Language></Extender><Outcomes><OutcomeItem Type="SourceCode.Workflow.Design.Outcome.Base.OutcomeItem" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Rule Type="SourceCode.Workflow.Design.SimpleRules.SimpleRule" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Expressions><ExpressionLevelPair Type="SourceCode.Workflow.Design.SimpleRules.ExpressionLevelPair" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Exp Type="SourceCode.Workflow.Design.SimpleRules.ComparisonListExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Left Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>bf153e90658c4cd6a3f0e544f0ddc08c</Guid><IsList>1</IsList><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="c367ff8b-b72c-49da-9e2d-38d73d204f59&#xD;" /><DataFieldName>Action Result</DataFieldName><Scope>Destination</Scope><Type>String</Type><ListOption>Slots</ListOption></DataFieldPart></Parts><Guid>d37967965b814289a27eaa3cdfd8fab4</Guid><IsList>1</IsList><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>cf4b2f1df6fb4ff19b24bf2176e44988</Guid></Left><Right Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>999397e7f6634f24a5925021a58c6c47</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[Done]]></Value></ValueTypePart></Parts><Guid>317c9681cf0c488e8f320d5d6fe2050e</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>c59b45d42fb74f24b3b8ab9d1c669ca3</Guid></Right><Count Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e0499ede961e470c9757c990a2e4f814</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>ee6ed1fd4473402aacaf577ea4134aeb</Guid></Count><Guid>cf5c839dde6142f8830f6c24213f62ee</Guid><Operator>Equal</Operator><ListOperator>All</ListOperator></Exp><Guid>e0ddeebe121b4a41b5e85577067b42bd</Guid></ExpressionLevelPair></Expressions><Guid>e67dddb905cc49e7a0dfbabcfd96267c</Guid></Rule><Guid>b6ae6099b38147708fb420b125f69133</Guid><Name>Done</Name><Description>Default Outcome generated originally from the Complete Action.</Description></OutcomeItem><OutcomeItem Type="SourceCode.Workflow.Design.Outcome.Base.OutcomeItem" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Rule Type="SourceCode.Workflow.Design.SimpleRules.SimpleRule" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Expressions><ExpressionLevelPair Type="SourceCode.Workflow.Design.SimpleRules.ExpressionLevelPair" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Exp Type="SourceCode.Workflow.Design.SimpleRules.ComparisonListExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Left Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>09fd9d831e9f49ecbcf66303c8126f70</Guid><IsList>1</IsList><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="c367ff8b-b72c-49da-9e2d-38d73d204f59&#xD;" /><DataFieldName>Action Result</DataFieldName><Scope>Destination</Scope><Type>String</Type><ListOption>Slots</ListOption></DataFieldPart></Parts><Guid>d818dd9a100e4940871aa322ea585189</Guid><IsList>1</IsList><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>7d57305037cd4ebe9a03e045254caa75</Guid></Left><Right Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e1bc5d713c2a46ce8b9b4e990f17ba0e</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[Cancel]]></Value></ValueTypePart></Parts><Guid>9319df4496244091b0c349ac6c57dfe3</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>4cf59d560f1c4b62abd94ab9cae4438c</Guid></Right><Count Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>0f046c1146a94b6f8953defefc1b5c1a</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>18eea68b554743b59b8ce210ecf26f03</Guid></Count><Guid>c65700a990ab4f92b29b7ca3d2a902c3</Guid><Operator>Equal</Operator><ListOperator>All</ListOperator></Exp><Guid>505a70de5f3e4e3a8b1dadf8e188ea80</Guid></ExpressionLevelPair></Expressions><Guid>8cd73c0a6b75486cba33c7f7295fef43</Guid></Rule><Guid>14b237258fde4629804da75e08946647</Guid><Name>Cancel</Name><Description>Default Outcome generated originally from the Cancel Action.</Description></OutcomeItem></Outcomes><Guid>37c2cef9742540a086d297596fc05aa7</Guid><MetaData /><Parent ref="502fc7ac-d034-44c1-8717-dbf75bf541dc&#xD;" /></DefaultOutcomeEventSucceedingRule><DefaultOutcomeAction Type="SourceCode.Workflow.Design.Outcome.DefaultOutcomeAction" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Extender Type="SourceCode.Workflow.Design.WindowsWorkflowExtender" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><CodeFiles><CodeFile><Guid>e5b3b130cd444891bfcfa61e8863d10f</Guid><OriginalFileName>@safeitemname@.xoml</OriginalFileName><Primary>1</Primary><Content><![CDATA[<ns0:WorkflowContext xmlns:ns0="clr-namespace:SourceCode.Workflow.Common.Extenders;Assembly=SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d" x:Class="ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2.ActionItem_b35d43a0bc38468c935a773010b868a7" x:Name="ActionItem_b35d43a0bc38468c935a773010b868a7" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	 <ns0:WorkflowContext.LockedActivities>
		<x:Array Type="{x:Type System.String}">
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">SetActionResult</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">FinishAction</ns1:String>
		</x:Array>
	</ns0:WorkflowContext.LockedActivities>
	<CodeActivity x:Name="SetActionResult" ExecuteCode="SetActionResult_ExecuteCode" Description="Set Action Result" />
	<CodeActivity x:Name="FinishAction" ExecuteCode="FinishAction_ExecuteCode" Description="Finish Action" />
</ns0:WorkflowContext>
]]></Content></CodeFile><CodeFile><Guid>d5abd5191c014fd4803ed798a6a0d7f4</Guid><OriginalFileName>@safeitemname@.xoml.cs</OriginalFileName><Content><![CDATA[using System;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Collections;
using System.Drawing;
using System.Workflow.ComponentModel.Compiler;
using System.Workflow.ComponentModel.Serialization;
using System.Workflow.ComponentModel;
using System.Workflow.ComponentModel.Design;
using System.Workflow.Runtime;
using System.Workflow.Activities;
using System.Workflow.Activities.Rules;
using SourceCode.Workflow.Common.Extenders;
using SourceCode.KO;
using hostContext = Project_fd7ed7e1f1e345d7a3a78850c91470e2.ActionItemContext_b35d43a0bc38468c935a773010b868a7;
namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
	public partial class ActionItem_b35d43a0bc38468c935a773010b868a7 : IWorkflowContext<hostContext>
	{
		#region K2 Context

        private hostContext _k2;

        #endregion

		#region IWorkflowContext<hostContext> Members

        public Project_fd7ed7e1f1e345d7a3a78850c91470e2.ActionItemContext_b35d43a0bc38468c935a773010b868a7 K2
        {
            get
            {
                return _k2;
            }
            set
            {
                _k2 = value;
            }
        }

        #endregion

	private void SetActionResult_ExecuteCode(object sender, EventArgs e)
        {
            ActionHelper.SetActionResult(K2);
        }

        private void FinishAction_ExecuteCode(object sender, EventArgs e)
        {
            ActionHelper.FinishAction(K2);
        }
	}
}
]]></Content></CodeFile><CodeFile><Guid>3e7aebaf8b2a4368902b9f748d419cca</Guid><OriginalFileName>@safeitemname@Helper.cs</OriginalFileName><Primary>1</Primary><Content><![CDATA[using System;
using System.Xml;
using SourceCode.KO;
using SourceCode.Workflow.Common.Extenders;

namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
	public partial class ActionItem_b35d43a0bc38468c935a773010b868a7
	{
		public class ActionHelper
		{
			public static void SetActionResult(Project_fd7ed7e1f1e345d7a3a78850c91470e2.ActionItemContext_b35d43a0bc38468c935a773010b868a7 K2)
			{
				K2.WorklistSlot.DataFields["Action Result"].Value = K2.Configuration.ActionResult;
			}

            public static void FinishAction(Project_fd7ed7e1f1e345d7a3a78850c91470e2.ActionItemContext_b35d43a0bc38468c935a773010b868a7 K2)
			{
                if (K2.Configuration.FinishAction)
                {
                    K2.Finish();
                }
                else 
                {
                    K2.Update();
                }
			}
		}
	}
}]]></Content></CodeFile></CodeFiles><Guid>b35d43a0bc38468c935a773010b868a7</Guid><MetaData /><Username /><CredentialGuid>00000000-0000-0000-0000-000000000000</CredentialGuid><Language>CSharp</Language></Extender><Guid>e9f6db1d4229450f846199a25d9626f3</Guid><MetaData /><Parent ref="11d52706-336a-4f10-b75f-74ced455222d&#xD;" /></DefaultOutcomeAction><DefaultOutcomeAction Type="SourceCode.Workflow.Design.Outcome.DefaultOutcomeAction" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Extender Type="SourceCode.Workflow.Design.WindowsWorkflowExtender" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><CodeFiles><CodeFile><Guid>d51f5a3efe9f4696be753b5168ebcebb</Guid><OriginalFileName>@safeitemname@.xoml</OriginalFileName><Primary>1</Primary><Content><![CDATA[<ns0:WorkflowContext xmlns:ns0="clr-namespace:SourceCode.Workflow.Common.Extenders;Assembly=SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d" x:Class="ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2.ActionItem_07e20347e4e64ee79c691d6d34a7ec2e" x:Name="ActionItem_07e20347e4e64ee79c691d6d34a7ec2e" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	 <ns0:WorkflowContext.LockedActivities>
		<x:Array Type="{x:Type System.String}">
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">SetActionResult</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">FinishAction</ns1:String>
		</x:Array>
	</ns0:WorkflowContext.LockedActivities>
	<CodeActivity x:Name="SetActionResult" ExecuteCode="SetActionResult_ExecuteCode" Description="Set Action Result" />
	<CodeActivity x:Name="FinishAction" ExecuteCode="FinishAction_ExecuteCode" Description="Finish Action" />
</ns0:WorkflowContext>
]]></Content></CodeFile><CodeFile><Guid>d058421a286442cc91ac599c7120e531</Guid><OriginalFileName>@safeitemname@.xoml.cs</OriginalFileName><Content><![CDATA[using System;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Collections;
using System.Drawing;
using System.Workflow.ComponentModel.Compiler;
using System.Workflow.ComponentModel.Serialization;
using System.Workflow.ComponentModel;
using System.Workflow.ComponentModel.Design;
using System.Workflow.Runtime;
using System.Workflow.Activities;
using System.Workflow.Activities.Rules;
using SourceCode.Workflow.Common.Extenders;
using SourceCode.KO;
using hostContext = Project_fd7ed7e1f1e345d7a3a78850c91470e2.ActionItemContext_07e20347e4e64ee79c691d6d34a7ec2e;
namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
	public partial class ActionItem_07e20347e4e64ee79c691d6d34a7ec2e : IWorkflowContext<hostContext>
	{
		#region K2 Context

        private hostContext _k2;

        #endregion

		#region IWorkflowContext<hostContext> Members

        public Project_fd7ed7e1f1e345d7a3a78850c91470e2.ActionItemContext_07e20347e4e64ee79c691d6d34a7ec2e K2
        {
            get
            {
                return _k2;
            }
            set
            {
                _k2 = value;
            }
        }

        #endregion

	private void SetActionResult_ExecuteCode(object sender, EventArgs e)
        {
            ActionHelper.SetActionResult(K2);
        }

        private void FinishAction_ExecuteCode(object sender, EventArgs e)
        {
            ActionHelper.FinishAction(K2);
        }
	}
}
]]></Content></CodeFile><CodeFile><Guid>5f31fd363d9d4d77ba4e23f95db48cdc</Guid><OriginalFileName>@safeitemname@Helper.cs</OriginalFileName><Primary>1</Primary><Content><![CDATA[using System;
using System.Xml;
using SourceCode.KO;
using SourceCode.Workflow.Common.Extenders;

namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
	public partial class ActionItem_07e20347e4e64ee79c691d6d34a7ec2e
	{
		public class ActionHelper
		{
			public static void SetActionResult(Project_fd7ed7e1f1e345d7a3a78850c91470e2.ActionItemContext_07e20347e4e64ee79c691d6d34a7ec2e K2)
			{
				K2.WorklistSlot.DataFields["Action Result"].Value = K2.Configuration.ActionResult;
			}

            public static void FinishAction(Project_fd7ed7e1f1e345d7a3a78850c91470e2.ActionItemContext_07e20347e4e64ee79c691d6d34a7ec2e K2)
			{
                if (K2.Configuration.FinishAction)
                {
                    K2.Finish();
                }
                else 
                {
                    K2.Update();
                }
			}
		}
	}
}]]></Content></CodeFile></CodeFiles><Guid>07e20347e4e64ee79c691d6d34a7ec2e</Guid><MetaData /><Username /><CredentialGuid>00000000-0000-0000-0000-000000000000</CredentialGuid><Language>CSharp</Language></Extender><Guid>6ed76a9585bf442c9135d1fd6c4d082c</Guid><MetaData /><Parent ref="abaa7354-72c9-4492-961c-8e4a8c27f813&#xD;" /></DefaultOutcomeAction><SimpleLineRule Type="SourceCode.Workflow.Design.SimpleRules.SimpleLineRule" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Extender Type="SourceCode.Workflow.Design.WindowsWorkflowExtender" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><CodeFiles><CodeFile><Guid>15e994fa46f844a5bf88a7c8a5836b61</Guid><OriginalFileName>@safeitemname@.xoml</OriginalFileName><Primary>1</Primary><Content><![CDATA[<ns0:WorkflowContext xmlns:ns0="clr-namespace:SourceCode.Workflow.Common.Extenders;Assembly=SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d" x:Class="ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2.LineRule_f161c1e6060d4385afa34646d4a34bac" x:Name="LineRule_f161c1e6060d4385afa34646d4a34bac" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ns0:WorkflowContext.LockedActivities>
    </ns0:WorkflowContext.LockedActivities>
    <CodeActivity x:Name="codeActivity1" ExecuteCode="codeActivity1_ExecuteCode" />
</ns0:WorkflowContext>
]]></Content></CodeFile><CodeFile><Guid>e2a70ee7fd01455795cf1b22780c09a5</Guid><OriginalFileName>@safeitemname@.xoml.cs</OriginalFileName><Content><![CDATA[using System;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Collections;
using System.Drawing;
using System.Workflow.ComponentModel.Compiler;
using System.Workflow.ComponentModel.Serialization;
using System.Workflow.ComponentModel;
using System.Workflow.ComponentModel.Design;
using System.Workflow.Runtime;
using System.Workflow.Activities;
using System.Workflow.Activities.Rules;
using SourceCode.Workflow.Common.Extenders;
using SourceCode.KO;
using hostContext = Project_fd7ed7e1f1e345d7a3a78850c91470e2.LineRuleContext_f161c1e6060d4385afa34646d4a34bac;
namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
	public partial class LineRule_f161c1e6060d4385afa34646d4a34bac : IWorkflowContext<hostContext>
	{
		#region K2 Context

        private hostContext _k2;

        #endregion

		#region IWorkflowContext<hostContext> Members

        public Project_fd7ed7e1f1e345d7a3a78850c91470e2.LineRuleContext_f161c1e6060d4385afa34646d4a34bac K2
        {
            get
            {
                return _k2;
            }
            set
            {
                _k2 = value;
            }
        }

        #endregion
        private void codeActivity1_ExecuteCode(object sender, EventArgs e)
        {
            K2.LineRule = K2.Configuration.Rule;
        }
	}
}
]]></Content></CodeFile></CodeFiles><Guid>f161c1e6060d4385afa34646d4a34bac</Guid><MetaData /><Username /><CredentialGuid>00000000-0000-0000-0000-000000000000</CredentialGuid><Language>CSharp</Language></Extender><Rule Type="SourceCode.Workflow.Design.SimpleRules.SimpleRule" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Expressions><ExpressionLevelPair Type="SourceCode.Workflow.Design.SimpleRules.ExpressionLevelPair" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Exp Type="SourceCode.Workflow.Design.SimpleRules.ComparisonExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Left Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>fcf4daf4b02e48b686d885322d5f8389</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="7ea3a205-533b-487d-9fc5-cbce9831c7e8&#xD;" /><DataFieldName>Outcome</DataFieldName><Scope>Activity</Scope><Type>String</Type><ListOption>None</ListOption></DataFieldPart></Parts><Guid>272c828705104d45b58ec370b8b894f5</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>73f71fb2b7484b6f9de2221d903504c8</Guid></Left><Right Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>a7f9e483d27544edb48a1d33766a9e16</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[Cancel]]></Value></ValueTypePart></Parts><Guid>c510da9cccc54705815dd692a014ee6a</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>0dd2b77b20614359ac7c32e973482f73</Guid></Right><Guid>9bd7bc81edab424ea15eb5f50372bf06</Guid><Operator>Equal</Operator></Exp><Guid>3100e22a34234084b14ba466d9fb7bd1</Guid></ExpressionLevelPair></Expressions><Guid>a43472bf122248979c9e9c042d0abb62</Guid></Rule><Guid>e7b75f4d947e44ff967dba874806df7d</Guid><MetaData /><Parent ref="c0afc97c-19bf-4422-aff2-3187f145ddc4&#xD;" /></SimpleLineRule><SimpleLineRule Type="SourceCode.Workflow.Design.SimpleRules.SimpleLineRule" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Extender Type="SourceCode.Workflow.Design.WindowsWorkflowExtender" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><CodeFiles><CodeFile><Guid>dd6f36abd78d451185642324d606a233</Guid><OriginalFileName>@safeitemname@.xoml</OriginalFileName><Primary>1</Primary><Content><![CDATA[<ns0:WorkflowContext xmlns:ns0="clr-namespace:SourceCode.Workflow.Common.Extenders;Assembly=SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d" x:Class="ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2.LineRule_346a695b0dde41f39836b6b9f21045e7" x:Name="LineRule_346a695b0dde41f39836b6b9f21045e7" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ns0:WorkflowContext.LockedActivities>
    </ns0:WorkflowContext.LockedActivities>
    <CodeActivity x:Name="codeActivity1" ExecuteCode="codeActivity1_ExecuteCode" />
</ns0:WorkflowContext>
]]></Content></CodeFile><CodeFile><Guid>68987aee7e374182a5c0375c32b97109</Guid><OriginalFileName>@safeitemname@.xoml.cs</OriginalFileName><Content><![CDATA[using System;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Collections;
using System.Drawing;
using System.Workflow.ComponentModel.Compiler;
using System.Workflow.ComponentModel.Serialization;
using System.Workflow.ComponentModel;
using System.Workflow.ComponentModel.Design;
using System.Workflow.Runtime;
using System.Workflow.Activities;
using System.Workflow.Activities.Rules;
using SourceCode.Workflow.Common.Extenders;
using SourceCode.KO;
using hostContext = Project_fd7ed7e1f1e345d7a3a78850c91470e2.LineRuleContext_346a695b0dde41f39836b6b9f21045e7;
namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
	public partial class LineRule_346a695b0dde41f39836b6b9f21045e7 : IWorkflowContext<hostContext>
	{
		#region K2 Context

        private hostContext _k2;

        #endregion

		#region IWorkflowContext<hostContext> Members

        public Project_fd7ed7e1f1e345d7a3a78850c91470e2.LineRuleContext_346a695b0dde41f39836b6b9f21045e7 K2
        {
            get
            {
                return _k2;
            }
            set
            {
                _k2 = value;
            }
        }

        #endregion
        private void codeActivity1_ExecuteCode(object sender, EventArgs e)
        {
            K2.LineRule = K2.Configuration.Rule;
        }
	}
}
]]></Content></CodeFile></CodeFiles><Guid>346a695b0dde41f39836b6b9f21045e7</Guid><MetaData /><Username /><CredentialGuid>00000000-0000-0000-0000-000000000000</CredentialGuid><Language>CSharp</Language></Extender><Rule Type="SourceCode.Workflow.Design.SimpleRules.SimpleRule" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Expressions><ExpressionLevelPair Type="SourceCode.Workflow.Design.SimpleRules.ExpressionLevelPair" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Exp Type="SourceCode.Workflow.Design.SimpleRules.ComparisonExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Left Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>a4745459b352486581ef80708b87e1bf</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="7ea3a205-533b-487d-9fc5-cbce9831c7e8&#xD;" /><DataFieldName>Outcome</DataFieldName><Scope>Activity</Scope><Type>String</Type><ListOption>None</ListOption></DataFieldPart></Parts><Guid>31de984d1864487da772f1459630d25c</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>b53f944c024c4df695c3a0d2f90155d9</Guid></Left><Right Type="SourceCode.Workflow.Design.SimpleRules.ValueExpression" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>03229df41be94decaf0eceb6a3f40cd8</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[Done]]></Value></ValueTypePart></Parts><Guid>b2137d42dbab484c98a257a7fcf330fb</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>0c852a6c45cf48619d9d7908702bace2</Guid></Right><Guid>2df1ca095775492d98ed869ff0370ae6</Guid><Operator>Equal</Operator></Exp><Guid>6d9df4116f784868867798e52302419d</Guid></ExpressionLevelPair></Expressions><Guid>0eb503733a0a4cd6974f588fb563ea4c</Guid></Rule><Guid>66a3049d5708452b8adaec72cfe951be</Guid><MetaData /><Parent ref="56680954-7292-488d-a578-c15e1336182f&#xD;" /></SimpleLineRule><SimplePrecedingRule Type="SourceCode.Workflow.Design.SimpleRules.SimplePrecedingRule" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Extender Type="SourceCode.Workflow.Design.WindowsWorkflowExtender" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><CodeFiles><CodeFile><Guid>a426987f64bb4b73ad2058e95050e4d4</Guid><OriginalFileName>@safeitemname@.xoml</OriginalFileName><Primary>1</Primary><Content><![CDATA[<ns0:WorkflowContext xmlns:ns0="clr-namespace:SourceCode.Workflow.Common.Extenders;Assembly=SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d" x:Class="ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2.PrecedingRule_749b10e3b02847839538fd2c98ee950c" x:Name="PrecedingRule_749b10e3b02847839538fd2c98ee950c" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <ns0:WorkflowContext.LockedActivities>
    </ns0:WorkflowContext.LockedActivities>
    <CodeActivity x:Name="codeActivity1" ExecuteCode="codeActivity1_ExecuteCode" />
</ns0:WorkflowContext>
]]></Content></CodeFile><CodeFile><Guid>7c4cffbfb245459da07afc5d9499abd7</Guid><OriginalFileName>@safeitemname@.xoml.cs</OriginalFileName><Content><![CDATA[using System;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Collections;
using System.Drawing;
using System.Workflow.ComponentModel.Compiler;
using System.Workflow.ComponentModel.Serialization;
using System.Workflow.ComponentModel;
using System.Workflow.ComponentModel.Design;
using System.Workflow.Runtime;
using System.Workflow.Activities;
using System.Workflow.Activities.Rules;
using SourceCode.Workflow.Common.Extenders;
using SourceCode.KO;
using hostContext = Project_fd7ed7e1f1e345d7a3a78850c91470e2.PrecedingRuleContext_749b10e3b02847839538fd2c98ee950c;
namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
	public partial class PrecedingRule_749b10e3b02847839538fd2c98ee950c : IWorkflowContext<hostContext>
	{
		#region K2 Context

        private hostContext _k2;

        #endregion

		#region IWorkflowContext<hostContext> Members

        public Project_fd7ed7e1f1e345d7a3a78850c91470e2.PrecedingRuleContext_749b10e3b02847839538fd2c98ee950c K2
        {
            get
            {
                return _k2;
            }
            set
            {
                _k2 = value;
            }
        }

        #endregion
        private void codeActivity1_ExecuteCode(object sender, EventArgs e)
        {
            K2.PrecedingRule = K2.Configuration.Rule;
        }
	}
}
]]></Content></CodeFile></CodeFiles><Guid>749b10e3b02847839538fd2c98ee950c</Guid><MetaData /><Username /><CredentialGuid>00000000-0000-0000-0000-000000000000</CredentialGuid><Language>CSharp</Language></Extender><Guid>a18a2896ff184aa8958033d0bacf0dec</Guid><MetaData /><Parent ref="36ca722e-3489-4325-aa7a-ff1331db725d&#xD;" /></SimplePrecedingRule><SimpleActivityStartRule Type="SourceCode.Workflow.Design.SimpleRules.SimpleActivityStartRule" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Extender Type="SourceCode.Workflow.Design.WindowsWorkflowExtender" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><CodeFiles><CodeFile><Guid>3973ddd4bd3848edb56e27012ed6ba77</Guid><OriginalFileName>@safeitemname@.xoml</OriginalFileName><Primary>1</Primary><Content><![CDATA[<ns0:WorkflowContext xmlns:ns0="clr-namespace:SourceCode.Workflow.Common.Extenders;Assembly=SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d" x:Class="ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2.StartRule_0354ae2b97d545b58569029dbbc29b07" x:Name="StartRule_0354ae2b97d545b58569029dbbc29b07" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
	<ns0:WorkflowContext.LockedActivities>
		<x:Array Type="{x:Type p5:String}" xmlns:p5="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">useDateCodeActivity</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">useTimeCodeActivity</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">useDateAndTimeCodeActivity</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">conditionedStartRule</ns1:String>
		</x:Array>
	</ns0:WorkflowContext.LockedActivities>
	<ConditionedActivityGroup x:Name="conditionedStartRule">
		<ConditionedActivityGroup.UntilCondition>
			<CodeCondition Condition="UntilCondition" />
		</ConditionedActivityGroup.UntilCondition>
		<CodeActivity x:Name="useDateCodeActivity" ExecuteCode="useDateCodeActivity_ExecuteCode">
			<ConditionedActivityGroup.WhenCondition>
				<CodeCondition Condition="UseDate" />
			</ConditionedActivityGroup.WhenCondition>
		</CodeActivity>
		<CodeActivity x:Name="useTimeCodeActivity" ExecuteCode="useTimeCodeActivity_ExecuteCode">
			<ConditionedActivityGroup.WhenCondition>
				<CodeCondition Condition="UseTime" />
			</ConditionedActivityGroup.WhenCondition>
		</CodeActivity>
		<CodeActivity x:Name="useDateAndTimeCodeActivity" ExecuteCode="useDateAndTimeCodeActivity_ExecuteCode">
			<ConditionedActivityGroup.WhenCondition>
				<CodeCondition Condition="UseDateAndTime" />
			</ConditionedActivityGroup.WhenCondition>
		</CodeActivity>
		<CodeActivity x:Name="startNowCodeActivity" ExecuteCode="startNowCodeActivity_ExecuteCode">
			<ConditionedActivityGroup.WhenCondition>
				<CodeCondition Condition="StartNow" />
			</ConditionedActivityGroup.WhenCondition>
		</CodeActivity>
	</ConditionedActivityGroup>
</ns0:WorkflowContext>]]></Content></CodeFile><CodeFile><Guid>6b3377a53e8d406a8286b42a06a59999</Guid><OriginalFileName>@safeitemname@.xoml.cs</OriginalFileName><Content><![CDATA[using System;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Collections;
using System.Drawing;
using System.Workflow.ComponentModel.Compiler;
using System.Workflow.ComponentModel.Serialization;
using System.Workflow.ComponentModel;
using System.Workflow.ComponentModel.Design;
using System.Workflow.Runtime;
using System.Workflow.Activities;
using System.Workflow.Activities.Rules;
using SourceCode.Workflow.Common.Extenders;
using SourceCode.KO;
using hostContext = Project_fd7ed7e1f1e345d7a3a78850c91470e2.StartRuleContext_0354ae2b97d545b58569029dbbc29b07;
namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
	public partial class StartRule_0354ae2b97d545b58569029dbbc29b07 : IWorkflowContext<hostContext>
	{

		#region K2 Context

        private hostContext _k2;

        #endregion

		#region IWorkflowContext<hostContext> Members

        public Project_fd7ed7e1f1e345d7a3a78850c91470e2.StartRuleContext_0354ae2b97d545b58569029dbbc29b07 K2
        {
            get
            {
                return _k2;
            }
            set
            {
                _k2 = value;
            }
        }

        #endregion

        #region - Conditions -

        bool _startRuleSet = false;

        private void UseDate(object sender, ConditionalEventArgs e)
        {
            e.Result = K2.Configuration.UseDate == true && K2.Configuration.UseTime == false;
        }
        private void UseDateAndTime(object sender, ConditionalEventArgs e)
        {
            e.Result = K2.Configuration.UseDate == true && K2.Configuration.UseTime == true;
        }
        private void UseTime(object sender, ConditionalEventArgs e)
        {
            e.Result = K2.Configuration.UseDate == false && K2.Configuration.UseTime == true;
        }

        private void StartNow(object sender, ConditionalEventArgs e)
        {
            e.Result = K2.Configuration.UseDate == false && K2.Configuration.UseTime == false;
        }

        private void UntilCondition(object sender, ConditionalEventArgs e)
        {
            e.Result = _startRuleSet;
        }

        #endregion

        #region - Start Rule Code -

        private void useDateCodeActivity_ExecuteCode(object sender, EventArgs e)
        {
            // Start using date only
            K2.SetStartRule(K2.Configuration.StartDate);
            _startRuleSet = true;
        }

        private void useTimeCodeActivity_ExecuteCode(object sender, EventArgs e)
        {
            // Start using time only
            if (K2.Configuration.UseDefaultZone)
            {
                K2.SetStartRule(K2.Configuration.StartDays, K2.Configuration.StartHours, K2.Configuration.StartMinutes, K2.Configuration.StartSeconds);
            }
            else
            {
                K2.SetStartRule(K2.Configuration.StartDays, K2.Configuration.StartHours, K2.Configuration.StartMinutes, K2.Configuration.StartSeconds, K2.Configuration.Zone);
            }
            _startRuleSet = true;
        }

        private void useDateAndTimeCodeActivity_ExecuteCode(object sender, EventArgs e)
        {
            // Start using date and time
            if (K2.Configuration.UseDefaultZone)
            {
                K2.SetStartRule(K2.Configuration.StartDate, K2.Configuration.StartDays, K2.Configuration.StartHours, K2.Configuration.StartMinutes, K2.Configuration.StartSeconds);
            }
            else
            {
                K2.SetStartRule(K2.Configuration.StartDate, K2.Configuration.StartDays, K2.Configuration.StartHours, K2.Configuration.StartMinutes, K2.Configuration.StartSeconds, K2.Configuration.Zone);
            }
            _startRuleSet = true;
        }

        private void startNowCodeActivity_ExecuteCode(object sender, EventArgs e)
        {
            _startRuleSet = true;
        }

        #endregion

	}
}
]]></Content></CodeFile></CodeFiles><Guid>0354ae2b97d545b58569029dbbc29b07</Guid><MetaData /><Username /><CredentialGuid>00000000-0000-0000-0000-000000000000</CredentialGuid><Language>CSharp</Language></Extender><Guid>f4389cac99294555a2a4684897c20237</Guid><MetaData /><Parent ref="36ca722e-3489-4325-aa7a-ff1331db725d&#xD;" /></SimpleActivityStartRule><SmartObjectEventItem Type="SourceCode.Workflow.Design.SmartObjects.SmartObjectEventItem" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Extender Type="SourceCode.Workflow.Design.WindowsWorkflowExtender" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><CodeFiles><CodeFile><Guid>453bd18033c14653ae9b6e1377159947</Guid><OriginalFileName>@safeitemname@.xoml</OriginalFileName><Primary>1</Primary><Content><![CDATA[<ns0:WorkflowContext xmlns:ns0="clr-namespace:SourceCode.Workflow.Common.Extenders;Assembly=SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d" x:Class="ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2.EventItem_29642b6746124818ae1064c7ce65166d" x:Name="EventItem_29642b6746124818ae1064c7ce65166d" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow">
	<ns0:WorkflowContext.LockedActivities>
		<x:Array Type="{x:Type p5:String}" xmlns:p5="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">CreateConnection</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">IsListMethodToExecute</ns1:String>
      <ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">ListMethod</ns1:String>
      <ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">ExecuteList</ns1:String>
      <ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">SingleMethod</ns1:String>
      <ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">ExecuteSingle</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">CloseConnection</ns1:String>
		</x:Array>
	</ns0:WorkflowContext.LockedActivities>
  <CodeActivity x:Name="CreateConnection" ExecuteCode="soCreateConnection" />
  <IfElseActivity x:Name="IsListMethodToExecute">
    <IfElseBranchActivity x:Name="ListMethod">
      <IfElseBranchActivity.Condition>
        <CodeCondition Condition="soIsListMethod" />
      </IfElseBranchActivity.Condition>
      <CodeActivity x:Name="ExecuteList" ExecuteCode="soExecuteList" />
    </IfElseBranchActivity>
    <IfElseBranchActivity x:Name="SingleMethod">
      <IfElseBranchActivity.Condition>
        <CodeCondition Condition="soIsSingleMethod" />
      </IfElseBranchActivity.Condition>
      <CodeActivity x:Name="ExecuteSingle" ExecuteCode="soExecuteSingle" />
    </IfElseBranchActivity>
  </IfElseActivity>
  <CodeActivity x:Name="CloseConnection" ExecuteCode="soCloseConnection" />
</ns0:WorkflowContext>]]></Content></CodeFile><CodeFile><Guid>d5a83c7f3c534a67a608f6f969d98356</Guid><OriginalFileName>@safeitemname@.xoml.cs</OriginalFileName><Content><![CDATA[using System.ComponentModel;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Drawing;
using System.Workflow.ComponentModel.Compiler;
using System.Workflow.ComponentModel.Serialization;
using System.Workflow.ComponentModel;
using System.Workflow.ComponentModel.Design;
using System.Workflow.Activities;
using System.Xml;
using SourceCode.KO;
using SourceCode.Workflow.Common.Extenders;
using SourceCode.SmartObjects.Client;
using SourceCode.Workflow.Common.HostedServers;

using hostContext = Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventItemContext_29642b6746124818ae1064c7ce65166d;

namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
    public partial class EventItem_29642b6746124818ae1064c7ce65166d : IWorkflowContext<hostContext>
    {
        [EditorBrowsable(EditorBrowsableState.Never)]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]

        #region Members
        private hostContext _k2;
        #endregion

        #region Enum
        private enum CollectionType
        {
            InputName,
            InputType,
            InputValue,
            ReturnName,
            ReturnType,
            ReturnValue,
            ReturnValueIsXmlField,
            ReturnValueXmlFieldName,
            ReturnValueXmlFieldScope,
            ReturnValueXmlFieldPath
        }

        #endregion

        #region Variables
        private SmartObjects _hostedSmartObjects;
        #endregion

        #region Properties
        private SmartObjects HostedSmartObjects
        {
            set
            {
                _hostedSmartObjects = value;
            }
            get
            {
                return _hostedSmartObjects;
            }
        }
        #endregion

        #region Code Activities

        private void soCreateConnection(object sender, EventArgs e)
        {
            this.HostedSmartObjects = new SmartObjects(this.K2.Configuration.Server);
        }

        private void soIsListMethod(object sender, ConditionalEventArgs e)
        {
            e.Result = K2.Configuration.MethodIsList;
        }

        private void soExecuteList(object sender, EventArgs e)
        {
            List<int> DataMappedReturnProperties = new List<int>();
            List<int> XmlMappedReturnProperties = new List<int>();

            SmartListMethod listmethod = this.HostedSmartObjects.GetListMethod(new Guid(this.K2.Configuration.SmartObjectGuid), this.K2.Configuration.MethodName);
            PropertyReferenceCollection inputCollection = this.HostedSmartObjects.GetListMethodInputProperties(listmethod);

            for (int i = 1; i <= this.K2.Configuration.InputPropertyCount; i++)
            {
                string propName = GetK2Configuration(CollectionType.InputName, i).ToString();
                string propType = GetK2Configuration(CollectionType.InputType, i).ToString();
                object propValue = CheckForIPAttachment(GetK2Configuration(CollectionType.InputValue, i));

                this.HostedSmartObjects.SetPropertyValue(inputCollection, propName, propType, propValue);
            }

            SmartObjectReader smartobjectReader = this.HostedSmartObjects.ExecuteListReaderMethod(listmethod);
            
            if (smartobjectReader.HasRows)
            {
                DataMappedReturnProperties.Clear();
                XmlMappedReturnProperties.Clear();
                for (int i = 1; i <= this.K2.Configuration.ReturnPropertyCount; i++)
                {
                    bool isXmlField = (bool)GetK2Configuration(CollectionType.ReturnValueIsXmlField, i);
                    if (isXmlField)
                    {
                        XmlMappedReturnProperties.Add(i);
                    }
                    else
                    {
                        if (GetK2ConfigurationHasSet(CollectionType.ReturnValue, i))
                        {
                            DataMappedReturnProperties.Add(i);
                        }
                    }
                }
                if (XmlMappedReturnProperties.Count > 0)
                {
                    while (smartobjectReader.Read())
                    {
                        for (int i = 0; i <= XmlMappedReturnProperties.Count - 1; i++)
                        {
                            //reader
                            string propName = GetK2Configuration(CollectionType.ReturnName, XmlMappedReturnProperties[i]).ToString();
                            string propType = GetK2Configuration(CollectionType.ReturnType, XmlMappedReturnProperties[i]).ToString();
                            object propValue = this.HostedSmartObjects.GetPropertyValue(smartobjectReader, listmethod.ReturnProperties, propName, propType);

                            SetXmlFieldValue(XmlMappedReturnProperties[i], propValue, propType);
                        }
                    }
                    SetXmlField();
                }
                if (DataMappedReturnProperties.Count > 0)
                {
                    if (XmlMappedReturnProperties.Count == 0)
                    {
                        smartobjectReader.Seek(smartobjectReader.RecordsAffected);
                    }
                    if (smartobjectReader.HasRows)
                    {
                        for (int i = 0; i <= DataMappedReturnProperties.Count - 1; i++)
                        {
                            //reader
                            string propName = GetK2Configuration(CollectionType.ReturnName, DataMappedReturnProperties[i]).ToString();
                            string propType = GetK2Configuration(CollectionType.ReturnType, DataMappedReturnProperties[i]).ToString();
                            object propValue = this.HostedSmartObjects.GetPropertyValue(smartobjectReader, listmethod.ReturnProperties, propName, propType);

                            SetK2Configuration(CollectionType.ReturnValue, DataMappedReturnProperties[i], propValue);
                        }   
                    }                 
                }     
            }       
            smartobjectReader.Close();
            smartobjectReader = null;
            DataMappedReturnProperties.Clear();
            DataMappedReturnProperties = null;
            XmlMappedReturnProperties.Clear();
            XmlMappedReturnProperties = null;    
        }

        private void soIsSingleMethod(object sender, ConditionalEventArgs e)
        {
            e.Result = !K2.Configuration.MethodIsList;
        }

        private void soExecuteSingle(object sender, EventArgs e)
        {
            SmartMethod method = this.HostedSmartObjects.GetSingleMethod(new Guid(this.K2.Configuration.SmartObjectGuid), this.K2.Configuration.MethodName);
            PropertyReferenceCollection inputCollection = this.HostedSmartObjects.GetSingleMethodInputProperties(method);

            for (int i = 1; i <= this.K2.Configuration.InputPropertyCount; i++)
            {
                string propName = GetK2Configuration(CollectionType.InputName, i).ToString();
                string propType = GetK2Configuration(CollectionType.InputType, i).ToString();
                object propValue = CheckForIPAttachment(GetK2Configuration(CollectionType.InputValue, i));

                this.HostedSmartObjects.SetPropertyValue(inputCollection, propName, propType, propValue);
            }

            this.HostedSmartObjects.ExecuteSingleMethod(method);

            PropertyReferenceCollection returnCollection = this.HostedSmartObjects.GetSingleMethodReturnProperties(method);
            for (int i = 1; i <= this.K2.Configuration.ReturnPropertyCount; i++)
            {
                string propName = GetK2Configuration(CollectionType.ReturnName, i).ToString();
                string propType = GetK2Configuration(CollectionType.ReturnType, i).ToString();
                object propValue = this.HostedSmartObjects.GetPropertyValue(returnCollection, propName, propType);
                bool isXmlField = (bool)GetK2Configuration(CollectionType.ReturnValueIsXmlField, i);
                if(isXmlField)
                {
                    SetXmlFieldValue(i, propValue, propType);
                }
                else
                {
                    SetK2Configuration(CollectionType.ReturnValue, i, propValue);
                }
            }

            SetXmlField();
        }

        private void soCloseConnection(object sender, EventArgs e)
        {
            if (this.HostedSmartObjects != null)
            {
                this.HostedSmartObjects.Dispose();
                this.HostedSmartObjects = null;
            }
        }

        #endregion

        #region Helper Methods
        private bool GetK2ConfigurationHasSet(CollectionType type, int setIdx)
        {
            string propName = string.Format("ReturnPropertyValue{0}", setIdx);

            System.Reflection.PropertyInfo pi = K2.Configuration.GetType().GetProperty(propName);
            if (pi == null)
                return false;

            return pi.CanWrite;
        }

        private object GetK2Configuration(CollectionType type, int setIdx)
        {
            // Get the property that returns the result
            string propName = string.Empty;

            switch (type)
            {
                case CollectionType.InputName:
                    propName = string.Format("InputPropertyName{0}", setIdx);
                    break;
                case CollectionType.InputType:
                    propName = string.Format("InputPropertyType{0}", setIdx);
                    break;
                case CollectionType.InputValue:
                    propName = string.Format("InputPropertyValue{0}", setIdx);
                    break;
                case CollectionType.ReturnName:
                    propName = string.Format("ReturnPropertyName{0}", setIdx);
                    break;
                case CollectionType.ReturnType:
                    propName = string.Format("ReturnPropertyType{0}", setIdx);
                    break;
                case CollectionType.ReturnValue:
                    propName = string.Format("ReturnPropertyValue{0}", setIdx);
                    break;
                case CollectionType.ReturnValueIsXmlField:
                    propName = string.Format("ReturnPropertyValueIsXmlField{0}", setIdx);
                    break;
                case CollectionType.ReturnValueXmlFieldName:
                    propName = string.Format("ReturnPropertyValueXmlFieldName{0}", setIdx);
                    break;
                case CollectionType.ReturnValueXmlFieldScope:
                    propName = string.Format("ReturnPropertyValueXmlFieldScope{0}", setIdx);
                    break;
                case CollectionType.ReturnValueXmlFieldPath:
                    propName = string.Format("ReturnPropertyValueXmlFieldPath{0}", setIdx);
                    break;
            }


            System.Reflection.PropertyInfo pi = K2.Configuration.GetType().GetProperty(propName);
            if (pi == null)
                return string.Empty;

            // Invoke the get
            System.Reflection.MethodInfo mi = pi.GetGetMethod();
            if (mi == null)
                return string.Empty;

            return mi.Invoke(K2.Configuration, null);
        }

        private void SetK2Configuration(CollectionType type, int setIdx, object value)
        {
            string propName = string.Empty;

            switch (type)
            {
                case CollectionType.InputName:
                    propName = string.Format("InputPropertyName{0}", setIdx);
                    break;
                case CollectionType.InputType:
                    propName = string.Format("InputPropertyType{0}", setIdx);
                    break;
                case CollectionType.InputValue:
                    propName = string.Format("InputPropertyValue{0}", setIdx);
                    break;
                case CollectionType.ReturnName:
                    propName = string.Format("ReturnPropertyName{0}", setIdx);
                    break;
                case CollectionType.ReturnType:
                    propName = string.Format("ReturnPropertyType{0}", setIdx);
                    break;
                case CollectionType.ReturnValue:
                    propName = string.Format("ReturnPropertyValue{0}", setIdx);
                    break;
            }


            System.Reflection.PropertyInfo pi = K2.Configuration.GetType().GetProperty(propName);
            if (pi == null)
                return;

            // Invoke the set
            System.Reflection.MethodInfo mi = pi.GetSetMethod();
            if (mi == null)
                return;

            mi.Invoke(K2.Configuration, new object[] { value });
        }

        private object CheckForIPAttachment(object input)
        {
            object returnVal = input;

            SourceCode.Workflow.Common.SharePoint.Document.InfoPath.Attachment attachment = null;

            try
            {
                if(IsBase64String(input.ToString()))
                {
                    attachment = new SourceCode.Workflow.Common.SharePoint.Document.InfoPath.Attachment(input.ToString());

                    if (attachment.IsIpAttachment)
                    {
                        returnVal = SourceCode.Workflow.Common.Encoding.Base64.ByteArrayToBase64String(attachment.File);
                    }
                }
            }
            catch
            {
                returnVal = input;
            }
            finally
            {
                attachment = null;
            }
            
            return returnVal;
        }

        private bool IsBase64String(string str)
        {
            try
            {
                // If not exception is cought, then it is a base64 string
                Convert.FromBase64String(str);
                return true;
            }
            catch
            {
                // If exception is cought, then I assumed it is a normal string
                return false;
            }
        }
        #endregion

        #region IWorkflowContext<hostContext> Members

        public Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventItemContext_29642b6746124818ae1064c7ce65166d K2
        {
            get
            {
                return _k2;
            }
            set
            {
                _k2 = value;
            }
        }

        #endregion

        #region XmlField

        private XMLHelper _xmlhelper;
        internal XMLHelper XmlHelper
        {
            get
            {
                if (_xmlhelper == null)
                {
                    _xmlhelper = new XMLHelper();
                }
                return _xmlhelper;
            }
            private set
            {
                _xmlhelper = value;
            }
        }

        private void SetXmlFieldValue(int setIdx, object value, string type)
        {
            #region Check if XmlField not previously access and add if not accessed to Helper Object
            string name = GetK2Configuration(CollectionType.ReturnValueXmlFieldName, setIdx).ToString();
            K2Scope scope = (K2Scope)Enum.Parse(typeof(K2Scope), GetK2Configuration(CollectionType.ReturnValueXmlFieldScope, setIdx).ToString());
            
            if (!this.XmlHelper.XMLFields.Contains(name, scope))
            {
                string xmlValue = string.Empty;
                string schemaUri = string.Empty;
                switch (scope)
                {
                    case K2Scope.Process:
                        xmlValue = K2.ProcessInstance.XmlFields[name].Value;
                        schemaUri = K2.ProcessInstance.XmlFields[name].Schema;
                        break;
                    case K2Scope.Activity:
                        xmlValue = K2.ActivityInstanceDestination.ActivityInstance.XmlFields[name].Value;
                        schemaUri = K2.ActivityInstanceDestination.ActivityInstance.XmlFields[name].Schema;
                        break;
                    case K2Scope.Destination:
                        xmlValue = K2.ActivityInstanceDestination.XmlFields[name].Value;
                        schemaUri = K2.ActivityInstanceDestination.XmlFields[name].Schema;
                        break;
                }
                this.XmlHelper.XMLFields.Add(new XMLHelper_XMLField(name, scope, xmlValue, schemaUri));
            }
            #endregion

            #region Check if xpath not previously access and add if not accessed to Helper Object
            string xpath = GetK2Configuration(CollectionType.ReturnValueXmlFieldPath, setIdx).ToString();

            if (!this.XmlHelper.XMLFields[name, scope].XPaths.Contains(xpath))
            {
                this.XmlHelper.XMLFields[name, scope].XPaths.Add(new XMLHelper_XPath(xpath));
            }
            #endregion

            #region Set Helper Object Value
            if (value != null)
            {
                PropertyType propType = (PropertyType)Enum.Parse(typeof(PropertyType), type);
                switch (propType)
                {
                    case PropertyType.DateTime:
                        this.XmlHelper.XMLFields[name, scope].XPaths[xpath].Values.Add(Convert.ToDateTime(value.ToString()).ToString("yyyy-MM-ddTHH:mm:ss.fffffffzzz"));
                        break;
					case PropertyType.YesNo:
                        this.XmlHelper.XMLFields[name, scope].XPaths[xpath].Values.Add(value.ToString().ToLower());
                        break;
                    default:
                        this.XmlHelper.XMLFields[name, scope].XPaths[xpath].Values.Add(value.ToString());
                        break;
                }
            }
            else
            {
                this.XmlHelper.XMLFields[name, scope].XPaths[xpath].Values.Add(string.Empty);
            }
            #endregion
        }

        private void SetXmlField()
        {
            if (this.XmlHelper != null)
            {
                this.XmlHelper.Update();
            
                #region Set Workflow Xml Values from Helper Object
                foreach (XMLHelper_XMLField xmlfield in this.XmlHelper.XMLFields)
                {
                    switch (xmlfield.Scope)
                    {
                        case K2Scope.Process:
                            K2.ProcessInstance.XmlFields[xmlfield.Name].Value = xmlfield.XMLValue;
                            break;
                        case K2Scope.Activity:
                            K2.ActivityInstanceDestination.ActivityInstance.XmlFields[xmlfield.Name].Value = xmlfield.XMLValue;
                            break;
                        case K2Scope.Destination:
                            K2.ActivityInstanceDestination.XmlFields[xmlfield.Name].Value = xmlfield.XMLValue;
                            break;
                    }
                }
                #endregion

                this.XmlHelper = null;
            }
        }
        #endregion
    }
}
]]></Content></CodeFile><CodeFile><Guid>8c1ce35f67d14499b236d9f38ef7f1ad</Guid><OriginalFileName>@safeitemname@_XMLHelper.cs</OriginalFileName><Content><![CDATA[using System;
using System.Collections.Generic;
using System.Text;
using System.Xml.Schema;
using System.Xml;
using System.Xml.XPath;
using SourceCode.KO;
using SourceCode.Workflow.Common.Extenders;
using hostContext = Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventItemContext_29642b6746124818ae1064c7ce65166d;

namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
    
    public partial class EventItem_29642b6746124818ae1064c7ce65166d
    {
        public enum K2Scope
        {
            Process,
            Activity,
            Destination
        }

        public class XMLHelper
        {
            #region Constructor
            public XMLHelper()
            {
            }
            #endregion

            #region Variables
            XMLHelper_XMLFieldCollection _xmlFields;
            #endregion

            #region Properties
            public XMLHelper_XMLFieldCollection XMLFields
            {
                get
                {
                    if (_xmlFields == null)
                    {
                        _xmlFields = new XMLHelper_XMLFieldCollection();
                    }
                    return _xmlFields;
                }
            }
            #endregion

            #region Methods
            public void Update()
            {
                foreach (XMLHelper_XMLField xmlfield in this.XMLFields)
                {
                    xmlfield.Update();
                }
            }
            #endregion

            public void SaveToXmlFile(string filename)
            {
                string returnval = string.Empty;

                System.Xml.Serialization.XmlSerializer xmlserializer = null;
                System.IO.MemoryStream memorystream = null;
                System.Xml.Serialization.XmlSerializerNamespaces xmlserializernamespaces = null;
                System.IO.StreamReader streamreader = null;
                XmlDocument xmldocument = null;

                try
                {
                    xmlserializer = new System.Xml.Serialization.XmlSerializer(this.GetType());
                    memorystream = new System.IO.MemoryStream();

                    xmlserializernamespaces = new System.Xml.Serialization.XmlSerializerNamespaces();
                    xmlserializernamespaces.Add(string.Empty, string.Empty);

                    xmlserializer.Serialize(memorystream, this, xmlserializernamespaces);

                    memorystream.Position = 0;

                    streamreader = new System.IO.StreamReader(memorystream, System.Text.Encoding.UTF8);

                    xmldocument = new XmlDocument();
                    xmldocument.LoadXml(streamreader.ReadToEnd().ToString());

                    returnval = xmldocument.DocumentElement.OuterXml;

                    memorystream.Close();
                    streamreader.Close();
                }
                catch (Exception Ex)
                {
                    throw Ex;
                }
                finally
                {
                    xmlserializer = null;
                    memorystream = null;
                    xmlserializernamespaces = null;
                    streamreader = null;
                    xmldocument = null;
                }

                using (System.IO.TextWriter tw = new System.IO.StreamWriter(filename))
                {
                    tw.WriteLine(returnval);
                    tw.Close();
                }
            }

            public static XMLHelper LoadFromXmlFile(string filename)
            {
                string xmlstring = string.Empty;
                using (System.IO.TextReader tr = new System.IO.StreamReader(filename))
                {
                    xmlstring = tr.ReadToEnd();
                    tr.Close();
                }

                XMLHelper item = new XMLHelper();

                System.Xml.Serialization.XmlSerializer xmlserializer = null;
                System.IO.MemoryStream memorystream = null;
                XmlDocument xmldocument = null;

                try
                {
                    xmldocument = new XmlDocument();
                    xmldocument.LoadXml(xmlstring);

                    memorystream = new System.IO.MemoryStream();

                    xmldocument.Save(memorystream);

                    xmlserializer = new System.Xml.Serialization.XmlSerializer(item.GetType());

                    memorystream.Position = 0;

                    item = (XMLHelper)xmlserializer.Deserialize(memorystream);

                    memorystream.Close();
                }
                catch (Exception Ex)
                {
                    throw Ex;
                }
                finally
                {
                    xmlserializer = null;
                    memorystream = null;
                    xmldocument = null;
                }

                return item;
            }
        }

        public class XMLHelper_XMLFieldCollection : List<XMLHelper_XMLField>
        {
            #region Methods
            public XMLHelper_XMLField this[string name, K2Scope scope]
            {
                get
                {
                    foreach (XMLHelper_XMLField item in this)
                    {
                        if ((String.Compare(item.Name, name, true) == 0) && item.Scope == scope)
                        {
                            return item;
                        }
                    }
                    return null;
                }
            }
            public bool Contains(string name, K2Scope scope)
            {
                if (this[name, scope] != null)
                {
                    return true;
                }
                return false;
            }
            #endregion
        }

        public class XMLHelper_XMLField
        {
            #region Constructor
            public XMLHelper_XMLField()
            {

            }
            public XMLHelper_XMLField(string name, K2Scope scope, string xmlValue, string schemaUri)
                : this()
            {
                this.Name = name;
                this.XMLValue = xmlValue;
                this.SchemaUri = schemaUri;
                this.Scope = scope;
            }
            #endregion

            #region Variables
            private string _name;
            private K2Scope _scope;
            private string _xmlValue;
            private string _schemaUri;
            private XMLHelper_XPathCollection _xpaths;
            #endregion

            #region Properties
            public string Name
            {
                get
                {
                    return _name;
                }
                set
                {
                    _name = value;
                }
            }
            public K2Scope Scope
            {
                get
                {
                    return _scope;
                }
                set
                {
                    _scope = value;
                }
            }
            public string XMLValue
            {
                get
                {
                    return _xmlValue;
                }
                set
                {
                    _xmlValue = value;
                }
            }
            public string SchemaUri
            {
                get
                {
                    return _schemaUri;
                }
                set
                {
                    _schemaUri = value;
                }
            }
            public XmlSchemaSet SchemaSet
            {
                get
                {
                    if (!string.IsNullOrEmpty(this.SchemaUri))
                    {
                        XmlSchemaSet set = new XmlSchemaSet();

                        XmlDocument xmldoc = new XmlDocument();
                        xmldoc.LoadXml(this.SchemaUri);

                        if(xmldoc.SelectNodes("Schemas/Schema").Count > 0)
                        {
                            foreach (XmlNode node in xmldoc.SelectNodes("Schemas/Schema"))
                            {
                                set.Add(XmlSchema.Read(new System.IO.StringReader(node.InnerText), null));
                            }
                        } 
                        else 
                        {
                            set.Add(XmlSchema.Read(new System.IO.StringReader(this.SchemaUri), null));
                        }

                        xmldoc = null;

                        return set;
                    }
                    return null;
                }
            }
            public XMLHelper_XPathCollection XPaths
            {
                get
                {
                    if (_xpaths == null)
                    {
                        _xpaths = new XMLHelper_XPathCollection();
                    }
                    return _xpaths;
                }
            }
            #endregion

            #region Methods
            //public void Update()
            //{
            //    XmlDocument doc = new XmlDocument();
            //    XmlDocument initialDoc = new XmlDocument();
                
            //    InitXml(doc, initialDoc);

            //    foreach (XMLHelper_XPath xpath in this.XPaths)
            //    {
            //        EnsureXpathExists(doc, xpath.XPath, initialDoc);
            //    }

            //    foreach (XMLHelper_XPath xpath in this.XPaths)
            //    {
            //        xpath.Update(doc, this.SchemaSet);
            //    }

            //    Validate(doc);

            //    this.XMLValue = doc.OuterXml;
            //}

            public void Update()
            {
                EnsureXmlValue();

                foreach (XMLHelper_XPath xpath in this.XPaths)
                {
                    this.XMLValue = xpath.Update(this.XMLValue, this.SchemaSet);
                }

                Validate();

            }

            private void EnsureXmlValue()
            {
                if (string.IsNullOrEmpty(this.XMLValue))
                {
                    SourceCode.Workflow.Common.Xml.XmlSampleGenerator sampleGen = new SourceCode.Workflow.Common.Xml.XmlSampleGenerator(this.SchemaSet, XmlQualifiedName.Empty);
                    sampleGen.MaxThreshold = 1;

                    using (System.IO.MemoryStream s = new System.IO.MemoryStream())
                    {
                        using (XmlTextWriter w = new XmlTextWriter(s, null))
                        {
                            w.Formatting = Formatting.Indented;
                            sampleGen.WriteXml(w);
                            s.Position = 0;

                            using (System.IO.StreamReader r = new System.IO.StreamReader(s))
                            {
                                this.XMLValue = r.ReadToEnd();
                            }
                        }
                    }

                    sampleGen = null;
                }
            }

            public void InitXml(XmlDocument xmldoc, XmlDocument initdoc)
            {
                EnsureXmlValue();

                xmldoc.LoadXml(this.XMLValue);
                xmldoc.Schemas.Add(this.SchemaSet);
                initdoc.LoadXml(this.XMLValue);
                initdoc.Schemas.Add(this.SchemaSet);

                xmldoc.DocumentElement.InnerXml = string.Empty;
               
            }

            public void EnsureXpathExists(XmlDocument doc, string xpath, XmlDocument initialDoc)
            {
                //if xpath does not exist already
                if (doc.SelectNodes(xpath).Count == 0)
                {
                    string[] attr;
                    string[] nodes;

                    attr = xpath.Split(new string[] { "/@" }, StringSplitOptions.RemoveEmptyEntries);

                    nodes = attr[0].Split(new string[] { "/*" }, StringSplitOptions.RemoveEmptyEntries);
                    
                    XmlNode par = doc.DocumentElement;
                   
                    StringBuilder builder = new StringBuilder();

                    for (int i = 0; i < nodes.Length; i++)
                    {
                        string[] s = nodes[i].Split(new char[]{'\''}, StringSplitOptions.RemoveEmptyEntries);
                        string nodeName = s[1];

                        builder.Append(string.Format(@"/*[local-name()='{0}']",s[1]));

                        XmlNode node = doc.SelectSingleNode(builder.ToString());

                        if (node == null)
                        {
                            XmlNode initialNode = initialDoc.SelectSingleNode(builder.ToString());

                            node = doc.ImportNode(initialNode, false);

                            bool found = false;

                            while (initialNode.PreviousSibling != null && !found)
                            {
                                foreach (XmlNode n in par.ChildNodes)
                                {
                                    if (n.Name == initialNode.PreviousSibling.Name)
                                    {
                                        found = true;
                                        par.InsertAfter(node, n);
                                        break;
                                    }
                                }

                                initialNode = initialNode.PreviousSibling;
                            }

                            if (!found) par.PrependChild(node);
                        }

                        par = doc.SelectSingleNode(builder.ToString());                           
                    }

                    if (attr.Length != 1)
                    {
                        XmlAttribute a = doc.CreateAttribute(attr[1]);
                        par.Attributes.Append(a);
                    }
                }
            }

            //public void Validate(XmlDocument xmldoc)
            //{
            //    xmldoc.Validate(new ValidationEventHandler(XmlDocumentValidation));
            //}

            public void Validate()
            {
                XmlDocument xmldoc = new XmlDocument();
                try
                {
                    xmldoc.LoadXml(this.XMLValue);
                    xmldoc.Schemas.Add(this.SchemaSet);

                    xmldoc.Validate(new ValidationEventHandler(XmlDocumentValidation));
                }
                finally
                {
                    xmldoc = null;
                }
            }

            private void XmlDocumentValidation(object obj, ValidationEventArgs args)
            {
                if(args.Severity == XmlSeverityType.Error)
                {
                    throw new Exception(string.Format("SmartObject Event xml validation against schema failed: {0}",args.Message));
                }
            }
            #endregion
        }

        public class XMLHelper_XPathCollection : List<XMLHelper_XPath>
        {
            #region Methods
            public XMLHelper_XPath this[string xpath]
            {
                get
                {
                    foreach (XMLHelper_XPath item in this)
                    {
                        if (String.Compare(item.XPath, xpath, true) == 0)
                        {
                            return item;
                        }
                    }
                    return null;
                }
            }
            public bool Contains(string xpath)
            {
                if (this[xpath] != null)
                {
                    return true;
                }
                return false;
            }
            #endregion
        }

        public class XMLHelper_XPath
        {
            #region Constructor
            public XMLHelper_XPath()
            {

            }
            public XMLHelper_XPath(string xpath)
                : this()
            {
                this.XPath = xpath;
            }
            #endregion

            #region Variables
            private string _xpath;
            private List<string> _values;
            #endregion

            #region Properties
            public string XPath
            {
                get
                {
                    return _xpath;
                }
                set
                {
                    _xpath = value;
                }
            }
            public List<string> Values
            {
                get
                {
                    if (_values == null)
                    {
                        _values = new List<string>();
                    }
                    return _values;
                }
            }
            #endregion

            #region Methods
            public string Update(string xmlValue, XmlSchemaSet schemaset)
            {
                string retval = string.Empty;

                XmlDocument xmldoc = new XmlDocument();
                xmldoc.Schemas.Add(schemaset);
                xmldoc.LoadXml(xmlValue);

                if (xmldoc.SelectNodes(this.XPath).Count != 0)
                {
                    while (xmldoc.SelectNodes(this.XPath).Count != this.Values.Count && xmldoc.SelectNodes(this.XPath).Count != 0)
                    {
                        XmlNodeList list = xmldoc.SelectNodes(this.XPath);
                        //Not enough Nodes for Values
                        if (list.Count < this.Values.Count)
                        {
                            if (list[0] is XmlAttribute)
                            {
                                (list[0] as XmlAttribute).OwnerElement.ParentNode.AppendChild((list[0] as XmlAttribute).OwnerElement.CloneNode(true));
                            }
                            if (list[0] is XmlElement)
                            {
                                XmlElement clonenode = null;

                                if ((list[0] as XmlElement).ParentNode != xmldoc.DocumentElement)
                                {
                                    clonenode = (XmlElement)(list[0] as XmlElement).ParentNode;
                                }
                                else
                                {
                                    clonenode = (list[0] as XmlElement);
                                }

                                clonenode.ParentNode.InsertAfter(clonenode.CloneNode(true), clonenode);

                            }

                        }
                        //Not many Nodes for Values
                        if (list.Count > this.Values.Count)
                        {
                            if (list[list.Count - 1] is XmlAttribute)
                            {
                                (list[list.Count - 1] as XmlAttribute).OwnerElement.ParentNode.RemoveChild((list[list.Count - 1] as XmlAttribute).OwnerElement);
                            }
                            if (list[list.Count - 1] is XmlElement)
                            {
                                (list[list.Count - 1] as XmlElement).ParentNode.RemoveChild(list[list.Count - 1]);
                            }
                        }

                        list = null;
                    }
                }
                else
                {
                    throw new Exception(string.Format("Unable to retrieve xpath({0}) from xml document.", this.XPath));
                }

                XmlNodeList listNodes = xmldoc.SelectNodes(this.XPath);
                for (int i = 0; i <= this.Values.Count - 1; i++)
                {
                    if (listNodes[i] is XmlAttribute)
                    {
                        listNodes[i].Value = this.Values[i];
                    }
                    if (listNodes[i] is XmlElement)
                    {
                        XPathNavigator xPathNavigator = listNodes[i].CreateNavigator();

                        if (!string.IsNullOrEmpty(this.Values[i]) && xPathNavigator.MoveToAttribute("nil", "http://www.w3.org/2001/XMLSchema-instance"))
                        {
                            xPathNavigator.DeleteSelf();
                        }

                        xPathNavigator.SetValue(this.Values[i]);
                    }
                }

                retval = xmldoc.OuterXml;

                xmldoc = null;

                return retval;
            }

            //public string Update(XmlDocument xmldoc, XmlSchemaSet schemaset)
            //{
            //    string retval = string.Empty;

            //    if (xmldoc.SelectNodes(this.XPath).Count != 0)
            //    {
            //        while (xmldoc.SelectNodes(this.XPath).Count != this.Values.Count && xmldoc.SelectNodes(this.XPath).Count != 0)
            //        {
            //            XmlNodeList list = xmldoc.SelectNodes(this.XPath);
            //            //Not enough Nodes for Values
            //            if (list.Count < this.Values.Count)
            //            {
            //                if (list[0] is XmlAttribute)
            //                {
            //                    XmlNode parent = (list[0] as XmlAttribute).OwnerElement.ParentNode;
            //                    parent.InsertBefore((list[0] as XmlAttribute).OwnerElement.CloneNode(true), parent.FirstChild);
            //                }
            //                if (list[0] is XmlElement)
            //                {
            //                    XmlElement clonenode = null;

            //                    if ((list[0] as XmlElement).ParentNode != xmldoc.DocumentElement)
            //                    {
            //                        clonenode = (XmlElement)(list[0] as XmlElement).ParentNode;
            //                    }
            //                    else
            //                    {
            //                        clonenode = (list[0] as XmlElement);
            //                    }

            //                    clonenode.ParentNode.InsertAfter(clonenode.CloneNode(true), clonenode);
            //                }
            //            }

            //            list = null;
            //        }
            //    }
            //    else
            //    {
            //        throw new Exception(string.Format("Unable to retrieve xpath({0}) from xml document.", this.XPath));
            //    }

            //    XmlNodeList listNodes = xmldoc.SelectNodes(this.XPath);
            //    for (int i = 0; i <= this.Values.Count - 1; i++)
            //    {
            //        if (listNodes[i] is XmlAttribute)
            //        {
            //            listNodes[i].Value = this.Values[i];
            //        }
            //        if (listNodes[i] is XmlElement)
            //        {
            //            XPathNavigator xPathNavigator = listNodes[i].CreateNavigator();

            //            if (!string.IsNullOrEmpty(this.Values[i]) && xPathNavigator.MoveToAttribute("nil", "http://www.w3.org/2001/XMLSchema-instance"))
            //            {
            //                xPathNavigator.DeleteSelf();
            //            }

            //            xPathNavigator.SetValue(this.Values[i]);
            //        }
            //    }
                

            //    retval = xmldoc.OuterXml;

            //    xmldoc = null;

            //    return retval;
            //}
            #endregion
        }
    }
}
]]></Content></CodeFile></CodeFiles><Guid>29642b6746124818ae1064c7ce65166d</Guid><MetaData /><Username /><CredentialGuid>00000000-0000-0000-0000-000000000000</CredentialGuid><Language>CSharp</Language></Extender><Properties Type="SourceCode.Workflow.Design.SmartFormatProperties" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Locals><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>1d011a3a5d1346b79feddba73d2de7cd</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[ff35c026-dd60-40d7-b2e7-b6df619b73b6]]></Value></ValueTypePart></Parts><Guid>dc4ee9eeb85a40498155f648d920ea1d</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>715bad565c6746c983895ff91a3885ea</Guid><Name>Guid</Name></Value><Guid>624ba0654d4f4953a735e0423b71b7f2</Guid><Key>Guid</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>55b85ce3e8264e308d89c2a744094b8e</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[update]]></Value></ValueTypePart></Parts><Guid>bcaa29a80b264668baa85b79626b4f66</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>1671ddd0d32f483981db9ffe67bdb143</Guid><Name>MethodType</Name></Value><Guid>db78951c16b3496bbf3721c0212986f3</Guid><Key>MethodType</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>be3fe46991154ed8b3fca0dee59f0f00</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[SourceCode.SmartFunctions.Syntax.Expressions.SmartObjectExp]]></Value></ValueTypePart></Parts><Guid>95c351436cd243a2824ff93c605b6d59</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>a9397dd53ee34bac9d3cf568b1eebb5e</Guid><Name>Type</Name></Value><Guid>6a6a84f2a121450cbc6879e1092b02d6</Guid><Key>Type</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>6c446f85d85c4c4d9f624cbd10ad84d5</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[Save]]></Value></ValueTypePart></Parts><Guid>c983b28d20cb4e9182dc1f8dad4ef2af</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>2fea99e5b5a44b248d52a727f7575161</Guid><Name>MethodName</Name></Value><Guid>826e1db3caa3466ba3b5732496ca123b</Guid><Key>MethodName</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ArtifactLibraryFieldPart Type="SourceCode.Workflow.Design.ArtifactLibraryFieldPart" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>f0ecb9e956e34d69a8f93f26ffaa29f8</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><FieldName>SmartObject Server</FieldName></ArtifactLibraryFieldPart></Parts><Guid>65f78ae56f8f43eab558e4aa63263cc1</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>1ffd2aca35124b39876111afd7617a13</Guid><Name>Server</Name></Value><Guid>6813b08f45dd4e318594b05f1e9405a1</Guid><Key>Server</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>2c09db1c52f34f3483ba7b8cff9f7454</Guid><ValueType>System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[False]]></Value></ValueTypePart></Parts><Guid>e5c0bcbbc5114ab5b1c00a2e5ee85275</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>52d7eeac702149b7a414b8e8d5037b33</Guid><Name>IsList</Name></Value><Guid>6d201b54cd2b4797979405e062bb229c</Guid><Key>IsList</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>bd197539b47c4ffc89f76f6ef41bd88f</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[Save]]></Value></ValueTypePart></Parts><Guid>a16331c1dbf8450fb9d4e228181c3166</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>71f009ac43314c73b66c91d80e7c4766</Guid><Name>MethodDisplayName</Name></Value><Guid>f464a2ad592e4460be55b68be1680bcd</Guid><Key>MethodDisplayName</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>4bf05f8bf2134469890f9ab233365aaf</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[IPEX.NewUserAdmin.ImplementationCheckListSO]]></Value></ValueTypePart></Parts><Guid>f1cca31754a942fe96b81dbd1ba9a53d</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>677c5e20fed5430b88973b4576717e84</Guid><Name>DisplayName</Name></Value><Guid>e1f81690e7bf400ea9e81394f79efa36</Guid><Key>DisplayName</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>6ab235e342f54b7da1b7c8e7f6a519e3</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[IPEX_NewUserAdmin_ImplementationCheckListSO]]></Value></ValueTypePart></Parts><Guid>9ce350c914ac428fa94a4fb23b706007</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>1104c85af3a8489eb1a134ee1879b31d</Guid><Name>Name</Name></Value><Guid>509d9bb323b44511b0bf9b3fe25839df</Guid><Key>Name</Key></PersistableObjectDictionaryEntry></Locals><Inputs><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>7d7e3ed89f05454d9731ad20cbce5c80</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[C]]></Value></ValueTypePart></Parts><Guid>94a1333992cd4fa38e283541d7c1ca24</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>0068f9bf3eb74b95837c5db06b9778d4</Guid><Name>OperationStatus</Name><DisplayName>OperationStatus</DisplayName><Type>Text</Type></Value><Guid>58f867dba5bf43d1ba2ba693723a37d8</Guid><Key>OperationStatus</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>a2ee04ed1e7446c2933c4c398641ec5f</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>345fb8c9b16e453bb48bfba175ce5b8d</Guid><Name>OperatorEmail</Name><DisplayName>OperatorEmail</DisplayName><Type>Text</Type></Value><Guid>b925c83d56e84cd5ac8a3b91731d0b69</Guid><Key>OperatorEmail</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e89fb177768248c4b18cc9254dc809fe</Guid><ValueType>System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="af55a3e8-ddd0-43a9-8fce-426887c56950&#xD;" /><DataFieldName>OperatorCheckListID</DataFieldName><Scope>Process</Scope><Type>Integer</Type><ListOption>None</ListOption></DataFieldPart></Parts><Guid>d033816fadee4352a1ef3059e228b10e</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>78393764d9634534b5727ad47776eec4</Guid><Name>ID</Name><DisplayName>ID</DisplayName><Type>Autonumber</Type><IsUnique>1</IsUnique></Value><Guid>36702ada4843414c9359edc08f3d7bd4</Guid><Key>ID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>1e684a310d474d12a32889a917dc3815</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>b2cbfe29b19640c3a64a81ed7b559aa7</Guid><Name>OperatorName</Name><DisplayName>OperatorName</DisplayName><Type>Text</Type></Value><Guid>f2ed0aff11fb413fa24993c5f09799ce</Guid><Key>OperatorName</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>37e358af25864358bb21642c94174e22</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>fad2365396344e5eb9a1143194fc044d</Guid><Name>RequestID</Name><DisplayName>RequestID</DisplayName><Type>Number</Type></Value><Guid>de6b98b4858b4a818611bddc4757d7fc</Guid><Key>RequestID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>0a92bdce792a496d8738e4f5a8d9dca5</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>c588c2bc22014d73a1123d5c5a60eb39</Guid><Name>OperatorComment</Name><DisplayName>OperatorComment</DisplayName><Type>Text</Type></Value><Guid>68fee822ea664bffa612278320f7d248</Guid><Key>OperatorComment</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><FunctionFieldPart Type="SourceCode.Workflow.Functions.Design.FunctionFieldPart" Assembly="SourceCode.Workflow.Functions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><WizardDefinition Type="SourceCode.Workflow.Functions.Wizard.FunctionFieldPartDefinition" Assembly="SourceCode.Workflow.Functions.Wizard, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>4449e5d6a8654066ac7c4d47807b5fb7</Guid><Name>{8a6322bf-d48e-49a5-b2d0-ea2092bc38c9}</Name><RegisteredItem>Function FieldPart Wizard</RegisteredItem></WizardDefinition><Guid>ed67dce3c9e54dc5bab561ccea06d393</Guid><ValueType>System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><MethodPath>SourceCode.Workflow.Functions.DateAndTime, SourceCode.Workflow.Functions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d|Now</MethodPath><ReturnType>System.DateTime</ReturnType><Name>Now</Name><Desc>Gets the current date and time.</Desc></FunctionFieldPart></Parts><Guid>13dc6d41417e4e098357cce656b54a9e</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>dbe2604eab544b6490cc95a4f5e0a6bf</Guid><Name>OperatedTime</Name><DisplayName>OperatedTime</DisplayName><Type>DateTime</Type></Value><Guid>9d3d53d7f0664f6b9f8d46a7b705b100</Guid><Key>OperatedTime</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e54de38babd749caae3ba8230470ce95</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>460cd0389a524dac8551b64b19657620</Guid><Name>OperatorCount</Name><DisplayName>OperatorCount</DisplayName><Type>Number</Type></Value><Guid>43b703c063b94ebd98fe6c02740aaefd</Guid><Key>OperatorCount</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>39e1135aef9148289a928b549de17d04</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>766837996f344d57aef02fb179842a70</Guid><Name>OperatorUserID</Name><DisplayName>OperatorUserID</DisplayName><Type>Text</Type></Value><Guid>045cb44d7f5d4ecf86a5f79eb05606c8</Guid><Key>OperatorUserID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>2f36839209d04f2fb2b0869ba12a366c</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>01ea94d69a9c434fbb65ca1850a0dd7b</Guid><Name>EmployeeDataID</Name><DisplayName>EmployeeDataID</DisplayName><Type>Number</Type></Value><Guid>2127ff821cbc4eac812869abcf55f9c0</Guid><Key>EmployeeDataID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>cf899ddd45a44c3ebc07a026ee1fefa3</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>9e4b217c589e40bbb5e480b323da52c7</Guid><Name>ServiceCategoryID</Name><DisplayName>ServiceCategoryID</DisplayName><Type>Number</Type></Value><Guid>cd9a37d8883046838a1e5b42289987a9</Guid><Key>ServiceCategoryID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>cf3b475cead749d697d81252fdde9081</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>df3cb1d759b94f1d9ab30b6078ad3072</Guid><Name>ServiceID</Name><DisplayName>ServiceID</DisplayName><Type>MultiValue</Type></Value><Guid>d6e244cf2d1c413393aa3b78cf35b8e5</Guid><Key>ServiceID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>d43c38bfef3a4ce795b238cb640d09e5</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>83bf6d5fed3149c5a2a9c53db690628c</Guid><Name>ServiceTypeID</Name><DisplayName>ServiceTypeID</DisplayName><Type>Number</Type></Value><Guid>93323052f32643f38e4aebdc60202ffc</Guid><Key>ServiceTypeID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>de6266388b2941ca9d979349bc19e6f9</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>6881993e235c456d9865d6e49bc69113</Guid><Name>CreatedTime</Name><DisplayName>CreatedTime</DisplayName><Type>DateTime</Type></Value><Guid>eedaf1b8c10c491096fb56aef16e2b01</Guid><Key>CreatedTime</Key></PersistableObjectDictionaryEntry></Inputs><Returns><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Return" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>646e6cb6e30b4c5ab1cebbdba205e0fb</Guid><Name>ID</Name><DisplayName>ID</DisplayName><Type>Autonumber</Type></Value><Guid>1ff6edf59ce34a40ad7a9ca139e20e50</Guid><Key>ID</Key></PersistableObjectDictionaryEntry></Returns><Properties><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>18bd704f20a9496a84646b854df782ac</Guid><Name>OperationStatus</Name><DisplayName>OperationStatus</DisplayName><Type>Text</Type></Value><Guid>327b1219f06d456face5368bcaf68978</Guid><Key>OperationStatus</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>937644801c0e48818bf02d33e165d278</Guid><Name>OperatorEmail</Name><DisplayName>OperatorEmail</DisplayName><Type>Text</Type></Value><Guid>59cdd5e1dc01451ab62390a7e6305129</Guid><Key>OperatorEmail</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>d39e2095ea2346bebe2ffbcf5c50b766</Guid><Name>ID</Name><DisplayName>ID</DisplayName><Type>Autonumber</Type><IsUnique>1</IsUnique></Value><Guid>7137bee9f76841cdae35b0f63472ab99</Guid><Key>ID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>fdd32e11da674c0ea85ee4ce3b90fb46</Guid><Name>OperatorName</Name><DisplayName>OperatorName</DisplayName><Type>Text</Type></Value><Guid>76e34d0512a9453483dc13dd41fb8ad5</Guid><Key>OperatorName</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>a9bee57c21cd4f829d58bab30701001f</Guid><Name>RequestID</Name><DisplayName>RequestID</DisplayName><Type>Number</Type></Value><Guid>f26f25453e8543bb8511d36afdf44ef7</Guid><Key>RequestID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>cfc8772332fc45b9b572d36ce6ffe2df</Guid><Name>OperatorComment</Name><DisplayName>OperatorComment</DisplayName><Type>Text</Type></Value><Guid>7358f5d54a754a1f9c567abc2e1749c0</Guid><Key>OperatorComment</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>7562c601e37c43ae975e994f85096b5e</Guid><Name>OperatedTime</Name><DisplayName>OperatedTime</DisplayName><Type>DateTime</Type></Value><Guid>82ee057c6c1c4e4f912a2677748f7e5e</Guid><Key>OperatedTime</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>00a44175088b493db8c69926b40e70a7</Guid><Name>OperatorCount</Name><DisplayName>OperatorCount</DisplayName><Type>Number</Type></Value><Guid>8b7276ad155344159727928a8050d547</Guid><Key>OperatorCount</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>f035868d978440eab90fc939e922ceda</Guid><Name>OperatorUserID</Name><DisplayName>OperatorUserID</DisplayName><Type>Text</Type></Value><Guid>8937c200342541929b2b89968e58d5b3</Guid><Key>OperatorUserID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>9e8008a2b56143fd84a20bc241c43529</Guid><Name>EmployeeDataID</Name><DisplayName>EmployeeDataID</DisplayName><Type>Number</Type></Value><Guid>8693fd19304945f39750d2e3842eff1b</Guid><Key>EmployeeDataID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>71cd57ded29d41f5882c272ebd442673</Guid><Name>ServiceCategoryID</Name><DisplayName>ServiceCategoryID</DisplayName><Type>Number</Type></Value><Guid>3d3b483805a54a2ea913bf7e3a70c0e1</Guid><Key>ServiceCategoryID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>9546887824e748adb7eb385c834864dc</Guid><Name>ServiceID</Name><DisplayName>ServiceID</DisplayName><Type>MultiValue</Type></Value><Guid>b6331750b85f4b708c7bcf6d5e068789</Guid><Key>ServiceID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>2dbade8924534e82ad94b02dbe0cf0ad</Guid><Name>ServiceTypeID</Name><DisplayName>ServiceTypeID</DisplayName><Type>Number</Type></Value><Guid>23b2571817bd411880126c35877dc581</Guid><Key>ServiceTypeID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>0570a067285046219705322ad3013ecc</Guid><Name>CreatedTime</Name><DisplayName>CreatedTime</DisplayName><Type>DateTime</Type></Value><Guid>fb58f2a646b64112a5f83d90d9745c00</Guid><Key>CreatedTime</Key></PersistableObjectDictionaryEntry></Properties><Guid>256c0b2174e1454f96d25ce0192ce3e0</Guid></Properties><Guid>7ed1c5609617458387c5c6e0b4f328ac</Guid><MetaData /><Parent ref="a8fb599e-a3ed-4004-9635-e060ea71d7ae&#xD;" /><RunAdvanceMode>0</RunAdvanceMode><TemplateVersion>4</TemplateVersion></SmartObjectEventItem><SmartObjectEventItem Type="SourceCode.Workflow.Design.SmartObjects.SmartObjectEventItem" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Extender Type="SourceCode.Workflow.Design.WindowsWorkflowExtender" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><CodeFiles><CodeFile><Guid>c596a8d72aab4d419bd7e1e6adbd3f25</Guid><OriginalFileName>@safeitemname@.xoml</OriginalFileName><Primary>1</Primary><Content><![CDATA[<ns0:WorkflowContext xmlns:ns0="clr-namespace:SourceCode.Workflow.Common.Extenders;Assembly=SourceCode.Workflow.Common, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d" x:Class="ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2.EventItem_1480ab9e86a44eea8d8473fab80cddf9" x:Name="EventItem_1480ab9e86a44eea8d8473fab80cddf9" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/workflow">
	<ns0:WorkflowContext.LockedActivities>
		<x:Array Type="{x:Type p5:String}" xmlns:p5="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">CreateConnection</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">IsListMethodToExecute</ns1:String>
      <ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">ListMethod</ns1:String>
      <ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">ExecuteList</ns1:String>
      <ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">SingleMethod</ns1:String>
      <ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">ExecuteSingle</ns1:String>
			<ns1:String xmlns:ns1="clr-namespace:System;Assembly=mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">CloseConnection</ns1:String>
		</x:Array>
	</ns0:WorkflowContext.LockedActivities>
  <CodeActivity x:Name="CreateConnection" ExecuteCode="soCreateConnection" />
  <IfElseActivity x:Name="IsListMethodToExecute">
    <IfElseBranchActivity x:Name="ListMethod">
      <IfElseBranchActivity.Condition>
        <CodeCondition Condition="soIsListMethod" />
      </IfElseBranchActivity.Condition>
      <CodeActivity x:Name="ExecuteList" ExecuteCode="soExecuteList" />
    </IfElseBranchActivity>
    <IfElseBranchActivity x:Name="SingleMethod">
      <IfElseBranchActivity.Condition>
        <CodeCondition Condition="soIsSingleMethod" />
      </IfElseBranchActivity.Condition>
      <CodeActivity x:Name="ExecuteSingle" ExecuteCode="soExecuteSingle" />
    </IfElseBranchActivity>
  </IfElseActivity>
  <CodeActivity x:Name="CloseConnection" ExecuteCode="soCloseConnection" />
</ns0:WorkflowContext>]]></Content></CodeFile><CodeFile><Guid>7eab27897e614d18afae6b2e715b0ee8</Guid><OriginalFileName>@safeitemname@.xoml.cs</OriginalFileName><Content><![CDATA[using System.ComponentModel;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Drawing;
using System.Workflow.ComponentModel.Compiler;
using System.Workflow.ComponentModel.Serialization;
using System.Workflow.ComponentModel;
using System.Workflow.ComponentModel.Design;
using System.Workflow.Activities;
using System.Xml;
using SourceCode.KO;
using SourceCode.Workflow.Common.Extenders;
using SourceCode.SmartObjects.Client;
using SourceCode.Workflow.Common.HostedServers;

using hostContext = Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventItemContext_1480ab9e86a44eea8d8473fab80cddf9;

namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
    public partial class EventItem_1480ab9e86a44eea8d8473fab80cddf9 : IWorkflowContext<hostContext>
    {
        [EditorBrowsable(EditorBrowsableState.Never)]
        [DesignerSerializationVisibility(DesignerSerializationVisibility.Hidden)]

        #region Members
        private hostContext _k2;
        #endregion

        #region Enum
        private enum CollectionType
        {
            InputName,
            InputType,
            InputValue,
            ReturnName,
            ReturnType,
            ReturnValue,
            ReturnValueIsXmlField,
            ReturnValueXmlFieldName,
            ReturnValueXmlFieldScope,
            ReturnValueXmlFieldPath
        }

        #endregion

        #region Variables
        private SmartObjects _hostedSmartObjects;
        #endregion

        #region Properties
        private SmartObjects HostedSmartObjects
        {
            set
            {
                _hostedSmartObjects = value;
            }
            get
            {
                return _hostedSmartObjects;
            }
        }
        #endregion

        #region Code Activities

        private void soCreateConnection(object sender, EventArgs e)
        {
            this.HostedSmartObjects = new SmartObjects(this.K2.Configuration.Server);
        }

        private void soIsListMethod(object sender, ConditionalEventArgs e)
        {
            e.Result = K2.Configuration.MethodIsList;
        }

        private void soExecuteList(object sender, EventArgs e)
        {
            List<int> DataMappedReturnProperties = new List<int>();
            List<int> XmlMappedReturnProperties = new List<int>();

            SmartListMethod listmethod = this.HostedSmartObjects.GetListMethod(new Guid(this.K2.Configuration.SmartObjectGuid), this.K2.Configuration.MethodName);
            PropertyReferenceCollection inputCollection = this.HostedSmartObjects.GetListMethodInputProperties(listmethod);

            for (int i = 1; i <= this.K2.Configuration.InputPropertyCount; i++)
            {
                string propName = GetK2Configuration(CollectionType.InputName, i).ToString();
                string propType = GetK2Configuration(CollectionType.InputType, i).ToString();
                object propValue = CheckForIPAttachment(GetK2Configuration(CollectionType.InputValue, i));

                this.HostedSmartObjects.SetPropertyValue(inputCollection, propName, propType, propValue);
            }

            SmartObjectReader smartobjectReader = this.HostedSmartObjects.ExecuteListReaderMethod(listmethod);
            
            if (smartobjectReader.HasRows)
            {
                DataMappedReturnProperties.Clear();
                XmlMappedReturnProperties.Clear();
                for (int i = 1; i <= this.K2.Configuration.ReturnPropertyCount; i++)
                {
                    bool isXmlField = (bool)GetK2Configuration(CollectionType.ReturnValueIsXmlField, i);
                    if (isXmlField)
                    {
                        XmlMappedReturnProperties.Add(i);
                    }
                    else
                    {
                        if (GetK2ConfigurationHasSet(CollectionType.ReturnValue, i))
                        {
                            DataMappedReturnProperties.Add(i);
                        }
                    }
                }
                if (XmlMappedReturnProperties.Count > 0)
                {
                    while (smartobjectReader.Read())
                    {
                        for (int i = 0; i <= XmlMappedReturnProperties.Count - 1; i++)
                        {
                            //reader
                            string propName = GetK2Configuration(CollectionType.ReturnName, XmlMappedReturnProperties[i]).ToString();
                            string propType = GetK2Configuration(CollectionType.ReturnType, XmlMappedReturnProperties[i]).ToString();
                            object propValue = this.HostedSmartObjects.GetPropertyValue(smartobjectReader, listmethod.ReturnProperties, propName, propType);

                            SetXmlFieldValue(XmlMappedReturnProperties[i], propValue, propType);
                        }
                    }
                    SetXmlField();
                }
                if (DataMappedReturnProperties.Count > 0)
                {
                    if (XmlMappedReturnProperties.Count == 0)
                    {
                        smartobjectReader.Seek(smartobjectReader.RecordsAffected);
                    }
                    if (smartobjectReader.HasRows)
                    {
                        for (int i = 0; i <= DataMappedReturnProperties.Count - 1; i++)
                        {
                            //reader
                            string propName = GetK2Configuration(CollectionType.ReturnName, DataMappedReturnProperties[i]).ToString();
                            string propType = GetK2Configuration(CollectionType.ReturnType, DataMappedReturnProperties[i]).ToString();
                            object propValue = this.HostedSmartObjects.GetPropertyValue(smartobjectReader, listmethod.ReturnProperties, propName, propType);

                            SetK2Configuration(CollectionType.ReturnValue, DataMappedReturnProperties[i], propValue);
                        }   
                    }                 
                }     
            }       
            smartobjectReader.Close();
            smartobjectReader = null;
            DataMappedReturnProperties.Clear();
            DataMappedReturnProperties = null;
            XmlMappedReturnProperties.Clear();
            XmlMappedReturnProperties = null;    
        }

        private void soIsSingleMethod(object sender, ConditionalEventArgs e)
        {
            e.Result = !K2.Configuration.MethodIsList;
        }

        private void soExecuteSingle(object sender, EventArgs e)
        {
            SmartMethod method = this.HostedSmartObjects.GetSingleMethod(new Guid(this.K2.Configuration.SmartObjectGuid), this.K2.Configuration.MethodName);
            PropertyReferenceCollection inputCollection = this.HostedSmartObjects.GetSingleMethodInputProperties(method);

            for (int i = 1; i <= this.K2.Configuration.InputPropertyCount; i++)
            {
                string propName = GetK2Configuration(CollectionType.InputName, i).ToString();
                string propType = GetK2Configuration(CollectionType.InputType, i).ToString();
                object propValue = CheckForIPAttachment(GetK2Configuration(CollectionType.InputValue, i));

                this.HostedSmartObjects.SetPropertyValue(inputCollection, propName, propType, propValue);
            }

            this.HostedSmartObjects.ExecuteSingleMethod(method);

            PropertyReferenceCollection returnCollection = this.HostedSmartObjects.GetSingleMethodReturnProperties(method);
            for (int i = 1; i <= this.K2.Configuration.ReturnPropertyCount; i++)
            {
                string propName = GetK2Configuration(CollectionType.ReturnName, i).ToString();
                string propType = GetK2Configuration(CollectionType.ReturnType, i).ToString();
                object propValue = this.HostedSmartObjects.GetPropertyValue(returnCollection, propName, propType);
                bool isXmlField = (bool)GetK2Configuration(CollectionType.ReturnValueIsXmlField, i);
                if(isXmlField)
                {
                    SetXmlFieldValue(i, propValue, propType);
                }
                else
                {
                    SetK2Configuration(CollectionType.ReturnValue, i, propValue);
                }
            }

            SetXmlField();
        }

        private void soCloseConnection(object sender, EventArgs e)
        {
            if (this.HostedSmartObjects != null)
            {
                this.HostedSmartObjects.Dispose();
                this.HostedSmartObjects = null;
            }
        }

        #endregion

        #region Helper Methods
        private bool GetK2ConfigurationHasSet(CollectionType type, int setIdx)
        {
            string propName = string.Format("ReturnPropertyValue{0}", setIdx);

            System.Reflection.PropertyInfo pi = K2.Configuration.GetType().GetProperty(propName);
            if (pi == null)
                return false;

            return pi.CanWrite;
        }

        private object GetK2Configuration(CollectionType type, int setIdx)
        {
            // Get the property that returns the result
            string propName = string.Empty;

            switch (type)
            {
                case CollectionType.InputName:
                    propName = string.Format("InputPropertyName{0}", setIdx);
                    break;
                case CollectionType.InputType:
                    propName = string.Format("InputPropertyType{0}", setIdx);
                    break;
                case CollectionType.InputValue:
                    propName = string.Format("InputPropertyValue{0}", setIdx);
                    break;
                case CollectionType.ReturnName:
                    propName = string.Format("ReturnPropertyName{0}", setIdx);
                    break;
                case CollectionType.ReturnType:
                    propName = string.Format("ReturnPropertyType{0}", setIdx);
                    break;
                case CollectionType.ReturnValue:
                    propName = string.Format("ReturnPropertyValue{0}", setIdx);
                    break;
                case CollectionType.ReturnValueIsXmlField:
                    propName = string.Format("ReturnPropertyValueIsXmlField{0}", setIdx);
                    break;
                case CollectionType.ReturnValueXmlFieldName:
                    propName = string.Format("ReturnPropertyValueXmlFieldName{0}", setIdx);
                    break;
                case CollectionType.ReturnValueXmlFieldScope:
                    propName = string.Format("ReturnPropertyValueXmlFieldScope{0}", setIdx);
                    break;
                case CollectionType.ReturnValueXmlFieldPath:
                    propName = string.Format("ReturnPropertyValueXmlFieldPath{0}", setIdx);
                    break;
            }


            System.Reflection.PropertyInfo pi = K2.Configuration.GetType().GetProperty(propName);
            if (pi == null)
                return string.Empty;

            // Invoke the get
            System.Reflection.MethodInfo mi = pi.GetGetMethod();
            if (mi == null)
                return string.Empty;

            return mi.Invoke(K2.Configuration, null);
        }

        private void SetK2Configuration(CollectionType type, int setIdx, object value)
        {
            string propName = string.Empty;

            switch (type)
            {
                case CollectionType.InputName:
                    propName = string.Format("InputPropertyName{0}", setIdx);
                    break;
                case CollectionType.InputType:
                    propName = string.Format("InputPropertyType{0}", setIdx);
                    break;
                case CollectionType.InputValue:
                    propName = string.Format("InputPropertyValue{0}", setIdx);
                    break;
                case CollectionType.ReturnName:
                    propName = string.Format("ReturnPropertyName{0}", setIdx);
                    break;
                case CollectionType.ReturnType:
                    propName = string.Format("ReturnPropertyType{0}", setIdx);
                    break;
                case CollectionType.ReturnValue:
                    propName = string.Format("ReturnPropertyValue{0}", setIdx);
                    break;
            }


            System.Reflection.PropertyInfo pi = K2.Configuration.GetType().GetProperty(propName);
            if (pi == null)
                return;

            // Invoke the set
            System.Reflection.MethodInfo mi = pi.GetSetMethod();
            if (mi == null)
                return;

            mi.Invoke(K2.Configuration, new object[] { value });
        }

        private object CheckForIPAttachment(object input)
        {
            object returnVal = input;

            SourceCode.Workflow.Common.SharePoint.Document.InfoPath.Attachment attachment = null;

            try
            {
                if(IsBase64String(input.ToString()))
                {
                    attachment = new SourceCode.Workflow.Common.SharePoint.Document.InfoPath.Attachment(input.ToString());

                    if (attachment.IsIpAttachment)
                    {
                        returnVal = SourceCode.Workflow.Common.Encoding.Base64.ByteArrayToBase64String(attachment.File);
                    }
                }
            }
            catch
            {
                returnVal = input;
            }
            finally
            {
                attachment = null;
            }
            
            return returnVal;
        }

        private bool IsBase64String(string str)
        {
            try
            {
                // If not exception is cought, then it is a base64 string
                Convert.FromBase64String(str);
                return true;
            }
            catch
            {
                // If exception is cought, then I assumed it is a normal string
                return false;
            }
        }
        #endregion

        #region IWorkflowContext<hostContext> Members

        public Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventItemContext_1480ab9e86a44eea8d8473fab80cddf9 K2
        {
            get
            {
                return _k2;
            }
            set
            {
                _k2 = value;
            }
        }

        #endregion

        #region XmlField

        private XMLHelper _xmlhelper;
        internal XMLHelper XmlHelper
        {
            get
            {
                if (_xmlhelper == null)
                {
                    _xmlhelper = new XMLHelper();
                }
                return _xmlhelper;
            }
            private set
            {
                _xmlhelper = value;
            }
        }

        private void SetXmlFieldValue(int setIdx, object value, string type)
        {
            #region Check if XmlField not previously access and add if not accessed to Helper Object
            string name = GetK2Configuration(CollectionType.ReturnValueXmlFieldName, setIdx).ToString();
            K2Scope scope = (K2Scope)Enum.Parse(typeof(K2Scope), GetK2Configuration(CollectionType.ReturnValueXmlFieldScope, setIdx).ToString());
            
            if (!this.XmlHelper.XMLFields.Contains(name, scope))
            {
                string xmlValue = string.Empty;
                string schemaUri = string.Empty;
                switch (scope)
                {
                    case K2Scope.Process:
                        xmlValue = K2.ProcessInstance.XmlFields[name].Value;
                        schemaUri = K2.ProcessInstance.XmlFields[name].Schema;
                        break;
                    case K2Scope.Activity:
                        xmlValue = K2.ActivityInstanceDestination.ActivityInstance.XmlFields[name].Value;
                        schemaUri = K2.ActivityInstanceDestination.ActivityInstance.XmlFields[name].Schema;
                        break;
                    case K2Scope.Destination:
                        xmlValue = K2.ActivityInstanceDestination.XmlFields[name].Value;
                        schemaUri = K2.ActivityInstanceDestination.XmlFields[name].Schema;
                        break;
                }
                this.XmlHelper.XMLFields.Add(new XMLHelper_XMLField(name, scope, xmlValue, schemaUri));
            }
            #endregion

            #region Check if xpath not previously access and add if not accessed to Helper Object
            string xpath = GetK2Configuration(CollectionType.ReturnValueXmlFieldPath, setIdx).ToString();

            if (!this.XmlHelper.XMLFields[name, scope].XPaths.Contains(xpath))
            {
                this.XmlHelper.XMLFields[name, scope].XPaths.Add(new XMLHelper_XPath(xpath));
            }
            #endregion

            #region Set Helper Object Value
            if (value != null)
            {
                PropertyType propType = (PropertyType)Enum.Parse(typeof(PropertyType), type);
                switch (propType)
                {
                    case PropertyType.DateTime:
                        this.XmlHelper.XMLFields[name, scope].XPaths[xpath].Values.Add(Convert.ToDateTime(value.ToString()).ToString("yyyy-MM-ddTHH:mm:ss.fffffffzzz"));
                        break;
					case PropertyType.YesNo:
                        this.XmlHelper.XMLFields[name, scope].XPaths[xpath].Values.Add(value.ToString().ToLower());
                        break;
                    default:
                        this.XmlHelper.XMLFields[name, scope].XPaths[xpath].Values.Add(value.ToString());
                        break;
                }
            }
            else
            {
                this.XmlHelper.XMLFields[name, scope].XPaths[xpath].Values.Add(string.Empty);
            }
            #endregion
        }

        private void SetXmlField()
        {
            if (this.XmlHelper != null)
            {
                this.XmlHelper.Update();
            
                #region Set Workflow Xml Values from Helper Object
                foreach (XMLHelper_XMLField xmlfield in this.XmlHelper.XMLFields)
                {
                    switch (xmlfield.Scope)
                    {
                        case K2Scope.Process:
                            K2.ProcessInstance.XmlFields[xmlfield.Name].Value = xmlfield.XMLValue;
                            break;
                        case K2Scope.Activity:
                            K2.ActivityInstanceDestination.ActivityInstance.XmlFields[xmlfield.Name].Value = xmlfield.XMLValue;
                            break;
                        case K2Scope.Destination:
                            K2.ActivityInstanceDestination.XmlFields[xmlfield.Name].Value = xmlfield.XMLValue;
                            break;
                    }
                }
                #endregion

                this.XmlHelper = null;
            }
        }
        #endregion
    }
}
]]></Content></CodeFile><CodeFile><Guid>50ef15e9d12447e38c2f549c35ad63f9</Guid><OriginalFileName>@safeitemname@_XMLHelper.cs</OriginalFileName><Content><![CDATA[using System;
using System.Collections.Generic;
using System.Text;
using System.Xml.Schema;
using System.Xml;
using System.Xml.XPath;
using SourceCode.KO;
using SourceCode.Workflow.Common.Extenders;
using hostContext = Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventItemContext_1480ab9e86a44eea8d8473fab80cddf9;

namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
    
    public partial class EventItem_1480ab9e86a44eea8d8473fab80cddf9
    {
        public enum K2Scope
        {
            Process,
            Activity,
            Destination
        }

        public class XMLHelper
        {
            #region Constructor
            public XMLHelper()
            {
            }
            #endregion

            #region Variables
            XMLHelper_XMLFieldCollection _xmlFields;
            #endregion

            #region Properties
            public XMLHelper_XMLFieldCollection XMLFields
            {
                get
                {
                    if (_xmlFields == null)
                    {
                        _xmlFields = new XMLHelper_XMLFieldCollection();
                    }
                    return _xmlFields;
                }
            }
            #endregion

            #region Methods
            public void Update()
            {
                foreach (XMLHelper_XMLField xmlfield in this.XMLFields)
                {
                    xmlfield.Update();
                }
            }
            #endregion

            public void SaveToXmlFile(string filename)
            {
                string returnval = string.Empty;

                System.Xml.Serialization.XmlSerializer xmlserializer = null;
                System.IO.MemoryStream memorystream = null;
                System.Xml.Serialization.XmlSerializerNamespaces xmlserializernamespaces = null;
                System.IO.StreamReader streamreader = null;
                XmlDocument xmldocument = null;

                try
                {
                    xmlserializer = new System.Xml.Serialization.XmlSerializer(this.GetType());
                    memorystream = new System.IO.MemoryStream();

                    xmlserializernamespaces = new System.Xml.Serialization.XmlSerializerNamespaces();
                    xmlserializernamespaces.Add(string.Empty, string.Empty);

                    xmlserializer.Serialize(memorystream, this, xmlserializernamespaces);

                    memorystream.Position = 0;

                    streamreader = new System.IO.StreamReader(memorystream, System.Text.Encoding.UTF8);

                    xmldocument = new XmlDocument();
                    xmldocument.LoadXml(streamreader.ReadToEnd().ToString());

                    returnval = xmldocument.DocumentElement.OuterXml;

                    memorystream.Close();
                    streamreader.Close();
                }
                catch (Exception Ex)
                {
                    throw Ex;
                }
                finally
                {
                    xmlserializer = null;
                    memorystream = null;
                    xmlserializernamespaces = null;
                    streamreader = null;
                    xmldocument = null;
                }

                using (System.IO.TextWriter tw = new System.IO.StreamWriter(filename))
                {
                    tw.WriteLine(returnval);
                    tw.Close();
                }
            }

            public static XMLHelper LoadFromXmlFile(string filename)
            {
                string xmlstring = string.Empty;
                using (System.IO.TextReader tr = new System.IO.StreamReader(filename))
                {
                    xmlstring = tr.ReadToEnd();
                    tr.Close();
                }

                XMLHelper item = new XMLHelper();

                System.Xml.Serialization.XmlSerializer xmlserializer = null;
                System.IO.MemoryStream memorystream = null;
                XmlDocument xmldocument = null;

                try
                {
                    xmldocument = new XmlDocument();
                    xmldocument.LoadXml(xmlstring);

                    memorystream = new System.IO.MemoryStream();

                    xmldocument.Save(memorystream);

                    xmlserializer = new System.Xml.Serialization.XmlSerializer(item.GetType());

                    memorystream.Position = 0;

                    item = (XMLHelper)xmlserializer.Deserialize(memorystream);

                    memorystream.Close();
                }
                catch (Exception Ex)
                {
                    throw Ex;
                }
                finally
                {
                    xmlserializer = null;
                    memorystream = null;
                    xmldocument = null;
                }

                return item;
            }
        }

        public class XMLHelper_XMLFieldCollection : List<XMLHelper_XMLField>
        {
            #region Methods
            public XMLHelper_XMLField this[string name, K2Scope scope]
            {
                get
                {
                    foreach (XMLHelper_XMLField item in this)
                    {
                        if ((String.Compare(item.Name, name, true) == 0) && item.Scope == scope)
                        {
                            return item;
                        }
                    }
                    return null;
                }
            }
            public bool Contains(string name, K2Scope scope)
            {
                if (this[name, scope] != null)
                {
                    return true;
                }
                return false;
            }
            #endregion
        }

        public class XMLHelper_XMLField
        {
            #region Constructor
            public XMLHelper_XMLField()
            {

            }
            public XMLHelper_XMLField(string name, K2Scope scope, string xmlValue, string schemaUri)
                : this()
            {
                this.Name = name;
                this.XMLValue = xmlValue;
                this.SchemaUri = schemaUri;
                this.Scope = scope;
            }
            #endregion

            #region Variables
            private string _name;
            private K2Scope _scope;
            private string _xmlValue;
            private string _schemaUri;
            private XMLHelper_XPathCollection _xpaths;
            #endregion

            #region Properties
            public string Name
            {
                get
                {
                    return _name;
                }
                set
                {
                    _name = value;
                }
            }
            public K2Scope Scope
            {
                get
                {
                    return _scope;
                }
                set
                {
                    _scope = value;
                }
            }
            public string XMLValue
            {
                get
                {
                    return _xmlValue;
                }
                set
                {
                    _xmlValue = value;
                }
            }
            public string SchemaUri
            {
                get
                {
                    return _schemaUri;
                }
                set
                {
                    _schemaUri = value;
                }
            }
            public XmlSchemaSet SchemaSet
            {
                get
                {
                    if (!string.IsNullOrEmpty(this.SchemaUri))
                    {
                        XmlSchemaSet set = new XmlSchemaSet();

                        XmlDocument xmldoc = new XmlDocument();
                        xmldoc.LoadXml(this.SchemaUri);

                        if(xmldoc.SelectNodes("Schemas/Schema").Count > 0)
                        {
                            foreach (XmlNode node in xmldoc.SelectNodes("Schemas/Schema"))
                            {
                                set.Add(XmlSchema.Read(new System.IO.StringReader(node.InnerText), null));
                            }
                        } 
                        else 
                        {
                            set.Add(XmlSchema.Read(new System.IO.StringReader(this.SchemaUri), null));
                        }

                        xmldoc = null;

                        return set;
                    }
                    return null;
                }
            }
            public XMLHelper_XPathCollection XPaths
            {
                get
                {
                    if (_xpaths == null)
                    {
                        _xpaths = new XMLHelper_XPathCollection();
                    }
                    return _xpaths;
                }
            }
            #endregion

            #region Methods
            //public void Update()
            //{
            //    XmlDocument doc = new XmlDocument();
            //    XmlDocument initialDoc = new XmlDocument();
                
            //    InitXml(doc, initialDoc);

            //    foreach (XMLHelper_XPath xpath in this.XPaths)
            //    {
            //        EnsureXpathExists(doc, xpath.XPath, initialDoc);
            //    }

            //    foreach (XMLHelper_XPath xpath in this.XPaths)
            //    {
            //        xpath.Update(doc, this.SchemaSet);
            //    }

            //    Validate(doc);

            //    this.XMLValue = doc.OuterXml;
            //}

            public void Update()
            {
                EnsureXmlValue();

                foreach (XMLHelper_XPath xpath in this.XPaths)
                {
                    this.XMLValue = xpath.Update(this.XMLValue, this.SchemaSet);
                }

                Validate();

            }

            private void EnsureXmlValue()
            {
                if (string.IsNullOrEmpty(this.XMLValue))
                {
                    SourceCode.Workflow.Common.Xml.XmlSampleGenerator sampleGen = new SourceCode.Workflow.Common.Xml.XmlSampleGenerator(this.SchemaSet, XmlQualifiedName.Empty);
                    sampleGen.MaxThreshold = 1;

                    using (System.IO.MemoryStream s = new System.IO.MemoryStream())
                    {
                        using (XmlTextWriter w = new XmlTextWriter(s, null))
                        {
                            w.Formatting = Formatting.Indented;
                            sampleGen.WriteXml(w);
                            s.Position = 0;

                            using (System.IO.StreamReader r = new System.IO.StreamReader(s))
                            {
                                this.XMLValue = r.ReadToEnd();
                            }
                        }
                    }

                    sampleGen = null;
                }
            }

            public void InitXml(XmlDocument xmldoc, XmlDocument initdoc)
            {
                EnsureXmlValue();

                xmldoc.LoadXml(this.XMLValue);
                xmldoc.Schemas.Add(this.SchemaSet);
                initdoc.LoadXml(this.XMLValue);
                initdoc.Schemas.Add(this.SchemaSet);

                xmldoc.DocumentElement.InnerXml = string.Empty;
               
            }

            public void EnsureXpathExists(XmlDocument doc, string xpath, XmlDocument initialDoc)
            {
                //if xpath does not exist already
                if (doc.SelectNodes(xpath).Count == 0)
                {
                    string[] attr;
                    string[] nodes;

                    attr = xpath.Split(new string[] { "/@" }, StringSplitOptions.RemoveEmptyEntries);

                    nodes = attr[0].Split(new string[] { "/*" }, StringSplitOptions.RemoveEmptyEntries);
                    
                    XmlNode par = doc.DocumentElement;
                   
                    StringBuilder builder = new StringBuilder();

                    for (int i = 0; i < nodes.Length; i++)
                    {
                        string[] s = nodes[i].Split(new char[]{'\''}, StringSplitOptions.RemoveEmptyEntries);
                        string nodeName = s[1];

                        builder.Append(string.Format(@"/*[local-name()='{0}']",s[1]));

                        XmlNode node = doc.SelectSingleNode(builder.ToString());

                        if (node == null)
                        {
                            XmlNode initialNode = initialDoc.SelectSingleNode(builder.ToString());

                            node = doc.ImportNode(initialNode, false);

                            bool found = false;

                            while (initialNode.PreviousSibling != null && !found)
                            {
                                foreach (XmlNode n in par.ChildNodes)
                                {
                                    if (n.Name == initialNode.PreviousSibling.Name)
                                    {
                                        found = true;
                                        par.InsertAfter(node, n);
                                        break;
                                    }
                                }

                                initialNode = initialNode.PreviousSibling;
                            }

                            if (!found) par.PrependChild(node);
                        }

                        par = doc.SelectSingleNode(builder.ToString());                           
                    }

                    if (attr.Length != 1)
                    {
                        XmlAttribute a = doc.CreateAttribute(attr[1]);
                        par.Attributes.Append(a);
                    }
                }
            }

            //public void Validate(XmlDocument xmldoc)
            //{
            //    xmldoc.Validate(new ValidationEventHandler(XmlDocumentValidation));
            //}

            public void Validate()
            {
                XmlDocument xmldoc = new XmlDocument();
                try
                {
                    xmldoc.LoadXml(this.XMLValue);
                    xmldoc.Schemas.Add(this.SchemaSet);

                    xmldoc.Validate(new ValidationEventHandler(XmlDocumentValidation));
                }
                finally
                {
                    xmldoc = null;
                }
            }

            private void XmlDocumentValidation(object obj, ValidationEventArgs args)
            {
                if(args.Severity == XmlSeverityType.Error)
                {
                    throw new Exception(string.Format("SmartObject Event xml validation against schema failed: {0}",args.Message));
                }
            }
            #endregion
        }

        public class XMLHelper_XPathCollection : List<XMLHelper_XPath>
        {
            #region Methods
            public XMLHelper_XPath this[string xpath]
            {
                get
                {
                    foreach (XMLHelper_XPath item in this)
                    {
                        if (String.Compare(item.XPath, xpath, true) == 0)
                        {
                            return item;
                        }
                    }
                    return null;
                }
            }
            public bool Contains(string xpath)
            {
                if (this[xpath] != null)
                {
                    return true;
                }
                return false;
            }
            #endregion
        }

        public class XMLHelper_XPath
        {
            #region Constructor
            public XMLHelper_XPath()
            {

            }
            public XMLHelper_XPath(string xpath)
                : this()
            {
                this.XPath = xpath;
            }
            #endregion

            #region Variables
            private string _xpath;
            private List<string> _values;
            #endregion

            #region Properties
            public string XPath
            {
                get
                {
                    return _xpath;
                }
                set
                {
                    _xpath = value;
                }
            }
            public List<string> Values
            {
                get
                {
                    if (_values == null)
                    {
                        _values = new List<string>();
                    }
                    return _values;
                }
            }
            #endregion

            #region Methods
            public string Update(string xmlValue, XmlSchemaSet schemaset)
            {
                string retval = string.Empty;

                XmlDocument xmldoc = new XmlDocument();
                xmldoc.Schemas.Add(schemaset);
                xmldoc.LoadXml(xmlValue);

                if (xmldoc.SelectNodes(this.XPath).Count != 0)
                {
                    while (xmldoc.SelectNodes(this.XPath).Count != this.Values.Count && xmldoc.SelectNodes(this.XPath).Count != 0)
                    {
                        XmlNodeList list = xmldoc.SelectNodes(this.XPath);
                        //Not enough Nodes for Values
                        if (list.Count < this.Values.Count)
                        {
                            if (list[0] is XmlAttribute)
                            {
                                (list[0] as XmlAttribute).OwnerElement.ParentNode.AppendChild((list[0] as XmlAttribute).OwnerElement.CloneNode(true));
                            }
                            if (list[0] is XmlElement)
                            {
                                XmlElement clonenode = null;

                                if ((list[0] as XmlElement).ParentNode != xmldoc.DocumentElement)
                                {
                                    clonenode = (XmlElement)(list[0] as XmlElement).ParentNode;
                                }
                                else
                                {
                                    clonenode = (list[0] as XmlElement);
                                }

                                clonenode.ParentNode.InsertAfter(clonenode.CloneNode(true), clonenode);

                            }

                        }
                        //Not many Nodes for Values
                        if (list.Count > this.Values.Count)
                        {
                            if (list[list.Count - 1] is XmlAttribute)
                            {
                                (list[list.Count - 1] as XmlAttribute).OwnerElement.ParentNode.RemoveChild((list[list.Count - 1] as XmlAttribute).OwnerElement);
                            }
                            if (list[list.Count - 1] is XmlElement)
                            {
                                (list[list.Count - 1] as XmlElement).ParentNode.RemoveChild(list[list.Count - 1]);
                            }
                        }

                        list = null;
                    }
                }
                else
                {
                    throw new Exception(string.Format("Unable to retrieve xpath({0}) from xml document.", this.XPath));
                }

                XmlNodeList listNodes = xmldoc.SelectNodes(this.XPath);
                for (int i = 0; i <= this.Values.Count - 1; i++)
                {
                    if (listNodes[i] is XmlAttribute)
                    {
                        listNodes[i].Value = this.Values[i];
                    }
                    if (listNodes[i] is XmlElement)
                    {
                        XPathNavigator xPathNavigator = listNodes[i].CreateNavigator();

                        if (!string.IsNullOrEmpty(this.Values[i]) && xPathNavigator.MoveToAttribute("nil", "http://www.w3.org/2001/XMLSchema-instance"))
                        {
                            xPathNavigator.DeleteSelf();
                        }

                        xPathNavigator.SetValue(this.Values[i]);
                    }
                }

                retval = xmldoc.OuterXml;

                xmldoc = null;

                return retval;
            }

            //public string Update(XmlDocument xmldoc, XmlSchemaSet schemaset)
            //{
            //    string retval = string.Empty;

            //    if (xmldoc.SelectNodes(this.XPath).Count != 0)
            //    {
            //        while (xmldoc.SelectNodes(this.XPath).Count != this.Values.Count && xmldoc.SelectNodes(this.XPath).Count != 0)
            //        {
            //            XmlNodeList list = xmldoc.SelectNodes(this.XPath);
            //            //Not enough Nodes for Values
            //            if (list.Count < this.Values.Count)
            //            {
            //                if (list[0] is XmlAttribute)
            //                {
            //                    XmlNode parent = (list[0] as XmlAttribute).OwnerElement.ParentNode;
            //                    parent.InsertBefore((list[0] as XmlAttribute).OwnerElement.CloneNode(true), parent.FirstChild);
            //                }
            //                if (list[0] is XmlElement)
            //                {
            //                    XmlElement clonenode = null;

            //                    if ((list[0] as XmlElement).ParentNode != xmldoc.DocumentElement)
            //                    {
            //                        clonenode = (XmlElement)(list[0] as XmlElement).ParentNode;
            //                    }
            //                    else
            //                    {
            //                        clonenode = (list[0] as XmlElement);
            //                    }

            //                    clonenode.ParentNode.InsertAfter(clonenode.CloneNode(true), clonenode);
            //                }
            //            }

            //            list = null;
            //        }
            //    }
            //    else
            //    {
            //        throw new Exception(string.Format("Unable to retrieve xpath({0}) from xml document.", this.XPath));
            //    }

            //    XmlNodeList listNodes = xmldoc.SelectNodes(this.XPath);
            //    for (int i = 0; i <= this.Values.Count - 1; i++)
            //    {
            //        if (listNodes[i] is XmlAttribute)
            //        {
            //            listNodes[i].Value = this.Values[i];
            //        }
            //        if (listNodes[i] is XmlElement)
            //        {
            //            XPathNavigator xPathNavigator = listNodes[i].CreateNavigator();

            //            if (!string.IsNullOrEmpty(this.Values[i]) && xPathNavigator.MoveToAttribute("nil", "http://www.w3.org/2001/XMLSchema-instance"))
            //            {
            //                xPathNavigator.DeleteSelf();
            //            }

            //            xPathNavigator.SetValue(this.Values[i]);
            //        }
            //    }
                

            //    retval = xmldoc.OuterXml;

            //    xmldoc = null;

            //    return retval;
            //}
            #endregion
        }
    }
}
]]></Content></CodeFile></CodeFiles><Guid>1480ab9e86a44eea8d8473fab80cddf9</Guid><MetaData /><Username /><CredentialGuid>00000000-0000-0000-0000-000000000000</CredentialGuid><Language>CSharp</Language></Extender><Properties Type="SourceCode.Workflow.Design.SmartFormatProperties" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Locals><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>8055b8a5e9ff4b08a4bddba06d713da6</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[update]]></Value></ValueTypePart></Parts><Guid>b53fbaa9cfd64446b0bd6d774110ac3f</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>8bfdae021bd6410382695e5882d49463</Guid><Name>MethodType</Name></Value><Guid>0c0762047c4e4d63b35af66b4f2d9888</Guid><Key>MethodType</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>8dacd3c2cdf64cc0b1daebc5c72b1c75</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[SourceCode.SmartFunctions.Syntax.Expressions.SmartObjectExp]]></Value></ValueTypePart></Parts><Guid>25a88569a0af4e478fc637b18e45088d</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>23fa41bc305f49da8b3a1955a43e6e1f</Guid><Name>Type</Name></Value><Guid>07fc267067134bf2bd579f2b3910e795</Guid><Key>Type</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>28e4c32cfe7e42f3b9350d75419da310</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[Save]]></Value></ValueTypePart></Parts><Guid>52bf49089c7a4b55b85007569ab4dddd</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>76f736c9c3044e3e83f6d19488a2ed9a</Guid><Name>MethodName</Name></Value><Guid>2ad8c1fe2c234a09b3b4d5de97f7d448</Guid><Key>MethodName</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>0164dcf774a44de4817ca22112125341</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[IPEX_NewUserAdmin_ImplementationCheckListSO]]></Value></ValueTypePart></Parts><Guid>2e13cdde50c44e94972f70eecdb95e74</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>d4cb4ded39bb40ac9d5f943211df5a3f</Guid><Name>Name</Name></Value><Guid>4481da1c15894eec8aee98e2b91e0808</Guid><Key>Name</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ArtifactLibraryFieldPart Type="SourceCode.Workflow.Design.ArtifactLibraryFieldPart" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>94d2647de35e4b95be87f754095baa06</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><FieldName>SmartObject Server</FieldName></ArtifactLibraryFieldPart></Parts><Guid>193edbad1c7440cb8279948c36a4b8bb</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>d5b4a89de4894c389096b62dcc28a1b1</Guid><Name>Server</Name></Value><Guid>20931b11c2d5420ea94dc1c1597e103a</Guid><Key>Server</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>23d74aa4588c4f7798653f6b5ebcdd7c</Guid><ValueType>System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[False]]></Value></ValueTypePart></Parts><Guid>585e1323b3254d92bdacaa5609ebb029</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>c689edafe35e47b8ba936621b11abaf7</Guid><Name>IsList</Name></Value><Guid>af74e6e523c24539a601b53cb380dda4</Guid><Key>IsList</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>035a455cb7cf48e1a9ed8c302d0c9bbe</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[Save]]></Value></ValueTypePart></Parts><Guid>6d62c726518d468593657370c866b452</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>40a5d8eeee0a462bbc6f5bcaf48f178e</Guid><Name>MethodDisplayName</Name></Value><Guid>8eef64fabd0c469c95ac34020ede25d2</Guid><Key>MethodDisplayName</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e9d0d4301892478fa631941f9b553700</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[ff35c026-dd60-40d7-b2e7-b6df619b73b6]]></Value></ValueTypePart></Parts><Guid>322333e6ef91487cb8ecc2dbbb7248aa</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>a19cdcb6d7624494a6c2653121cf452b</Guid><Name>Guid</Name></Value><Guid>a695cb417c98445388aca3f49ca71534</Guid><Key>Guid</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Local" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>8c48588a1e5940f19b82b61abdb17c08</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[IPEX.NewUserAdmin.ImplementationCheckListSO]]></Value></ValueTypePart></Parts><Guid>80ed620d01e240d893482e283c484c38</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></Value><Guid>da0d3d188ef8402c82af222d756d2770</Guid><Name>DisplayName</Name></Value><Guid>e111aaf43c784c9e852b51e15f38cbb4</Guid><Key>DisplayName</Key></PersistableObjectDictionaryEntry></Locals><Inputs><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><ValueTypePart Type="SourceCode.Workflow.Design.ValueTypePart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>89ff9fb1bf5b4cb78f424f745232b7bc</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value><![CDATA[D]]></Value></ValueTypePart></Parts><Guid>ffe3e1241e3b4c2f9768485861df3ebc</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>225a93340b9044dca593a7d23550c7b6</Guid><Name>OperationStatus</Name><DisplayName>OperationStatus</DisplayName><Type>Text</Type></Value><Guid>db820fe4bf844744a93f2cd3c4948c46</Guid><Key>OperationStatus</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>1d9330123d28496ea07f65c8bbe0a682</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>9f4b487ed40e4bd5abe05a6e191513c6</Guid><Name>OperatorEmail</Name><DisplayName>OperatorEmail</DisplayName><Type>Text</Type></Value><Guid>b4685c17949c4877aa7a0d56cda083e6</Guid><Key>OperatorEmail</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><DataFieldPart Type="SourceCode.Workflow.Design.DataFieldPart" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>d0bdb7e814654957bcd44be627b56936</Guid><ValueType>System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><Value ref="af55a3e8-ddd0-43a9-8fce-426887c56950&#xD;" /><DataFieldName>OperatorCheckListID</DataFieldName><Scope>Process</Scope><Type>Integer</Type><ListOption>None</ListOption></DataFieldPart></Parts><Guid>1d667455673341feb6490c4ebb616369</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>2edea380564d43a7aa046fe8a7fe68cd</Guid><Name>ID</Name><DisplayName>ID</DisplayName><Type>Autonumber</Type><IsUnique>1</IsUnique></Value><Guid>1249370a26594563bb918c0ae5ce0439</Guid><Key>ID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>5442f62c80fd457cbe3676b54ccf3642</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>09e8c90e73244b27b59ccd5d573f2426</Guid><Name>OperatorName</Name><DisplayName>OperatorName</DisplayName><Type>Text</Type></Value><Guid>4ed31948de0348b7a12ea069ce4a82ab</Guid><Key>OperatorName</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e39c80cb829c4101b1736350f0b24537</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>88f7f77630d5480091b0b4c83021b273</Guid><Name>RequestID</Name><DisplayName>RequestID</DisplayName><Type>Number</Type></Value><Guid>c84ea526dac245d6ba4ff204c3581942</Guid><Key>RequestID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>27284cfaa0ce49458cde1ca4913e2160</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>f628c993daa74ae9a1e71f859f9618ad</Guid><Name>OperatorComment</Name><DisplayName>OperatorComment</DisplayName><Type>Text</Type></Value><Guid>5d914dc1ed4548acb35ce17e8d2bd9eb</Guid><Key>OperatorComment</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Parts><FunctionFieldPart Type="SourceCode.Workflow.Functions.Design.FunctionFieldPart" Assembly="SourceCode.Workflow.Functions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><WizardDefinition Type="SourceCode.Workflow.Functions.Wizard.FunctionFieldPartDefinition" Assembly="SourceCode.Workflow.Functions.Wizard, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>b88e5c4970784d338d4c1985b0e750ae</Guid><Name>{280e55e8-a4e3-441e-9a84-68425ccd1ca3}</Name><RegisteredItem>Function FieldPart Wizard</RegisteredItem></WizardDefinition><Guid>c4d8838ccabb4c258e8c517e0afadbf7</Guid><ValueType>System.DateTime, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType><MethodPath>SourceCode.Workflow.Functions.DateAndTime, SourceCode.Workflow.Functions, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d|Now</MethodPath><ReturnType>System.DateTime</ReturnType><Name>Now</Name><Desc>Gets the current date and time.</Desc></FunctionFieldPart></Parts><Guid>cad8a1f2101e4206ae6478d9c2cfcb0a</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>be57e970841f4259a48f153beea91c1c</Guid><Name>OperatedTime</Name><DisplayName>OperatedTime</DisplayName><Type>DateTime</Type></Value><Guid>63f6055b6da14510b72d486168d1c403</Guid><Key>OperatedTime</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>5100611985504e7c92a2d3b9d8017cd8</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>f0fd491d9d844ac2bfda8827181ba0ba</Guid><Name>OperatorCount</Name><DisplayName>OperatorCount</DisplayName><Type>Number</Type></Value><Guid>e33accdcc1e447e7a945a94455ea4a2c</Guid><Key>OperatorCount</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>61e0a6b4f0e449e0b5b215910648275b</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>0e46c49e6f894b8b8a6e8d711fd8dbe2</Guid><Name>OperatorUserID</Name><DisplayName>OperatorUserID</DisplayName><Type>Text</Type></Value><Guid>7826713219d74ce6840aefc9ffa35e42</Guid><Key>OperatorUserID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>1c5be0a79a9045109e57c1031698310e</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>293d784b05ed4aaf828c80a2ec874937</Guid><Name>EmployeeDataID</Name><DisplayName>EmployeeDataID</DisplayName><Type>Number</Type></Value><Guid>c15ac49857e0435a9d9c07e94986a81c</Guid><Key>EmployeeDataID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>fe7cea9d9ded480db057dbe77ac94dad</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>c6a44c1f5a8a4fb5a06561f84021c057</Guid><Name>ServiceCategoryID</Name><DisplayName>ServiceCategoryID</DisplayName><Type>Number</Type></Value><Guid>4ddca3691ad04783b6126f89481003a6</Guid><Key>ServiceCategoryID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>2d60cc5e912e4f3aaa5d911d17afedcf</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>dda802e1be9948919924143d380a482e</Guid><Name>ServiceID</Name><DisplayName>ServiceID</DisplayName><Type>MultiValue</Type></Value><Guid>51651c565773436d86b3c7b756bd1b51</Guid><Key>ServiceID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>0858f4b7dcff468bbb9e2a53d0a0cd6a</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>535b1d7842d14a3f8cfb378704a81980</Guid><Name>ServiceTypeID</Name><DisplayName>ServiceTypeID</DisplayName><Type>Number</Type></Value><Guid>9a2210e8c0b9431d8b933f4a0c8afaeb</Guid><Key>ServiceTypeID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Input" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Values><K2Field Type="SourceCode.Workflow.Authoring.K2Field" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>27a4daa3d63e4c0fb14faa04f50331e3</Guid><ValueType>System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</ValueType></K2Field></Values><Guid>56c4fe24dbf942a9bdaace0f557d60a9</Guid><Name>CreatedTime</Name><DisplayName>CreatedTime</DisplayName><Type>DateTime</Type></Value><Guid>4631d0fd6c8448e0b94244c61debd322</Guid><Key>CreatedTime</Key></PersistableObjectDictionaryEntry></Inputs><Returns><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Return" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>a989f11c525b4d018ad3fdbb563f3508</Guid><Name>ID</Name><DisplayName>ID</DisplayName><Type>Autonumber</Type></Value><Guid>5c843964d5c64c2bbbc7cfe5526d77e1</Guid><Key>ID</Key></PersistableObjectDictionaryEntry></Returns><Properties><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>704fe45d183948db937805136eec04b6</Guid><Name>OperationStatus</Name><DisplayName>OperationStatus</DisplayName><Type>Text</Type></Value><Guid>319bbafeab15451d810c1fda95aa8f51</Guid><Key>OperationStatus</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>6ba62b1d60574d04b1a35abac8078d1c</Guid><Name>OperatorEmail</Name><DisplayName>OperatorEmail</DisplayName><Type>Text</Type></Value><Guid>150002d09261473bbe0a0c3694df8d0b</Guid><Key>OperatorEmail</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e63e75f67ae74bcab6b419c443cfec07</Guid><Name>ID</Name><DisplayName>ID</DisplayName><Type>Autonumber</Type><IsUnique>1</IsUnique></Value><Guid>59666d0d9dab4113a190e76ae4eaafe5</Guid><Key>ID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e3f0faeb79964df682d433312c471d6e</Guid><Name>OperatorName</Name><DisplayName>OperatorName</DisplayName><Type>Text</Type></Value><Guid>4e29152fc955441cb2053eb3e0cbc092</Guid><Key>OperatorName</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>fdb36dca8d114c0685fb98b1b7618b71</Guid><Name>RequestID</Name><DisplayName>RequestID</DisplayName><Type>Number</Type></Value><Guid>3be806fc3a3046f1a48d70a23f2ba5fc</Guid><Key>RequestID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>490792850d1943078d157204d7bf7068</Guid><Name>OperatorComment</Name><DisplayName>OperatorComment</DisplayName><Type>Text</Type></Value><Guid>596e7a3969c348f5a8919cb32caf826d</Guid><Key>OperatorComment</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>dfc43fffb3184453bbf65c80e08711d3</Guid><Name>OperatedTime</Name><DisplayName>OperatedTime</DisplayName><Type>DateTime</Type></Value><Guid>e3bde9532ab647c78bcca139b41b7fee</Guid><Key>OperatedTime</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>783b6bc8991f40bfba139f6fbb61752a</Guid><Name>OperatorCount</Name><DisplayName>OperatorCount</DisplayName><Type>Number</Type></Value><Guid>45f78d40e584454e81e4ce21428c9655</Guid><Key>OperatorCount</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>2239b87ed2f14a56a383373c32f34720</Guid><Name>OperatorUserID</Name><DisplayName>OperatorUserID</DisplayName><Type>Text</Type></Value><Guid>71699438b0214d94a03570f010ed6a97</Guid><Key>OperatorUserID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>3c8297cd2a9f4f32a3fda71cf2539d8d</Guid><Name>EmployeeDataID</Name><DisplayName>EmployeeDataID</DisplayName><Type>Number</Type></Value><Guid>3bf39c0c10614290a7da861d7cfb32dd</Guid><Key>EmployeeDataID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>2ffed853858349f7b0963041c3c6352d</Guid><Name>ServiceCategoryID</Name><DisplayName>ServiceCategoryID</DisplayName><Type>Number</Type></Value><Guid>03cafc8698e1455c895d3ebb8da850b9</Guid><Key>ServiceCategoryID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>bd4ebfcd11464cf898b107d8ff068763</Guid><Name>ServiceID</Name><DisplayName>ServiceID</DisplayName><Type>MultiValue</Type></Value><Guid>544bf56a09274040a1cabed8df885ca3</Guid><Key>ServiceID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>13d9364bc11d4c07b1e0e963219893a9</Guid><Name>ServiceTypeID</Name><DisplayName>ServiceTypeID</DisplayName><Type>Number</Type></Value><Guid>bb8898050b1349ffbb2f5944796fe305</Guid><Key>ServiceTypeID</Key></PersistableObjectDictionaryEntry><PersistableObjectDictionaryEntry Type="SourceCode.Framework.PersistableObjectDictionaryEntry" Assembly="SourceCode.Framework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Value Type="SourceCode.Workflow.Design.Property" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>ada8b587f338471c8a93b3d9cc659390</Guid><Name>CreatedTime</Name><DisplayName>CreatedTime</DisplayName><Type>DateTime</Type></Value><Guid>27f82da9ec134f4dab738c586918139e</Guid><Key>CreatedTime</Key></PersistableObjectDictionaryEntry></Properties><Guid>22fc7eb1e0654bab9602ef1fcea3958c</Guid></Properties><Guid>efa7801fcd3045989213ef6dff5dafee</Guid><MetaData /><Parent ref="e2dd322e-4e5d-46c0-a7cf-730a513ae984&#xD;" /><RunAdvanceMode>0</RunAdvanceMode></SmartObjectEventItem><PlaceholderEventItem Type="SourceCode.Workflow.Design.Placeholder.PlaceholderEventItem" Assembly="SourceCode.Workflow.Design.Placeholder, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Extender Type="SourceCode.Workflow.Design.CodeExtender" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><CodeFiles><CodeFile><Guid>535ca0716f994befa648ff50fe459734</Guid><OriginalFileName>@safeitemname@.cs</OriginalFileName><Primary>1</Primary><Content><![CDATA[using System;
using System.ComponentModel;
using System.ComponentModel.Design;
using System.Collections;
using System.Drawing;
using SourceCode.KO;
using SourceCode.Workflow.Common.Extenders;
using hostContext = Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventItemContext_a8a23be1bcb54be48fc8d5b94227afeb;
namespace ExtenderProject_fd7ed7e1f1e345d7a3a78850c91470e2
{
    public partial class EventItem_a8a23be1bcb54be48fc8d5b94227afeb : ICodeExtender<hostContext>
	{
        public void Main(Project_fd7ed7e1f1e345d7a3a78850c91470e2.EventItemContext_a8a23be1bcb54be48fc8d5b94227afeb K2)
        {
            
        }
    }
} 
]]></Content></CodeFile></CodeFiles><Guid>a8a23be1bcb54be48fc8d5b94227afeb</Guid><MetaData /><Username /><CredentialGuid>00000000-0000-0000-0000-000000000000</CredentialGuid><ContextMode>CustomContext</ContextMode><Language>CSharp</Language></Extender><Guid>4cc9a0902ff34e869f04f2296b07c11f</Guid><MetaData /><Parent ref="1e6be7da-b378-44c3-915d-0cbce4e88647&#xD;" /></PlaceholderEventItem></ExecutableItems><Guid>68f0755ef44c4ea1a0dfcd7904e19e25</Guid><Name>Default</Name><Description>This represents the default execution layer for the process.</Description></ExecutionLayer></ExecutionLayers><Lines><Line Type="SourceCode.Workflow.Design.DefaultLine" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><WizardDefinition Type="SourceCode.Workflow.Design.DefaultLineWizardDefinition" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><PropertyWizardDefinitions><PropertyWizardDefinition Type="SourceCode.Workflow.Design.GeneralProperties.GeneralPropertiesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>f849945a34464c3da936e84bdfdbb561</Guid><Name>{b2d214ef-b2e6-4d5c-8b2e-ae4b66ea7c75}</Name><RegisteredItem>Line General Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimpleLineRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>406ce168927647bb9424a0bee1d14cba</Guid><Name>{b77fa932-a961-408a-a536-016e76ea0125}</Name><RegisteredItem>E050F697-C765-4b55-A7BA-E9E0F05CBF32</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Exceptions.ExceptionPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>73d1e2c5ceed490da557ed219e8f7efa</Guid><Name>{731fbbf2-8385-4948-b817-8ae2fb6a3370}</Name><RegisteredItem>Exception Rule</RegisteredItem></PropertyWizardDefinition></PropertyWizardDefinitions><Guid>9ef76644cdcb4845be54632bffd5b70c</Guid><Name /><Status>Executed</Status><RegisteredItem>Default Line Wizard</RegisteredItem></WizardDefinition><Guid>105e3e66a41d4690833a195bff1f512e</Guid><Name>DefaultLine</Name><StartActivity>Start</StartActivity><FinishActivity>UAA - Operator Task</FinishActivity></Line><Line Type="SourceCode.Workflow.Design.DefaultLine" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><WizardDefinition Type="SourceCode.Workflow.Design.DefaultLineWizardDefinition" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><PropertyWizardDefinitions><PropertyWizardDefinition Type="SourceCode.Workflow.Design.GeneralProperties.GeneralPropertiesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>b66452d52abc4a87a8058224d39dd332</Guid><Name>{f58fd998-509d-4fe9-a764-4b57bdc23ca3}</Name><RegisteredItem>Line General Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimpleLineRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>579ab38c6bf2433d96e3622f29bd95e4</Guid><Name>{d15f1f3f-06c8-4a54-9744-dd1277a99056}</Name><RegisteredItem>E050F697-C765-4b55-A7BA-E9E0F05CBF32</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Exceptions.ExceptionPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>b3b6d4beba2a4c08b637d8384bce29c8</Guid><Name>{5cdc80e3-3103-4292-b769-9b1fc0145fca}</Name><RegisteredItem>Exception Rule</RegisteredItem></PropertyWizardDefinition></PropertyWizardDefinitions><Guid>6ec74d34253b4d56b7a2151343325527</Guid><Name /><Status>Executed</Status><RegisteredItem>Default Line Wizard</RegisteredItem></WizardDefinition><Guid>c0afc97c19bf4422aff23187f145ddc4</Guid><Name>Cancel</Name><Description>Default Line generated originally from the Cancel Outcome.</Description><MetaData>Cancel</MetaData><LineRuleGuid>e7b75f4d-947e-44ff-967d-ba874806df7d</LineRuleGuid><ExceptionGuid>00000000-0000-0000-0000-000000000000</ExceptionGuid><StartActivity>UAA - Operator Task</StartActivity><FinishActivity>UAA - Cancel Activity</FinishActivity></Line><Line Type="SourceCode.Workflow.Design.DefaultLine" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><WizardDefinition Type="SourceCode.Workflow.Design.DefaultLineWizardDefinition" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><PropertyWizardDefinitions><PropertyWizardDefinition Type="SourceCode.Workflow.Design.GeneralProperties.GeneralPropertiesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>4ff1142dd5604ba19fd48e3e3be50100</Guid><Name>{2f9a423d-1ee3-48f5-b367-c49fd71525d8}</Name><RegisteredItem>Line General Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimpleLineRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>422815045a6c4eb89095a6e69eb7d955</Guid><Name>{80bfa038-b9d5-47ed-8387-093bed6cd3b4}</Name><RegisteredItem>E050F697-C765-4b55-A7BA-E9E0F05CBF32</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Exceptions.ExceptionPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>5ef731ef03204987bdf162c055507178</Guid><Name>{f1f19592-12a9-4e72-8dbd-704ec6dee6ad}</Name><RegisteredItem>Exception Rule</RegisteredItem></PropertyWizardDefinition></PropertyWizardDefinitions><Guid>79722f0d00ed4227b1fea64ec8ee8ef9</Guid><Name /><Status>Executed</Status><RegisteredItem>Default Line Wizard</RegisteredItem></WizardDefinition><Guid>566809547292488da578c15e1336182f</Guid><Name>Done</Name><Description>Default Line generated originally from the Complete Outcome.</Description><MetaData>Done</MetaData><LineRuleGuid>66a3049d-5708-452b-8ada-ec72cfe951be</LineRuleGuid><ExceptionGuid>00000000-0000-0000-0000-000000000000</ExceptionGuid><StartActivity>UAA - Operator Task</StartActivity><FinishActivity>UAA - Complete Activity</FinishActivity></Line><Line Type="SourceCode.Workflow.Design.DefaultLine" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><WizardDefinition Type="SourceCode.Workflow.Design.DefaultLineWizardDefinition" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><PropertyWizardDefinitions><PropertyWizardDefinition Type="SourceCode.Workflow.Design.GeneralProperties.GeneralPropertiesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e3b5209aa3894fe5a66f0dd769f73eae</Guid><Name>{917c4c0d-ac6a-44b4-8679-b74bd20ec9a0}</Name><RegisteredItem>Line General Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimpleLineRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>853b39af307d444dbc81650433013d39</Guid><Name>{7faf2977-0bc6-4d10-ae0a-8c14526b6e86}</Name><RegisteredItem>E050F697-C765-4b55-A7BA-E9E0F05CBF32</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Exceptions.ExceptionPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>d874a5e3768b43b0829c92a629adccce</Guid><Name>{19df23ea-f966-49ac-8c66-f6e9c3fb15a3}</Name><RegisteredItem>Exception Rule</RegisteredItem></PropertyWizardDefinition></PropertyWizardDefinitions><Guid>707a5090964e4164a9f4ced65d549de0</Guid><Name /><Status>Executed</Status><RegisteredItem>Default Line Wizard</RegisteredItem></WizardDefinition><Guid>8c9537ad93b04c7f8bec48fe3bc4be7d</Guid><Name>DefaultLine1</Name><StartActivity>UAA - Operator Task</StartActivity><FinishActivity>UAA - The End</FinishActivity></Line></Lines><Activities><Activity Type="SourceCode.Workflow.Design.DefaultActivity" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Events><Event Type="SourceCode.Workflow.Design.SmartObjects.SmartObjectEvent" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><WizardDefinition Type="SourceCode.Workflow.Design.SmartObjects.SmartObjectWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><PropertyWizardDefinitions><PropertyWizardDefinition Type="SourceCode.Workflow.Design.GeneralProperties.GeneralPropertiesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>3d9f783cce844837a6dd28bd15616a35</Guid><Name>{5c737fae-3e8a-4a0a-8232-5ffbea20e073}</Name><RegisteredItem>Event General Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SmartObjects.SmartObjectPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>3f196b354c924ce1aa406e3b293e62a3</Guid><Name>{52430435-af1a-4728-86ef-45d060cd4107}</Name><RegisteredItem>SmartObject Event Item Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Exceptions.ExceptionPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>52a0abb5255b4a2b86550e8c2a2dd02d</Guid><Name>{91aa93a5-00f7-479a-ab98-4fd5f149bc88}</Name><RegisteredItem>Exception Rule</RegisteredItem></PropertyWizardDefinition></PropertyWizardDefinitions><Guid>e85b7a48ff354825823ef24fa0300f3d</Guid><Name /><Status>Executed</Status><RegisteredItem>SmartObject Event Wizard</RegisteredItem></WizardDefinition><Guid>a8fb599ea3ed40049635e060ea71d7ae</Guid><Name>SOE UpdateOperationStatus</Name><EventItemGuid>7ed1c560-9617-4583-87c5-c6e0b4f328ac</EventItemGuid></Event><Event Type="SourceCode.Workflow.Design.Mail.MailEvent" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><WizardDefinition Type="SourceCode.Workflow.Design.Mail.MailWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><PropertyWizardDefinitions><PropertyWizardDefinition Type="SourceCode.Workflow.Design.GeneralProperties.GeneralPropertiesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>89c642bf17ff4cc5becc4d84421f3190</Guid><Name>{09ff5d9f-daf9-4c8a-bb5b-584cdee5ce63}</Name><RegisteredItem>Event General Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Mail.MailPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>8ae06e43ed6944d49c8b4d3661757c85</Guid><Name>{610bd3f4-8188-4a3e-9304-396bdb664709}</Name><RegisteredItem>Mail Event Item Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Exceptions.ExceptionPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>c9c115fd02134332800e435d923330e1</Guid><Name>{76434d75-7b89-42a0-9e25-1aad37afadb0}</Name><RegisteredItem>Exception Rule</RegisteredItem></PropertyWizardDefinition></PropertyWizardDefinitions><Guid>15a11ccd23964e9b96a89f025299929c</Guid><Name>{799eec5c-a323-4d99-9738-1083715ab32e}</Name><Status>Executed</Status><RegisteredItem>Mail Event Wizard</RegisteredItem></WizardDefinition><Guid>b3cce48ff7ce4067b8bab2cb92a0d562</Guid><Name>MailEvent Cancelled</Name><EventItemGuid>b2bded5f-4180-42ff-b013-32c5b6fe6bf1</EventItemGuid></Event></Events><WizardDefinition Type="SourceCode.Workflow.Design.DefaultActivityWizardDefinition" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><PropertyWizardDefinitions><PropertyWizardDefinition Type="SourceCode.Workflow.Design.GeneralProperties.GeneralPropertiesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>1d6b61200c82455387f0816fc4e8e492</Guid><Name>{191dbefe-816c-49a8-95d3-05530fe9020c}</Name><RegisteredItem>Activity General Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimplePrecedingRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>ad8dcd6760fe46f88f59daf67722e5fc</Guid><Name>{a8a88e84-33a1-4d7c-9a86-0e14e330e212}</Name><RegisteredItem>192BEB05-2569-4e44-BFB4-7ED57C3EC768</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimpleActivityStartRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>6b77a78708e64b7086744d51b761475b</Guid><Name>{7878cab2-05fd-4194-8a89-1bce456cdcb6}</Name><RegisteredItem>53BDF237-B878-4829-8A81-255E05CCBFA9</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimpleDestinationRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>86b2ea868049431184ea5a3c2c496ca4</Guid><Name>{802d0023-d5c0-460f-bb57-61bfe90085ab}</Name><RegisteredItem>AAE10A29-8F80-4934-9623-0A1C4FA4FD09</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimpleSucceedingRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>2ab5d9bf88064cf5a792a4b8e7efd7bb</Guid><Name>{a97cd8b0-ecda-4942-bda3-ba98c7783658}</Name><RegisteredItem>D432E2E2-E5EC-476a-9647-B30702805FBF</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Escalations.EscalationPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>8aab6f1c070f4318a36bb08ecba4ba90</Guid><Name>{2c5b628f-3360-4748-8508-ba8a4b8e808e}</Name><RegisteredItem>Activity Escalations</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Exceptions.ExceptionPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>9de94dced23c49db9094ecd5cb93e021</Guid><Name>{67fcf447-26c0-44b2-b326-ed57121d231c}</Name><RegisteredItem>Exception Rule</RegisteredItem></PropertyWizardDefinition></PropertyWizardDefinitions><Guid>b296f39a86df4853b0518b3cf902ce8e</Guid><Name>{58c6b537-f6e6-4dd1-b693-a6fb1e832761}</Name><Status>Executed</Status><RegisteredItem>Default Activity Wizard</RegisteredItem></WizardDefinition><Guid>097334abb3834c758c563741d549d394</Guid><Name>UAA - Cancel Activity</Name><Slots>1</Slots><Type>SingleInstance</Type></Activity><Activity Type="SourceCode.Workflow.Design.DefaultActivity" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Events><Event Type="SourceCode.Workflow.Design.SmartObjects.SmartObjectEvent" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><WizardDefinition Type="SourceCode.Workflow.Design.SmartObjects.SmartObjectWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><PropertyWizardDefinitions><PropertyWizardDefinition Type="SourceCode.Workflow.Design.GeneralProperties.GeneralPropertiesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>035c5ddb20b3411bbc4bc1450b42217f</Guid><Name>{70d5b161-caf9-4e01-9b8f-19e18b084a3f}</Name><RegisteredItem>Event General Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SmartObjects.SmartObjectPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>c6ad166e676f477f83b0bed4a1deb347</Guid><Name>{78ee12ae-193b-4645-bd20-4b5d5f075130}</Name><RegisteredItem>SmartObject Event Item Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Exceptions.ExceptionPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>9076d4b9274f4dcbb357e70a8cc73106</Guid><Name>{41ca57e7-bba8-4af3-954a-e2fc9507aeaf}</Name><RegisteredItem>Exception Rule</RegisteredItem></PropertyWizardDefinition></PropertyWizardDefinitions><Guid>5afdd9d3d86043028ef72083c1f8d1c2</Guid><Name>{b90f6cd3-33f9-4f30-9a59-59988a466fa3}</Name><Status>Executed</Status><RegisteredItem>SmartObject Event Wizard</RegisteredItem></WizardDefinition><Guid>e2dd322e4e5d46c0a7cf730a513ae984</Guid><Name>SOE UpdateOperationStatus</Name><EventItemGuid>efa7801f-cd30-4598-9213-ef6dff5dafee</EventItemGuid></Event><Event Type="SourceCode.Workflow.Design.Mail.MailEvent" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><WizardDefinition Type="SourceCode.Workflow.Design.Mail.MailWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><PropertyWizardDefinitions><PropertyWizardDefinition Type="SourceCode.Workflow.Design.GeneralProperties.GeneralPropertiesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>ceb89f7a3e1542c190d60c8578f6266b</Guid><Name>{9c79a159-6022-4b76-aa8d-56ad41465cd3}</Name><RegisteredItem>Event General Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Mail.MailPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>fd90a8464a0a407e8b48bc7a3b05f871</Guid><Name>{82cc6667-0ed5-4642-9c57-78099cb1abe6}</Name><RegisteredItem>Mail Event Item Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Exceptions.ExceptionPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>35a34b2fd3b2496bbcd158c4cf3b29ca</Guid><Name>{1fb8d255-5b89-4592-b21e-527874cf7ccb}</Name><RegisteredItem>Exception Rule</RegisteredItem></PropertyWizardDefinition></PropertyWizardDefinitions><Guid>bbaeb8d9f0cf42c78080a0a7e7312851</Guid><Name>{b9e2d83e-e3a5-44db-bcaa-a98f40b70caf}</Name><Status>Executed</Status><RegisteredItem>Mail Event Wizard</RegisteredItem></WizardDefinition><Guid>9837affbaa7e4ccebf8faf5f1d32b33e</Guid><Name>MailEvent Completed</Name><EventItemGuid>fac78542-324f-4f4f-9c7d-9263a7a6714e</EventItemGuid></Event></Events><WizardDefinition Type="SourceCode.Workflow.Design.DefaultActivityWizardDefinition" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><PropertyWizardDefinitions><PropertyWizardDefinition Type="SourceCode.Workflow.Design.GeneralProperties.GeneralPropertiesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>c5957e9feca048b39ad730a1d7d10684</Guid><Name>{53c61d34-95dc-4b83-b7a8-00e150a26b22}</Name><RegisteredItem>Activity General Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimplePrecedingRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>ae20d79cb69c43ac83283052e267b40c</Guid><Name>{b674704f-99b4-4292-bc79-93c2b1593525}</Name><RegisteredItem>192BEB05-2569-4e44-BFB4-7ED57C3EC768</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimpleActivityStartRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>4499373d789a4bbfb8f26683d1ea0e05</Guid><Name>{2d5e2b4a-2e5a-435b-8586-f0d3ffda8fee}</Name><RegisteredItem>53BDF237-B878-4829-8A81-255E05CCBFA9</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimpleDestinationRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>76e8355c90a34ac5837c1cd11d1f6c6a</Guid><Name>{075733ea-efff-492b-a880-b87eb21fb7be}</Name><RegisteredItem>AAE10A29-8F80-4934-9623-0A1C4FA4FD09</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimpleSucceedingRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>094a1871947743a298563d8fc9bac702</Guid><Name>{91662fd4-099c-4376-8693-955808049a89}</Name><RegisteredItem>D432E2E2-E5EC-476a-9647-B30702805FBF</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Escalations.EscalationPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>a9cb4a7abc8b4a5f84d0f9d7f9f4a645</Guid><Name>{4afea291-7752-4495-a062-c44dd52d5b57}</Name><RegisteredItem>Activity Escalations</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Exceptions.ExceptionPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>ea788bbabf9345f0b3134553eb72e599</Guid><Name>{11d8c18e-8804-4e08-9676-968b8557a753}</Name><RegisteredItem>Exception Rule</RegisteredItem></PropertyWizardDefinition></PropertyWizardDefinitions><Guid>6372e9a4c42842e4baaab8384ff3a358</Guid><Name>{6c70e05e-e635-47af-b8e5-a48db3e47553}</Name><Status>Executed</Status><RegisteredItem>Default Activity Wizard</RegisteredItem></WizardDefinition><Guid>f69ba30d6b504074a375798bc3132712</Guid><Name>UAA - Complete Activity</Name><Slots>1</Slots><Type>SingleInstance</Type></Activity><Activity Type="SourceCode.Workflow.Design.DefaultActivity" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><DataFields><DataField Type="SourceCode.Workflow.Authoring.DataField" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>c367ff8bb72c49da9e2d38d73d204f59</Guid><Name>Action Result</Name><Hidden>1</Hidden><OnDemand>0</OnDemand><Type>String</Type><Scope>Destination</Scope><Category>Outcomes</Category><Value /></DataField><DataField Type="SourceCode.Workflow.Authoring.DataField" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>7ea3a205533b487d9fc5cbce9831c7e8</Guid><Name>Outcome</Name><Hidden>1</Hidden><OnDemand>0</OnDemand><Type>String</Type><Scope>Activity</Scope><Category>Outcomes</Category></DataField></DataFields><Events><Event Type="SourceCode.Workflow.Design.ClientEvent" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Actions><EventAction Type="SourceCode.Workflow.Authoring.EventAction" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>11d52706336a4f10b75f74ced455222d</Guid><Name>Done</Name><ActionItemGuid>e9f6db1d-4229-450f-8461-99a25d9626f3</ActionItemGuid><BatchProcessed>1</BatchProcessed></EventAction><EventAction Type="SourceCode.Workflow.Authoring.EventAction" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>abaa735472c94492961c8e4a8c27f813</Guid><Name>Cancel</Name><ActionItemGuid>6ed76a95-85bf-442c-9135-d1fd6c4d082c</ActionItemGuid><BatchProcessed>1</BatchProcessed></EventAction></Actions><WizardDefinition Type="SourceCode.Workflow.Design.DefaultClientWizardDefinition" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><PropertyWizardDefinitions><PropertyWizardDefinition Type="SourceCode.Workflow.Design.GeneralProperties.GeneralPropertiesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>700ca726912441b2971c553001b97b53</Guid><Name>{d2050c88-df61-48d6-a9d7-2a1a8b8b66d7}</Name><RegisteredItem>Event General Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.DefaultClientPropertyWizardDefinition" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>6f3f528bf583478dbf293b780395ee8c</Guid><Name>{7fecf246-0b56-42e0-bd97-e425043bb34f}</Name><RegisteredItem>Client Event Item Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Outcome.OutcomePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>a209032f0cc14d3ba5859c5d1a32b481</Guid><Name>{af0dc5e3-2dd7-451a-8a00-a7687c6f2452}</Name><RegisteredItem>Event Actions and Outcome Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Escalations.EscalationPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>a07db066fa854f25b61d4b678b028cb6</Guid><Name>{c5a97f91-6760-4d12-af1d-95a2db217151}</Name><RegisteredItem>Event Escalations</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Exceptions.ExceptionPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>b41b4446ef6e4b71bdce72413a1874f6</Guid><Name>{bd7867ae-f59f-4ce3-8817-aba0dc4a709d}</Name><RegisteredItem>Exception Rule</RegisteredItem></PropertyWizardDefinition></PropertyWizardDefinitions><Guid>435fb726da2948bfa7f35f2c4521f761</Guid><Name>{2c982ccb-786b-4dc5-8f54-c1055c45f2c0}</Name><Status>Executed</Status><RegisteredItem>Default Client Event Wizard</RegisteredItem></WizardDefinition><Guid>502fc7acd03444c18717dbf75bf541dc</Guid><Name>Operator Action</Name><EventItemGuid>f4f6598d-1c6f-4ab3-818b-c87dda050b75</EventItemGuid><SucceedingRuleGuid>37c2cef9-7425-40a0-86d2-97596fc05aa7</SucceedingRuleGuid><Type>Client</Type></Event></Events><WizardDefinition Type="SourceCode.Workflow.Design.DefaultActivityWizardDefinition" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><PropertyWizardDefinitions><PropertyWizardDefinition Type="SourceCode.Workflow.Design.GeneralProperties.GeneralPropertiesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>1a591249149d42eab72eb5f88674df17</Guid><Name>{75069076-d1ca-4898-b942-8255e4752984}</Name><RegisteredItem>Activity General Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimplePrecedingRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>3794f8732144407d984ec9b347f4269c</Guid><Name>{f3b74c5b-500a-4de0-a8db-c6975cf9692a}</Name><RegisteredItem>192BEB05-2569-4e44-BFB4-7ED57C3EC768</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimpleActivityStartRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>1a5b22c5e95a403392bcd09b7ee018e9</Guid><Name>{69683ae3-7bec-4d5e-ae72-fafe9b1114ca}</Name><RegisteredItem>53BDF237-B878-4829-8A81-255E05CCBFA9</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimpleDestinationRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>96f22601fc7c432b8606263b6f2a330e</Guid><Name>{2e8fa4aa-1cfc-4b1b-80f7-9b5dfd8671f1}</Name><RegisteredItem>AAE10A29-8F80-4934-9623-0A1C4FA4FD09</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Escalations.EscalationPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>a71282beffb24125b7788ced30475599</Guid><Name>{9a1daa0e-90a3-42ca-9ede-6a6647f7d751}</Name><RegisteredItem>Activity Escalations</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Exceptions.ExceptionPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>3b31b607b7d240538c58e57e79f73205</Guid><Name>{3cef6b3d-379f-4d7a-892f-40d7a22c5ed2}</Name><RegisteredItem>Exception Rule</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Outcome.OutcomeSucceedingRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>c7a8f75d68224dcd8197c24809c0e280</Guid><Name>{83066315-55a8-4e7c-b590-25a4e59da00f}</Name><RegisteredItem>C76701EE-F9D5-40f8-AD2B-0E954A21DF3D</RegisteredItem></PropertyWizardDefinition></PropertyWizardDefinitions><Guid>230fdbe3c4c447c48bfd5a25e8e20076</Guid><Name>{0c0c8493-09e2-4bda-bad5-0f5ae4bff4fc}</Name><Status>Executed</Status><RegisteredItem>Default Activity Wizard</RegisteredItem></WizardDefinition><Guid>36ca722e34894325aa7aff1331db725d</Guid><Name>UAA - Operator Task</Name><Slots>1</Slots><Type>SingleInstance</Type><DestinationRuleGuid>809f287d-f41b-46b5-a05b-218a184449d0</DestinationRuleGuid><PrecedingRuleGuid>a18a2896-ff18-4aa8-9580-33d0bacf0dec</PrecedingRuleGuid><StartRuleGuid>f4389cac-9929-4555-a2a4-684897c20237</StartRuleGuid><SucceedingRuleGuid>2ddbddda-d003-40c2-8f1f-ffb23f9159de</SucceedingRuleGuid></Activity><Activity Type="SourceCode.Workflow.Design.DefaultActivity" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Events><Event Type="SourceCode.Workflow.Design.Placeholder.PlaceholderEvent" Assembly="SourceCode.Workflow.Design.Placeholder, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><WizardDefinition Type="SourceCode.Workflow.Design.Placeholder.PlaceholderWizardDefinition" Assembly="SourceCode.Workflow.Design.Placeholder, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><PropertyWizardDefinitions><PropertyWizardDefinition Type="SourceCode.Workflow.Design.GeneralProperties.GeneralPropertiesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>274095b892654777b92b3fdd8e8dd8ea</Guid><Name>{afe8bada-2cff-4cd5-a8a8-8d6910b37fcd}</Name><RegisteredItem>Event General Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Exceptions.ExceptionPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e8c0fae099c84ee486adef53c6925b0a</Guid><Name>{6e11ff56-b1aa-48f3-9464-7beb8aa495f3}</Name><RegisteredItem>Exception Rule</RegisteredItem></PropertyWizardDefinition></PropertyWizardDefinitions><Guid>f2d7e7bd66ee4c0aa9d732a7063375f6</Guid><Name /><Status>Executed</Status><RegisteredItem>Placeholder Event Wizard</RegisteredItem></WizardDefinition><Guid>1e6be7dab37844c3915d0cbce4e88647</Guid><Name>PlaceholderEvent</Name><EventItemGuid>4cc9a090-2ff3-4e86-9f04-f2296b07c11f</EventItemGuid></Event></Events><WizardDefinition Type="SourceCode.Workflow.Design.DefaultActivityWizardDefinition" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><PropertyWizardDefinitions><PropertyWizardDefinition Type="SourceCode.Workflow.Design.GeneralProperties.GeneralPropertiesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>3a7741c0564043f79c219a7529d9c64d</Guid><Name>{031d1ff8-b540-4b82-a377-351d07a553b1}</Name><RegisteredItem>Activity General Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimplePrecedingRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>43f79c94983840c4a8148cac2b2d966a</Guid><Name>{2fd0ecce-e5eb-4aab-8d29-249764942074}</Name><RegisteredItem>192BEB05-2569-4e44-BFB4-7ED57C3EC768</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimpleActivityStartRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>55bb69ba098245bd84dfbc7a708d915e</Guid><Name>{e0cf7ebf-07f3-4cfe-b77a-2ee292d1af89}</Name><RegisteredItem>53BDF237-B878-4829-8A81-255E05CCBFA9</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimpleDestinationRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e6fb1ba7209f4934a74d5bc94d0a6eca</Guid><Name>{fcc03f91-5cbe-48a2-bf72-83876f84ed1e}</Name><RegisteredItem>AAE10A29-8F80-4934-9623-0A1C4FA4FD09</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.SimpleRules.SimpleSucceedingRulePropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>7610d6551df14c429bc3835031b0a003</Guid><Name>{c0d020f0-08e9-4e7d-ae34-ffcbb1e5023e}</Name><RegisteredItem>D432E2E2-E5EC-476a-9647-B30702805FBF</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Escalations.EscalationPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>3267e08a764d48958aef61ce0ae7caad</Guid><Name>{530e1111-c027-48f4-8d56-85512da0ff0c}</Name><RegisteredItem>Activity Escalations</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Exceptions.ExceptionPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>c694955a76204f5c87d53770cf4fa4e1</Guid><Name>{320995bc-9038-4c0d-963e-7677f10e6564}</Name><RegisteredItem>Exception Rule</RegisteredItem></PropertyWizardDefinition></PropertyWizardDefinitions><Guid>aab276ce019a4467af682ca05edb1981</Guid><Name /><Status>Executed</Status><RegisteredItem>Default Activity Wizard</RegisteredItem></WizardDefinition><Guid>f16b396a12c344eeb2a7dabab4fa4121</Guid><Name>UAA - The End</Name><Slots>1</Slots><Type>SingleInstance</Type></Activity></Activities><StartActivity><Guid>454932ca0430401684a7434300bba96a</Guid><Name>Start</Name><Type>SingleInstance</Type></StartActivity><DataFields><DataField Type="SourceCode.Workflow.Authoring.DataField" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>592a1b65295d40a0b27f98e118954517</Guid><Name>RequestID</Name><Type>Long</Type><Scope>Process</Scope><Category>None</Category><Value>0</Value></DataField><DataField Type="SourceCode.Workflow.Authoring.DataField" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>8ab835da4f4e4ad49d906dabd57a7fc8</Guid><Name>EmployeeFullName</Name><Type>String</Type><Scope>Process</Scope><Category>None</Category><Value /></DataField><DataField Type="SourceCode.Workflow.Authoring.DataField" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>a5d4ee3c589646d18cfbc639b9c157ce</Guid><Name>OperatorCount</Name><Type>Long</Type><Scope>Process</Scope><Category>None</Category><Value>0</Value></DataField><DataField Type="SourceCode.Workflow.Authoring.DataField" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>af55a3e8ddd043a98fce426887c56950</Guid><Name>OperatorCheckListID</Name><Type>Integer</Type><Scope>Process</Scope><Category>None</Category><Value>0</Value></DataField><DataField Type="SourceCode.Workflow.Authoring.DataField" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>39f60ea55d8449409a5d2222c48bd288</Guid><Name>RequestServiceTypeID</Name><Type>Long</Type><Scope>Process</Scope><Category>None</Category><Value>0</Value></DataField><DataField Type="SourceCode.Workflow.Authoring.DataField" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>8ef45b7cd39f4b35a6dcb4a9f9301aed</Guid><Name>RequestServiceTypeName</Name><Type>String</Type><Scope>Process</Scope><Category>None</Category><Value /></DataField><DataField Type="SourceCode.Workflow.Authoring.DataField" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>dbaea8d427734b359e0cffe671fdafff</Guid><Name>OperatorUserID</Name><Type>String</Type><Scope>Process</Scope><Category>None</Category><Value /></DataField><DataField Type="SourceCode.Workflow.Authoring.DataField" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>3b2a57a45a5e41cca64eb03ec2da18e9</Guid><Name>OperatorName</Name><Type>String</Type><Scope>Process</Scope><Category>None</Category><Value /></DataField></DataFields><Views><ProcessView Type="SourceCode.Workflow.Design.ProcessView" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><ActivitiesLayoutData><ProcessViewActivityLayoutData Type="SourceCode.Workflow.Design.ProcessViewActivityLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>9fe9f600485c4f26a3cfc8a95a042359</Guid><Width>190</Width><Height>40</Height><X>464</X><Y>48</Y><Name>{454932ca-0430-4016-84a7-434300bba96a}</Name><MainColorR>166</MainColorR><MainColorG>166</MainColorG><MainColorB>166</MainColorB><ButtonsColorR>1</ButtonsColorR><ButtonsColorG>97</ButtonsColorG><ButtonsColorB>154</ButtonsColorB><SelectionColorR>0</SelectionColorR><SelectionColorG>0</SelectionColorG><SelectionColorB>0</SelectionColorB><IsMinimizedLabelVisible>1</IsMinimizedLabelVisible></ProcessViewActivityLayoutData><ProcessViewActivityLayoutData Type="SourceCode.Workflow.Design.ProcessViewActivityLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><EventsLayoutData><ProcessViewEventLayoutData Type="SourceCode.Workflow.Design.ProcessViewEventLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>bac6135b5b344325b54aaa686a85869b</Guid><Name>{b3cce48f-f7ce-4067-b8ba-b2cb92a0d562}</Name></ProcessViewEventLayoutData><ProcessViewEventLayoutData Type="SourceCode.Workflow.Design.ProcessViewEventLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>bbe5d1b5561347dd9b653ffa3c94f24a</Guid><Name>{a8fb599e-a3ed-4004-9635-e060ea71d7ae}</Name></ProcessViewEventLayoutData></EventsLayoutData><Guid>1052516ca362427f99ccece9eae00bf9</Guid><Width>190</Width><Height>48</Height><X>128</X><Y>192</Y><Name>{097334ab-b383-4c75-8c56-3741d549d394}</Name><MainColorR>166</MainColorR><MainColorG>166</MainColorG><MainColorB>166</MainColorB><FontColorR>0</FontColorR><FontColorG>0</FontColorG><FontColorB>0</FontColorB><ButtonsColorR>1</ButtonsColorR><ButtonsColorG>97</ButtonsColorG><ButtonsColorB>154</ButtonsColorB><SelectionColorR>0</SelectionColorR><SelectionColorG>0</SelectionColorG><SelectionColorB>0</SelectionColorB><IsEventStripOpen>1</IsEventStripOpen><IsMinimizedLabelVisible>1</IsMinimizedLabelVisible></ProcessViewActivityLayoutData><ProcessViewActivityLayoutData Type="SourceCode.Workflow.Design.ProcessViewActivityLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><EventsLayoutData><ProcessViewEventLayoutData Type="SourceCode.Workflow.Design.ProcessViewEventLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>8b030165438c4df795481087c3cae7a5</Guid><Name>{9837affb-aa7e-4cce-bf8f-af5f1d32b33e}</Name></ProcessViewEventLayoutData><ProcessViewEventLayoutData Type="SourceCode.Workflow.Design.ProcessViewEventLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>f239eb1aef6446029ef7adc8ce36c618</Guid><Name>{e952ef1c-1a6e-4c8c-a29b-e2120d7619c7}</Name></ProcessViewEventLayoutData><ProcessViewEventLayoutData Type="SourceCode.Workflow.Design.ProcessViewEventLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>7d5b046829414013a877f2292d49e29f</Guid><Name>{e2dd322e-4e5d-46c0-a7cf-730a513ae984}</Name></ProcessViewEventLayoutData></EventsLayoutData><Guid>95393dd576114664a2cb6964d09ce888</Guid><Width>190</Width><Height>48</Height><X>800</X><Y>192</Y><Name>{f69ba30d-6b50-4074-a375-798bc3132712}</Name><MainColorR>166</MainColorR><MainColorG>166</MainColorG><MainColorB>166</MainColorB><FontColorR>0</FontColorR><FontColorG>0</FontColorG><FontColorB>0</FontColorB><ButtonsColorR>1</ButtonsColorR><ButtonsColorG>97</ButtonsColorG><ButtonsColorB>154</ButtonsColorB><SelectionColorR>0</SelectionColorR><SelectionColorG>0</SelectionColorG><SelectionColorB>0</SelectionColorB><IsEventStripOpen>1</IsEventStripOpen><IsMinimizedLabelVisible>1</IsMinimizedLabelVisible></ProcessViewActivityLayoutData><ProcessViewActivityLayoutData Type="SourceCode.Workflow.Design.ProcessViewActivityLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><EventsLayoutData><ProcessViewEventLayoutData Type="SourceCode.Workflow.Design.ProcessViewEventLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>4a101c76dfb345bb999e1e0b9587df21</Guid><Name>{502fc7ac-d034-44c1-8717-dbf75bf541dc}</Name></ProcessViewEventLayoutData></EventsLayoutData><Guid>e092c8f46abf41439e62ad33ea23ebaf</Guid><Width>190</Width><Height>48</Height><X>464</X><Y>192</Y><Name>{36ca722e-3489-4325-aa7a-ff1331db725d}</Name><MainColorR>166</MainColorR><MainColorG>166</MainColorG><MainColorB>166</MainColorB><FontColorR>0</FontColorR><FontColorG>0</FontColorG><FontColorB>0</FontColorB><ButtonsColorR>1</ButtonsColorR><ButtonsColorG>97</ButtonsColorG><ButtonsColorB>154</ButtonsColorB><SelectionColorR>0</SelectionColorR><SelectionColorG>0</SelectionColorG><SelectionColorB>0</SelectionColorB><IsEventStripOpen>1</IsEventStripOpen><IsMinimizedLabelVisible>1</IsMinimizedLabelVisible></ProcessViewActivityLayoutData><ProcessViewActivityLayoutData Type="SourceCode.Workflow.Design.ProcessViewActivityLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><EventsLayoutData><ProcessViewEventLayoutData Type="SourceCode.Workflow.Design.ProcessViewEventLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e10bb1789350406ca149772d7c0643fa</Guid><Name>{1e6be7da-b378-44c3-915d-0cbce4e88647}</Name></ProcessViewEventLayoutData></EventsLayoutData><Guid>9cced6031ffd47969f88ad85cfa226f1</Guid><Width>190</Width><Height>48</Height><X>464</X><Y>352</Y><Name>{f16b396a-12c3-44ee-b2a7-dabab4fa4121}</Name><MainColorR>166</MainColorR><MainColorG>166</MainColorG><MainColorB>166</MainColorB><FontColorR>0</FontColorR><FontColorG>0</FontColorG><FontColorB>0</FontColorB><ButtonsColorR>1</ButtonsColorR><ButtonsColorG>97</ButtonsColorG><ButtonsColorB>154</ButtonsColorB><SelectionColorR>0</SelectionColorR><SelectionColorG>0</SelectionColorG><SelectionColorB>0</SelectionColorB><IsEventStripOpen>1</IsEventStripOpen><IsMinimizedLabelVisible>1</IsMinimizedLabelVisible></ProcessViewActivityLayoutData></ActivitiesLayoutData><LinesLayoutData><ProcessViewLineLayoutData Type="SourceCode.Workflow.Design.ProcessViewLineLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>2220f99932ad448381659948e5279799</Guid><StartMaximizedX>96</StartMaximizedX><StartMaximizedY>49</StartMaximizedY><StartMinimizedX>93</StartMinimizedX><StartMinimizedY>40</StartMinimizedY><EndMaximizedX>96</EndMaximizedX><EndMaximizedY>-10</EndMaximizedY><EndMinimizedX>93</EndMinimizedX><EndMinimizedY>0</EndMinimizedY><LabelLocked>0</LabelLocked><LabelVisible>1</LabelVisible><LabelDragged>0</LabelDragged><LabelLocationX>557</LabelLocationX><LabelLocationY>103</LabelLocationY><LineColorR>26</LineColorR><LineColorG>85</LineColorG><LineColorB>39</LineColorB><LineSelectionColorR>0</LineSelectionColorR><LineSelectionColorG>0</LineSelectionColorG><LineSelectionColorB>0</LineSelectionColorB><LinePinned>0</LinePinned><LineRenderPointCount>5</LineRenderPointCount><LineRenderPointX_0>560</LineRenderPointX_0><LineRenderPointY_0>89</LineRenderPointY_0><LineRenderPointX_1>560</LineRenderPointX_1><LineRenderPointY_1>107</LineRenderPointY_1><LineRenderPointX_2>560</LineRenderPointX_2><LineRenderPointY_2>139</LineRenderPointY_2><LineRenderPointX_3>560</LineRenderPointX_3><LineRenderPointY_3>172</LineRenderPointY_3><LineRenderPointX_4>560</LineRenderPointX_4><LineRenderPointY_4>182</LineRenderPointY_4><Name>{105e3e66-a41d-4690-833a-195bff1f512e}</Name></ProcessViewLineLayoutData><ProcessViewLineLayoutData Type="SourceCode.Workflow.Design.ProcessViewLineLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>2673f0db68d04e56b8176da6ce48db23</Guid><StartDirectionMaximized>Left</StartDirectionMaximized><StartMaximizedX>-14</StartMaximizedX><StartMaximizedY>27</StartMaximizedY><StartMinimizedX>20</StartMinimizedX><StartMinimizedY>40</StartMinimizedY><EndDirectionMaximized>Right</EndDirectionMaximized><EndMaximizedX>199</EndMaximizedX><EndMaximizedY>32</EndMaximizedY><EndMinimizedX>95</EndMinimizedX><EndMinimizedY>0</EndMinimizedY><Label>Cancel</Label><LabelLocked>0</LabelLocked><LabelVisible>1</LabelVisible><LabelDragged>1</LabelDragged><LabelLocationX>374</LabelLocationX><LabelLocationY>197</LabelLocationY><LineColorR>26</LineColorR><LineColorG>85</LineColorG><LineColorB>39</LineColorB><LineSelectionColorR>0</LineSelectionColorR><LineSelectionColorG>0</LineSelectionColorG><LineSelectionColorB>0</LineSelectionColorB><LinePinned>0</LinePinned><LineRenderPointCount>5</LineRenderPointCount><LineRenderPointX_0>462</LineRenderPointX_0><LineRenderPointY_0>219</LineRenderPointY_0><LineRenderPointX_1>444</LineRenderPointX_1><LineRenderPointY_1>219</LineRenderPointY_1><LineRenderPointX_2>390</LineRenderPointX_2><LineRenderPointY_2>219</LineRenderPointY_2><LineRenderPointX_3>337</LineRenderPointX_3><LineRenderPointY_3>219</LineRenderPointY_3><LineRenderPointX_4>327</LineRenderPointX_4><LineRenderPointY_4>219</LineRenderPointY_4><Name>{c0afc97c-19bf-4422-aff2-3187f145ddc4}</Name></ProcessViewLineLayoutData><ProcessViewLineLayoutData Type="SourceCode.Workflow.Design.ProcessViewLineLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>ceb15ba1d4e94c3998fab074a57a7fd1</Guid><StartDirectionMaximized>Right</StartDirectionMaximized><StartMaximizedX>205</StartMaximizedX><StartMaximizedY>31</StartMaximizedY><StartMinimizedX>100</StartMinimizedX><StartMinimizedY>40</StartMinimizedY><EndDirectionMaximized>Left</EndDirectionMaximized><EndMaximizedX>-10</EndMaximizedX><EndMaximizedY>32</EndMaximizedY><EndMinimizedX>95</EndMinimizedX><EndMinimizedY>0</EndMinimizedY><Label>Done</Label><LabelLocked>0</LabelLocked><LabelVisible>1</LabelVisible><LabelDragged>1</LabelDragged><LabelLocationX>713</LabelLocationX><LabelLocationY>200</LabelLocationY><LineColorR>26</LineColorR><LineColorG>85</LineColorG><LineColorB>39</LineColorB><LineSelectionColorR>0</LineSelectionColorR><LineSelectionColorG>0</LineSelectionColorG><LineSelectionColorB>0</LineSelectionColorB><LinePinned>0</LinePinned><LineRenderPointCount>5</LineRenderPointCount><LineRenderPointX_0>655</LineRenderPointX_0><LineRenderPointY_0>223</LineRenderPointY_0><LineRenderPointX_1>673</LineRenderPointX_1><LineRenderPointY_1>223</LineRenderPointY_1><LineRenderPointX_2>726</LineRenderPointX_2><LineRenderPointY_2>223</LineRenderPointY_2><LineRenderPointX_3>780</LineRenderPointX_3><LineRenderPointY_3>223</LineRenderPointY_3><LineRenderPointX_4>790</LineRenderPointX_4><LineRenderPointY_4>223</LineRenderPointY_4><Name>{56680954-7292-488d-a578-c15e1336182f}</Name></ProcessViewLineLayoutData><ProcessViewLineLayoutData Type="SourceCode.Workflow.Design.ProcessViewLineLayoutData" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>c43fef5c439e4ac08b115bc7d062968b</Guid><StartMaximizedX>95</StartMaximizedX><StartMaximizedY>70</StartMaximizedY><StartMinimizedX>95</StartMinimizedX><StartMinimizedY>70</StartMinimizedY><EndMaximizedX>92</EndMaximizedX><EndMaximizedY>0</EndMaximizedY><EndMinimizedX>92</EndMinimizedX><EndMinimizedY>0</EndMinimizedY><LabelLocked>0</LabelLocked><LabelVisible>1</LabelVisible><LabelDragged>0</LabelDragged><LabelLocationX>557</LabelLocationX><LabelLocationY>299</LabelLocationY><LineColorR>26</LineColorR><LineColorG>85</LineColorG><LineColorB>39</LineColorB><LineSelectionColorR>0</LineSelectionColorR><LineSelectionColorG>0</LineSelectionColorG><LineSelectionColorB>0</LineSelectionColorB><LinePinned>0</LinePinned><LineRenderPointCount>5</LineRenderPointCount><LineRenderPointX_0>559</LineRenderPointX_0><LineRenderPointY_0>263</LineRenderPointY_0><LineRenderPointX_1>559</LineRenderPointX_1><LineRenderPointY_1>281</LineRenderPointY_1><LineRenderPointX_2>559</LineRenderPointX_2><LineRenderPointY_2>306</LineRenderPointY_2><LineRenderPointX_3>559</LineRenderPointX_3><LineRenderPointY_3>332</LineRenderPointY_3><LineRenderPointX_4>559</LineRenderPointX_4><LineRenderPointY_4>342</LineRenderPointY_4><Name>{8c9537ad-93b0-4c7f-8bec-48fe3bc4be7d}</Name></ProcessViewLineLayoutData></LinesLayoutData><Guid>aa4d1e0a51184e0ab23e08512298169a</Guid><Name>ProcessView</Name><GridSizeWidth>16</GridSizeWidth><GridSizeHeight>16</GridSizeHeight></ProcessView><DocumentView Type="SourceCode.Workflow.Design.DocumentView" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>f40f7b919e3449e2a345ef9a09468dfe</Guid><Name>DocumentView</Name><ActivitiesHeading>Activities</ActivitiesHeading><ActivitiesHeadingFontData>Arial,12,Bold,None</ActivitiesHeadingFontData><ActivitiesDescription>Activities Section Description</ActivitiesDescription><ActivitiesDescriptionFontData>Arial,12,Bold,None</ActivitiesDescriptionFontData><LinesHeading>Lines</LinesHeading><LinesHeadingFontData>Arial,12,Bold,None</LinesHeadingFontData><LinesDescription>Arial,12,Bold,None</LinesDescription><DataFieldsAreaHeading>Data Fields</DataFieldsAreaHeading><DataFieldsAreaHeadingFontData>Arial,12,Bold,None</DataFieldsAreaHeadingFontData><DataFieldsAreaDescription>Data Fields Section Description</DataFieldsAreaDescription><DataFieldsAreaDescriptionFontData>Arial,12,Bold,None</DataFieldsAreaDescriptionFontData><XMLFieldsAreaHeading>XML Fields</XMLFieldsAreaHeading><XMLFieldsAreaHeadingFontData>Arial,12,Bold,None</XMLFieldsAreaHeadingFontData><XMLFieldsAreaDescription>XML Fields Section Description</XMLFieldsAreaDescription><XMLFieldsAreaDescriptionFontData>Arial,12,Bold,None</XMLFieldsAreaDescriptionFontData></DocumentView></Views><WizardDefinition Type="SourceCode.Workflow.Design.DefaultWizardDefinition" Assembly="SourceCode.Workflow.Authoring, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><PropertyWizardDefinitions><PropertyWizardDefinition Type="SourceCode.Workflow.Design.GeneralProperties.GeneralPropertiesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>5f024083830149a89670c73f61de202f</Guid><Name>{7d5a4fb8-6cfa-4c09-bd8e-b797ec929ec8}</Name><RegisteredItem>Process General Property Wizard</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Escalations.EscalationPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e4a8931a9e894c3e9c4ae9e5043e4d03</Guid><Name>{173fce9b-fab2-4e82-ab8b-4b0743262611}</Name><RegisteredItem>Process Escalations</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Exceptions.ExceptionPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>fcc5bbebdad945358b5fc953b4240515</Guid><Name>{7ec076d0-9bc0-4ded-8f8f-65b11919ca9b}</Name><RegisteredItem>Exception Rule</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.ProcessStartRule.DefaultProcessStartRuleWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>358ae1d73f684dbeae6bfb345b277de1</Guid><Name>{34d5b1e9-3bb6-41df-94f8-b64880c1dbe6}</Name><RegisteredItem>Process Start Rule</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.ProcessFinishRule.DefaultProcessFinishRuleWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>3cd877872e2c4f1cae163d6f46f78955</Guid><Name>{36c2da5e-0753-4a5a-8749-5fe8e727e842}</Name><RegisteredItem>Process Finish Rule</RegisteredItem></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.Associations.AssociationsPropertyDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><WorkflowSmartObjectsCreation Type="SourceCode.Workflow.Design.SmartObjectServices.SmartObjectCreation" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>9bcf9b2a9a174ceebcf617a5fbfcbc52</Guid><CreateProcessSmartObjects>1</CreateProcessSmartObjects></WorkflowSmartObjectsCreation><ReportingSmartObjectsCreation Type="SourceCode.Workflow.Design.SmartObjectServices.SmartObjectCreation" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>6f957df9a8db496b9e6da30980110320</Guid><CreateTask>1</CreateTask><CreateProcessSmartObjects>1</CreateProcessSmartObjects></ReportingSmartObjectsCreation><SmartObjectServicesDesignerMappings><SmartObjectServicesDesignerMapping Type="SourceCode.Workflow.Design.SmartObjectServices.SmartObjectServicesDesignerMapping" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>51d54a03406e47aeacde7dea85008b3c</Guid><DesignerGuid>1f8f08a8-3693-42e5-9334-07200f9bbe97</DesignerGuid><WorkflowSmartObjectGuid>09542e25-115f-4c38-a0e8-49770891e703</WorkflowSmartObjectGuid><WorkflowReportingSmartObjectGuid>9e9c8684-b368-49b6-8d6c-f5ed24c07d06</WorkflowReportingSmartObjectGuid></SmartObjectServicesDesignerMapping><SmartObjectServicesDesignerMapping Type="SourceCode.Workflow.Design.SmartObjectServices.SmartObjectServicesDesignerMapping" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>f7b488b33dc141f897d4b1cccedbb870</Guid><DesignerGuid>454932ca-0430-4016-84a7-434300bba96a</DesignerGuid><WorkflowSmartObjectGuid>daf6604c-5ab1-44e9-81a1-7e068b733dd9</WorkflowSmartObjectGuid><WorkflowReportingSmartObjectGuid>139396c9-7e3c-447b-b17c-b1849f39aa3a</WorkflowReportingSmartObjectGuid></SmartObjectServicesDesignerMapping><SmartObjectServicesDesignerMapping Type="SourceCode.Workflow.Design.SmartObjectServices.SmartObjectServicesDesignerMapping" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>368bf38a50054f20b899a3cbe8c8e3f8</Guid><DesignerGuid>097334ab-b383-4c75-8c56-3741d549d394</DesignerGuid><WorkflowSmartObjectGuid>6f881971-f6ee-4d6b-9e5a-62ddf096c78d</WorkflowSmartObjectGuid><WorkflowReportingSmartObjectGuid>e9c3c21a-c781-4738-9282-fba1bf1165f9</WorkflowReportingSmartObjectGuid></SmartObjectServicesDesignerMapping><SmartObjectServicesDesignerMapping Type="SourceCode.Workflow.Design.SmartObjectServices.SmartObjectServicesDesignerMapping" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>a1d58e7e000a49db91527613d7321708</Guid><DesignerGuid>b3cce48f-f7ce-4067-b8ba-b2cb92a0d562</DesignerGuid><WorkflowSmartObjectGuid>45fa8f15-4b8e-4711-8a52-efdbe2c1b38e</WorkflowSmartObjectGuid><WorkflowReportingSmartObjectGuid>b40c460a-2c00-43c5-b52a-8c7fb4baa2a8</WorkflowReportingSmartObjectGuid></SmartObjectServicesDesignerMapping><SmartObjectServicesDesignerMapping Type="SourceCode.Workflow.Design.SmartObjectServices.SmartObjectServicesDesignerMapping" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>bb62834bb1e344cfb50fcc6722dbe2c1</Guid><DesignerGuid>f69ba30d-6b50-4074-a375-798bc3132712</DesignerGuid><WorkflowSmartObjectGuid>fc1b2f45-e1da-418d-89d2-b76a3a39fcd8</WorkflowSmartObjectGuid><WorkflowReportingSmartObjectGuid>0f3ad0ee-4bfb-4587-b7cb-9780164537a7</WorkflowReportingSmartObjectGuid></SmartObjectServicesDesignerMapping><SmartObjectServicesDesignerMapping Type="SourceCode.Workflow.Design.SmartObjectServices.SmartObjectServicesDesignerMapping" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>35cc5b6153584f158928f6f8e74c0fc2</Guid><DesignerGuid>9837affb-aa7e-4cce-bf8f-af5f1d32b33e</DesignerGuid><WorkflowSmartObjectGuid>4a78ab4d-eccf-4122-b013-67a9458dce8a</WorkflowSmartObjectGuid><WorkflowReportingSmartObjectGuid>dd55bd00-e92a-4aa4-babe-0c32b8d54f81</WorkflowReportingSmartObjectGuid></SmartObjectServicesDesignerMapping><SmartObjectServicesDesignerMapping Type="SourceCode.Workflow.Design.SmartObjectServices.SmartObjectServicesDesignerMapping" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>2e87444d28f9403f9bab659aa0d78597</Guid><DesignerGuid>36ca722e-3489-4325-aa7a-ff1331db725d</DesignerGuid><WorkflowSmartObjectGuid>e52448c3-4db1-4189-bc0c-ae30afd63927</WorkflowSmartObjectGuid><WorkflowReportingSmartObjectGuid>cc7ed23e-d8dd-49ee-97f1-af0f413ea599</WorkflowReportingSmartObjectGuid></SmartObjectServicesDesignerMapping><SmartObjectServicesDesignerMapping Type="SourceCode.Workflow.Design.SmartObjectServices.SmartObjectServicesDesignerMapping" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>db9131019aa540679c121daf23072c91</Guid><DesignerGuid>502fc7ac-d034-44c1-8717-dbf75bf541dc</DesignerGuid><WorkflowSmartObjectGuid>04a6cfbf-8aa9-43a5-9dcd-aa3497eec8ee</WorkflowSmartObjectGuid><WorkflowReportingSmartObjectGuid>065457f4-dfd6-47e7-a4c5-8bb063092abf</WorkflowReportingSmartObjectGuid></SmartObjectServicesDesignerMapping><SmartObjectServicesDesignerMapping Type="SourceCode.Workflow.Design.SmartObjectServices.SmartObjectServicesDesignerMapping" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>b82f8636f3684bdd9de50ac1f390b39e</Guid><DesignerGuid>a8fb599e-a3ed-4004-9635-e060ea71d7ae</DesignerGuid><WorkflowSmartObjectGuid>5b4eb051-0826-47e7-b2e0-06983b7f28b6</WorkflowSmartObjectGuid><WorkflowReportingSmartObjectGuid>5c621459-b39c-4007-9462-7360ba473580</WorkflowReportingSmartObjectGuid></SmartObjectServicesDesignerMapping><SmartObjectServicesDesignerMapping Type="SourceCode.Workflow.Design.SmartObjectServices.SmartObjectServicesDesignerMapping" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>d94fdd7bf0fa434fa1181033b62492c2</Guid><DesignerGuid>e2dd322e-4e5d-46c0-a7cf-730a513ae984</DesignerGuid><WorkflowSmartObjectGuid>977c98da-5e08-455a-9196-c0264f97a0fb</WorkflowSmartObjectGuid><WorkflowReportingSmartObjectGuid>ac69533c-239c-42b4-aa34-6b676c0123f0</WorkflowReportingSmartObjectGuid></SmartObjectServicesDesignerMapping><SmartObjectServicesDesignerMapping Type="SourceCode.Workflow.Design.SmartObjectServices.SmartObjectServicesDesignerMapping" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>6befb3e9a3004f0ab9a1facef9e87b2c</Guid><DesignerGuid>f16b396a-12c3-44ee-b2a7-dabab4fa4121</DesignerGuid><WorkflowSmartObjectGuid>7a837b6c-9bbf-485f-8c5c-ae0ad20dfb43</WorkflowSmartObjectGuid><WorkflowReportingSmartObjectGuid>a51bcaab-e38a-46e0-9a93-33309c4fa9e1</WorkflowReportingSmartObjectGuid></SmartObjectServicesDesignerMapping><SmartObjectServicesDesignerMapping Type="SourceCode.Workflow.Design.SmartObjectServices.SmartObjectServicesDesignerMapping" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>d7ffbb2f181c42b6a7dd2aa82d595a11</Guid><DesignerGuid>1e6be7da-b378-44c3-915d-0cbce4e88647</DesignerGuid><WorkflowSmartObjectGuid>c3e8793f-94aa-4fe2-a498-a461ec9cdf27</WorkflowSmartObjectGuid><WorkflowReportingSmartObjectGuid>6a817ca7-9a2c-45a5-be35-0fa23554fc36</WorkflowReportingSmartObjectGuid></SmartObjectServicesDesignerMapping></SmartObjectServicesDesignerMappings><Guid>6fbbf08f8d564daa84d65568d5e0b40b</Guid><Name>{07cb6f09-d48c-4258-af9b-9b14c3a854b8}</Name><RegisteredItem>2124FC5B-E0CF-49D9-8331-DF2B47F2A93E</RegisteredItem><UseSmartObjectServicesDesignerMapping>1</UseSmartObjectServicesDesignerMapping></PropertyWizardDefinition><PropertyWizardDefinition Type="SourceCode.Workflow.Design.References.ProjectReferencesPropertyWizardDefinition" Assembly="SourceCode.Workflow.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=16a2c5aaaa1b130d"><Guid>e9e4031ddd9948aea563826f5c7c40b6</Guid><Name>{9b69bafb-6ad3-451b-a22d-03b60e9de005}</Name><RegisteredItem>FDA04D27-504A-4D24-A5BC-854E8CF395E0</RegisteredItem></PropertyWizardDefinition></PropertyWizardDefinitions><Guid>5de7e5c71dc94185969f1880e340e037</Guid><Name /><Status>Executed</Status><RegisteredItem>Default Process Wizard</RegisteredItem></WizardDefinition><Guid>1f8f08a8369342e5933407200f9bbe97</Guid><Name>OperatorTask</Name><MetaData>Blank</MetaData><ExtenderNamespace>fd7ed7e1f1e345d7a3a78850c91470e2</ExtenderNamespace><OriginalPath>OperatorTask.kprx</OriginalPath><DefaultExecutionLayer>Default</DefaultExecutionLayer><CurrentExecutionLayer>Default</CurrentExecutionLayer><CurrentView>ProcessView</CurrentView></Process>